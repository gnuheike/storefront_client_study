{
  "openapi": "3.0.0",
  "info": {
    "description": "# Overview\n\n* **Version:** 2.0.0\n* **Servers**: `https://store.xsolla.com/api`\n* **[Contact Us by Email](mailto:integration@xsolla.com)**\n* **Contact URL:** https://xsolla.com/\n* **Required TLS version:** 1.2\n\nShop Builder API provides a third-party solution for implementing\nthe server side for your store interface. Use the endpoints to manage in-game items,\nin-game currencies, cart, player inventory, promotions, game library, etc.\n\n# Download API definition\n\nYou can download the API definition in two formats:\n- [YAML](https://api.redocly.com/registry/bundle/xsolla/store-en/v1/openapi.yaml)\n- [JSON](https://api.redocly.com/registry/bundle/xsolla/store-en/v1/openapi.json)",
    "version": "2.0.0",
    "title": "Shop Builder API"
  },
  "servers": [
    {
      "url": "https://store.xsolla.com/api"
    }
  ],
  "tags": [
    {
      "name": "attribute-admin",
      "x-displayName": "Admin"
    },
    {
      "name": "personalized-catalog",
      "x-displayName": "Personalized catalog",
      "description": "This API allows to specify rules for user attributes.\nIf the user meets all conditions for a concrete rule, personalized items will be shown.\n\nFor personalized promotions see [Promotions section](/api/shop-builder/tag/promotions-discounts).\n\nTo pass attributes before a purchase, you can use [Xsolla Login API](/api/login/operation/update-users-attributes-from-server/) or pass them into [user.attributes property while generating token using Pay Station API](/api/pay-station/operation/create-token)."
    },
    {
      "name": "bundles-admin",
      "x-displayName": "Admin"
    },
    {
      "name": "bundles-catalog",
      "x-displayName": "Catalog"
    },
    {
      "name": "cart-client-side",
      "x-displayName": "Cart (client-side)"
    },
    {
      "name": "cart-server-side",
      "x-displayName": "Cart (server-side)"
    },
    {
      "name": "payment-client-side",
      "x-displayName": "Payment (client-side)"
    },
    {
      "name": "payment-server-side",
      "x-displayName": "Payment (server-side)"
    },
    {
      "name": "order",
      "x-displayName": "Order"
    },
    {
      "name": "common-webhooks",
      "x-displayName": "Webhooks"
    },
    {
      "name": "common-pre-orders",
      "x-displayName": "Pre-Orders"
    },
    {
      "name": "common-merchant",
      "x-displayName": "Merchant"
    },
    {
      "name": "common-catalog",
      "x-displayName": "Catalog",
      "description": "This API allows getting any kind of sellable items or specific item.\n"
    },
    {
      "name": "game-keys-catalog",
      "x-displayName": "Catalog"
    },
    {
      "name": "game-keys-entitlement",
      "x-displayName": "Entitlement"
    },
    {
      "name": "game-keys-admin",
      "x-displayName": "Admin"
    },
    {
      "name": "promotions-common",
      "x-displayName": "Common"
    },
    {
      "name": "promotions-coupons",
      "x-displayName": "Coupons",
      "description": "This API allows to you to manage coupons."
    },
    {
      "name": "promotions-promo-codes",
      "x-displayName": "Promo codes",
      "description": "This API allows to manage promo codes."
    },
    {
      "name": "promotions-unique-catalog-offers",
      "x-displayName": "Unique catalog offers",
      "description": "This API allows to you to manage unique catalog offers."
    },
    {
      "name": "promotions-discounts",
      "x-displayName": "Discounts",
      "description": "This API allows to you to manage discount promotions."
    },
    {
      "name": "promotions-bonuses",
      "x-displayName": "Bonuses",
      "description": "This API allows to manage bonus promotions."
    },
    {
      "name": "virtual-items-currency-admin",
      "x-displayName": "Admin"
    },
    {
      "name": "virtual-items-currency-catalog",
      "x-displayName": "Catalog"
    },
    {
      "name": "virtual-payment",
      "x-displayName": "Virtual payment"
    },
    {
      "name": "common-regions",
      "x-displayName": "Common regions"
    },
    {
      "name": "free-item",
      "x-displayName": "Free items"
    },
    {
      "name": "user-limits-admin",
      "x-displayName": "Management"
    },
    {
      "name": "reward-chain-value-points-admin",
      "x-displayName": "Admin"
    },
    {
      "name": "reward-chain-client",
      "x-displayName": "Client"
    },
    {
      "name": "offer-chain-admin",
      "x-displayName": "Admin"
    },
    {
      "name": "offer-chain-client",
      "x-displayName": "Client"
    },
    {
      "name": "clan-reward-chain-client",
      "x-displayName": "Clans client"
    },
    {
      "name": "upsell-admin",
      "x-displayName": "Admin"
    },
    {
      "name": "upsell-client",
      "x-displayName": "Client"
    },
    {
      "name": "connector-admin",
      "x-displayName": "Admin"
    }
  ],
  "paths": {
    "/v2/project/{project_id}/admin/attribute": {
      "get": {
        "summary": "Get list of attributes (admin)",
        "description": "Gets the list of attributes from a project for administration.\n",
        "operationId": "admin-get-attribute-list",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "tags": [
          "attribute-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-attribute-list-response"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create attribute",
        "description": "Creates an attribute.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-create-attribute",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "attribute-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-update-attribute"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-admin-create-attribute"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/422-validation-failed"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/attribute/{external_id}": {
      "put": {
        "summary": "Update attribute",
        "description": "Updates an attribute.\n",
        "operationId": "admin-update-attribute",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-attr-path-param"
          }
        ],
        "tags": [
          "attribute-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-update-attribute"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204-admin-update-attribute"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/422-validation-failed"
          }
        }
      },
      "get": {
        "summary": "Get specified attribute",
        "description": "Gets a specified attribute.",
        "operationId": "admin-get-attribute",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-attr-path-param"
          }
        ],
        "tags": [
          "attribute-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-attribute"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-attribute-not-found"
          }
        }
      },
      "delete": {
        "summary": "Delete attribute",
        "description": "Deletes an attribute.\n<div class=\"notice\"><strong>Notice</strong><br><br>If you delete an item attribute, all its data and connections with items will be lost.</div>\n",
        "operationId": "delete-attribute",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-attr-path-param"
          }
        ],
        "tags": [
          "attribute-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Attribute was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/attribute/{external_id}/value": {
      "post": {
        "summary": "Create attribute value",
        "description": "Creates an attribute value.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of attribute values. The default and maximum value is <strong>20 values per attribute.</strong></div>\n",
        "operationId": "admin-create-attribute-value",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-attr-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-update-attribute-value"
        },
        "tags": [
          "attribute-admin"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-admin-create-attribute-value"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "403": {
            "$ref": "#/components/responses/403-auth-header-not-sent"
          },
          "404": {
            "$ref": "#/components/responses/404-attribute-not-found"
          },
          "422": {
            "$ref": "#/components/responses/422-create-update-attribute-value"
          }
        }
      },
      "delete": {
        "summary": "Delete all values of attribute",
        "description": "Deletes all values of the attribute.\n<div class=\"notice\"><strong>Notice</strong><br><br>If you delete an attribute's value, all connections between the attribute and items will be lost. To change the attribute value for an item, use the <a href=\"https://developers.xsolla.com/api/shop-builder/operation/admin-update-attribute-value/\" target=\"_blank\">Update attribute value</a> API call instead of deleting the value and creating a new one.</div>\n",
        "operationId": "admin-delete-all-attribute-value",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-attr-path-param"
          }
        ],
        "tags": [
          "attribute-admin"
        ],
        "responses": {
          "204": {
            "description": "Attribute values was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "403": {
            "$ref": "#/components/responses/403-auth-header-not-sent"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/attribute/{external_id}/value/{value_external_id}": {
      "put": {
        "summary": "Update attribute value",
        "description": "Updates an attribute values.",
        "operationId": "admin-update-attribute-value",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/value_external_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-attr-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-update-attribute-value"
        },
        "tags": [
          "attribute-admin"
        ],
        "responses": {
          "204": {
            "description": "Attribute value was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "403": {
            "$ref": "#/components/responses/403-auth-header-not-sent"
          },
          "404": {
            "$ref": "#/components/responses/404-attribute-value-not-found"
          },
          "422": {
            "$ref": "#/components/responses/422-create-update-attribute-value"
          }
        }
      },
      "delete": {
        "summary": "Delete attribute value",
        "description": "Deletes an attribute value.\n<div class=\"notice\"><strong>Notice</strong><br><br>If you delete an attribute's value, all connections  between the attribute and items will be lost. To change the attribute value for an item, use the <a href=\"https://developers.xsolla.com/api/shop-builder/operation/admin-update-attribute-value/\" target=\"_blank\">Update attribute value</a> API call instead of deleting the value and creating a new one.</div>\n",
        "operationId": "admin-delete-attribute-value",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/value_external_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-attr-path-param"
          }
        ],
        "tags": [
          "attribute-admin"
        ],
        "responses": {
          "204": {
            "description": "Attribute value was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "403": {
            "$ref": "#/components/responses/403-auth-header-not-sent"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/user/attribute/rule": {
      "get": {
        "tags": [
          "personalized-catalog"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-filter-rules",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/is_enabled-query-param"
          }
        ],
        "summary": "Get list of catalog filter rules",
        "description": "Gets all rules applying to user attributes.\n",
        "responses": {
          "200": {
            "description": "Rules were successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user-attribute_personalized-catalog"
                      }
                    },
                    "total_items_count": {
                      "type": "number",
                      "description": "Total number of rules."
                    },
                    "has_more": {
                      "type": "boolean",
                      "description": "If another page with rules exists."
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "items": [
                        {
                          "rule_id": 1,
                          "name": "Ork race armor rule",
                          "is_enabled": true,
                          "is_satisfied_for_unauth": false,
                          "attribute_conditions": [
                            {
                              "attribute": "race",
                              "operator": "eq",
                              "value": "ork",
                              "type": "string",
                              "can_be_missing": false
                            }
                          ],
                          "items": [
                            {
                              "item_id": 1,
                              "sku": "com.xsolla.ork_armor_1",
                              "name": "Ork Armor",
                              "type": "virtual_good"
                            },
                            {
                              "item_id": 2,
                              "sku": "com.xsolla.potion_pack_1",
                              "name": "Potion pack",
                              "type": "bundle",
                              "bundle_type": "standard"
                            }
                          ]
                        }
                      ],
                      "total_items_count": 20,
                      "has_more": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Common_401-complex"
          },
          "403": {
            "$ref": "#/components/responses/403-auth-header-not-sent"
          }
        }
      },
      "post": {
        "tags": [
          "personalized-catalog"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "create-filter-rule",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "summary": "Create catalog filter rule",
        "description": "Create rule for user attributes.\n",
        "responses": {
          "201": {
            "description": "Rule was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rule_id": {
                      "type": "number",
                      "description": "Rule ID."
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "rule_id": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Common_401-complex"
          },
          "422": {
            "$ref": "#/components/responses/Common_422-body-validation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/personalized-catalog_create-update-body"
        }
      }
    },
    "/v2/project/{project_id}/admin/user/attribute/rule/all": {
      "get": {
        "tags": [
          "personalized-catalog"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-all-filter-rules",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "summary": "Get all catalog rules for searching on client-side",
        "description": "Gets a list of all catalog rules for searching on the client-side.\n<div class=\"notice\"><strong>Attention</strong><br><br>Returns only rule id, name and is_enabled</div>\n",
        "responses": {
          "200": {
            "description": "Rules were successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user-attribute_personalized-catalog_all"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "items": [
                        {
                          "rule_id": 1,
                          "name": "Ork race armor rule",
                          "is_enabled": true,
                          "is_satisfied_for_unauth": false
                        },
                        {
                          "rule_id": 2,
                          "name": "Age",
                          "is_enabled": false,
                          "is_satisfied_for_unauth": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Common_401-complex"
          },
          "403": {
            "$ref": "#/components/responses/403-auth-header-not-sent"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/user/attribute/rule/{rule_id}": {
      "get": {
        "tags": [
          "personalized-catalog"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-filter-rule-by-id",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/personalized-catalog-rule_id-path-param"
          }
        ],
        "summary": "Get catalog filter rule",
        "description": "Get specific rule applying to user attributes.\n",
        "responses": {
          "200": {
            "description": "Rule was successfuly recieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user-attribute_personalized-catalog"
                },
                "examples": {
                  "response": {
                    "value": {
                      "rule_id": 1,
                      "name": "Ork race armor rule",
                      "is_enabled": true,
                      "is_satisfied_for_unauth": true,
                      "attribute_conditions": [
                        {
                          "attribute": "race",
                          "operator": "eq",
                          "value": "ork",
                          "type": "string",
                          "can_be_missing": false
                        }
                      ],
                      "items": [
                        {
                          "item_id": 1,
                          "sku": "com.xsolla.ork_armor_1",
                          "name": "Ork Armor"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Common_401-complex"
          }
        }
      },
      "put": {
        "tags": [
          "personalized-catalog"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "update-filter-rule-by-id",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/personalized-catalog-rule_id-path-param"
          }
        ],
        "summary": "Update catalog filter rule",
        "description": "Updates a specific rule applying to user attributes. The default value will be used for a not specified property (if property is not required).\n",
        "responses": {
          "204": {
            "description": "Successful update."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-complex"
          },
          "422": {
            "$ref": "#/components/responses/Common_422-body-validation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/personalized-catalog_create-update-body"
        }
      },
      "patch": {
        "tags": [
          "personalized-catalog"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "patch-filter-rule-by-id",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/personalized-catalog-rule_id-path-param"
          }
        ],
        "summary": "Patch catalog filter rule",
        "description": "Updates a specific rule applying to user attributes. The current value will be used for a not specified property.\n",
        "responses": {
          "204": {
            "description": "Update was successful."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-complex"
          },
          "422": {
            "$ref": "#/components/responses/Common_422-body-validation"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user-attribute_personalized-catalog-body"
              },
              "example": {
                "is_enabled": false
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "personalized-catalog"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "delete-filter-rule-by-id",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/personalized-catalog-rule_id-path-param"
          }
        ],
        "summary": "Delete catalog filter rule",
        "description": "Deletes a specific rule.\n",
        "responses": {
          "204": {
            "description": "Delete was successful."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-complex"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/bundle": {
      "get": {
        "summary": "Get list of bundles (admin)",
        "description": "Gets the list of bundles within a project for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-bundle-list",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Bundles_200-admin-get-bundle-list"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create bundle",
        "description": "Creates a bundle.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-create-bundle",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Bundles_bundle"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Bundles_201-admin-create-bundle"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Bundles_422-invalid-request"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/bundle/group/id/{group_id}": {
      "get": {
        "summary": "Get list of bundles by specified group id",
        "description": "Gets the list of bundles within a group for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-bundle-list-in-group-by-id",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/group_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Bundles_200-admin-get-bundle-list-in-group"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/bundle/group/external_id/{external_id}": {
      "get": {
        "summary": "Get list of bundles by specified group external id",
        "description": "Gets the list of bundles within a group for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-bundle-list-in-group-by-external-id",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-group-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Bundles_200-admin-get-bundle-list-in-group"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/bundle/sku/{sku}": {
      "put": {
        "summary": "Update bundle",
        "description": "Updates a bundle.\n",
        "operationId": "admin-update-bundle",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/sku-path-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Bundles_bundle"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Bundles_204-admin-update-bundle"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Bundles_422-invalid-request"
          }
        }
      },
      "delete": {
        "summary": "Delete bundle",
        "description": "Deletes a bundle.\n",
        "operationId": "admin-delete-bundle",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/sku-path-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Bundles_204-admin-delete-bundle"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          }
        }
      },
      "get": {
        "summary": "Get bundle",
        "description": "Gets the bundle within a project for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-bundle",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/sku-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Bundles_200-admin-get-bundle"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/bundle/sku/{sku}/show": {
      "put": {
        "summary": "Show bundle in catalog",
        "description": "Shows a bundle in a catalog.\n",
        "operationId": "admin-show-bundle",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/sku-path-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Bundles_204-admin-show-bundle"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/bundle/sku/{sku}/hide": {
      "put": {
        "summary": "Hide bundle in catalog",
        "description": "Hides a bundle in a catalog.\n",
        "operationId": "admin-hide-bundle",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/sku-path-param"
          }
        ],
        "tags": [
          "bundles-admin"
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Bundles_204-admin-hide-bundle"
          },
          "401": {
            "$ref": "#/components/responses/Bundles_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/bundle": {
      "get": {
        "summary": "Get list of bundles",
        "description": "Gets a list of bundles for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong></div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "operationId": "get-bundle-list",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "bundles-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Bundles_200-get-bundle-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/bundle/sku/{sku}": {
      "get": {
        "summary": "Get specified bundle",
        "description": "Gets a specified bundle.\n\n<div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "operationId": "get-bundle",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/sku-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "bundles-catalog"
        ],
        "responses": {
          "200": {
            "description": "The specified bundle was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundles_client_bundle"
                },
                "examples": {
                  "response": {
                    "$ref": "#/components/examples/Bundles_200-get-bundle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/items/bundle/group/{external_id}": {
      "get": {
        "summary": "Get list of bundles by specified group",
        "description": "Gets a list of bundles within a group for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong></div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "operationId": "get-bundle-list-in-group",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-group-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "bundles-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Bundles_200-get-bundle-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/cart/{cart_id}": {
      "get": {
        "summary": "Get cart by cart ID",
        "description": "Returns user’s cart by cart ID.",
        "operationId": "get-cart-by-id",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/cart_id-path-param"
          },
          {
            "$ref": "#/components/parameters/currency-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-get-cart-json-model"
          }
        },
        "security": [
          {
            "AuthForCart": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/cart": {
      "get": {
        "summary": "Get current user's cart",
        "description": "Returns the current user's cart.",
        "operationId": "get-user-cart",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/currency-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-get-cart-json-model"
          }
        },
        "security": [
          {
            "AuthForCart": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/cart/{cart_id}/clear": {
      "put": {
        "summary": "Delete all cart items by cart ID",
        "description": "Deletes all cart items.",
        "operationId": "cart-clear-by-id",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/cart_id-path-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "responses": {
          "204": {
            "description": "The cart was successfully cleared."
          }
        },
        "security": [
          {
            "AuthForCart": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/cart/clear": {
      "put": {
        "summary": "Delete all cart items from current cart",
        "description": "Deletes all cart items.",
        "operationId": "cart-clear",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "responses": {
          "204": {
            "description": "The cart was successfully cleared."
          }
        },
        "security": [
          {
            "AuthForCart": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/cart/fill": {
      "put": {
        "summary": "Fill cart with items",
        "description": "Fills the cart with items. If the cart already has an item with the same SKU, the existing item will be replaced by the passed value.",
        "operationId": "cart-fill",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_fill-cart-json-model"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-fill-cart-json-model"
          }
        }
      }
    },
    "/v2/project/{project_id}/cart/{cart_id}/fill": {
      "put": {
        "summary": "Fill specific cart with items",
        "description": "Fills the specific cart with items. If the cart already has an item with the same SKU, the existing item position will be replaced by the passed value.",
        "operationId": "cart-fill-by-id",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/cart_id-path-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_fill-cart-json-model"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-fill-cart-json-model"
          }
        }
      }
    },
    "/v2/project/{project_id}/cart/{cart_id}/item/{item_sku}": {
      "put": {
        "summary": "Update cart item by cart ID",
        "description": "Updates an existing cart item or creates the one in the cart.",
        "operationId": "put-item-by-cart-id",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/cart_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_put-item-by-cart-idJsonModel"
        },
        "responses": {
          "204": {
            "description": "The cart was successfully updated."
          },
          "404": {
            "$ref": "#/components/responses/Cart-Payment_404-item"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-non-negative-quantity"
          }
        }
      },
      "delete": {
        "summary": "Delete cart item by cart ID",
        "description": "Removes an item from the cart.",
        "operationId": "delete-item-by-cart-id",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/cart_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "responses": {
          "204": {
            "description": "The item from the cart was successfully deleted."
          },
          "404": {
            "$ref": "#/components/responses/Cart-Payment_404-item"
          }
        }
      }
    },
    "/v2/project/{project_id}/cart/item/{item_sku}": {
      "put": {
        "summary": "Update cart item from current cart",
        "description": "Updates an existing cart item or creates the one in the cart.",
        "operationId": "put-item",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_put-item-by-cart-idJsonModel"
        },
        "responses": {
          "204": {
            "description": "The cart was successfully updated."
          },
          "404": {
            "$ref": "#/components/responses/Cart-Payment_404-item"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-can-put-only-virtual-good-to-cart"
          }
        }
      },
      "delete": {
        "summary": "Delete cart item from current cart",
        "description": "Removes an item from the cart.",
        "operationId": "delete-item",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "cart-client-side"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "responses": {
          "204": {
            "description": "The item from the cart was successfully deleted."
          },
          "404": {
            "$ref": "#/components/responses/Cart-Payment_404-item"
          }
        }
      }
    },
    "/v2/project/{project_id}/payment/cart/{cart_id}": {
      "post": {
        "summary": "Create order with all items from particular cart",
        "description": "Used for client-to-server integration. Creates an order with all items from the particular cart and generates a payment token for it. The created order gets the `new` order status.\n\nThe client IP is used to determine the user’s country, which is then used to apply the corresponding currency and available payment methods for the order.\n\nTo open the payment UI in a new window, use the following link: `https://secure.xsolla.com/paystation4/?token={token}`, where `{token}` is the received token.\n\nFor testing purposes, use this URL: `https://sandbox-secure.xsolla.com/paystation4/?token={token}`.\n\n<div class=\"notice\"><strong>Notice</strong> <br><br> As this method uses the IP to determine the user’s country and select a currency for the order, it is important to only use this method from the client side and not from the server side. Using this method from the server side may cause incorrect currency determination and affect payment methods in <a href=\"https://developers.xsolla.com/doc/pay-station/\">Pay Station</a>. </div>\n",
        "operationId": "create-order-by-cart-id",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/cart_id-path-param"
          }
        ],
        "tags": [
          "payment-client-side"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_create-order-by-cart-idJsonModel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-order-created"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-invalid-cart"
          }
        }
      }
    },
    "/v2/project/{project_id}/payment/cart": {
      "post": {
        "summary": "Create order with all items from current cart",
        "description": "Used for client-to-server integration. Creates an order with all items from the cart and generates a payment token for it. The created order gets the `new` order status.\n\nThe client IP is used to determine the user’s country, which is then used to apply the corresponding currency and available payment methods for the order.\n\nTo open the payment UI in a new window, use the following link: `https://secure.xsolla.com/paystation4/?token={token}`, where `{token}` is the received token.\n\nFor testing purposes, use this URL: `https://sandbox-secure.xsolla.com/paystation4/?token={token}`.\n\n<div class=\"notice\"><strong>Notice</strong> <br><br> As this method uses the IP to determine the user’s country and select a currency for the order, it is important to only use this method from the client side and not from the server side. Using this method from the server side may cause incorrect currency determination and affect payment methods in <a href=\"https://developers.xsolla.com/doc/pay-station/\">Pay Station</a>. </div>\n",
        "operationId": "create-order",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "payment-client-side"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_create-order-by-cart-idJsonModel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-order-created"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-invalid-cart"
          }
        }
      }
    },
    "/v2/project/{project_id}/payment/item/{item_sku}": {
      "post": {
        "summary": "Create order with specified item",
        "description": "Used for client-to-server integration. Creates an order with a specified item and generates a payment token for it. The created order gets the `new` order status.\n\nThe client IP is used to determine the user’s country, which is then used to apply the corresponding currency and available payment methods for the order.\n\nTo open the payment UI in a new window, use the following link: `https://secure.xsolla.com/paystation4/?token={token}`, where `{token}` is the received token.\n\nFor testing purposes, use this URL: `https://sandbox-secure.xsolla.com/paystation4/?token={token}`.\n\n<div class=\"notice\"><strong>Notice</strong> <br><br> As this method uses the IP to determine the user’s country and select a currency for the order, it is important to only use this method from the client side and not from the server side. Using this method from the server side may cause incorrect currency determination and affect payment methods in <a href=\"https://developers.xsolla.com/doc/pay-station/\">Pay Station</a>. </div>\n",
        "operationId": "create-order-with-item",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "payment-client-side"
        ],
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_create-order-with-specified-item-idJsonModel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-order-created"
          },
          "404": {
            "$ref": "#/components/responses/Cart-Payment_404-create-order-with-item-not-found-errors"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-create-order-with-item-invalid"
          }
        }
      }
    },
    "/v2/project/{project_id}/free/cart": {
      "post": {
        "summary": "Create order with free cart",
        "description": "Creates an order with all items from the free cart. The created order will get a `done` order status.\n",
        "operationId": "create-free-order",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "free-item"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_create-order-by-cart-idJsonModel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Free_200-order-created"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-invalid-cart"
          }
        }
      }
    },
    "/v2/project/{project_id}/free/cart/{cart_id}": {
      "post": {
        "summary": "Create order with particular free cart",
        "description": "Creates an order with all items from the particular free cart. The created order will get a `done` order status.\n",
        "operationId": "create-free-order-by-cart-id",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/cart_id-path-param"
          }
        ],
        "tags": [
          "free-item"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_create-order-by-cart-idJsonModel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Free_200-order-created"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-invalid-cart"
          }
        }
      }
    },
    "/v2/project/{project_id}/free/item/{item_sku}": {
      "post": {
        "summary": "Create order with specified free item",
        "description": "Creates an order with a specified free item. The created order will get a `done` order status.\n",
        "operationId": "create-free-order-with-item",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "free-item"
        ],
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_create-order-with-specified-item-idJsonModel"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Free_200-order-created"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-invalid-item"
          }
        }
      }
    },
    "/v2/project/{project_id}/order/{order_id}": {
      "get": {
        "summary": "Get order",
        "description": "Retrieves a specified order.",
        "operationId": "get-order",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/order_id-path-param"
          }
        ],
        "tags": [
          "order"
        ],
        "security": [
          {
            "AuthForCart": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-get-order"
          },
          "404": {
            "$ref": "#/components/responses/Cart-Payment_404-get-order"
          }
        }
      }
    },
    "/v3/project/{project_id}/admin/order/search": {
      "post": {
        "summary": "Get orders list for specified period",
        "description": "Retrieves orders list, arranged from the earliest to the latest creation date.",
        "operationId": "admin-order-search",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "order"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/admin-order-search"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-order-search"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      }
    },
    "/v3/project/{project_id}/admin/payment/token": {
      "post": {
        "operationId": "admin-create-payment-token",
        "x-server": true,
        "summary": "Create payment token for purchase",
        "description": "Generates an order and a payment token for it. The order is generated based on the items passed in the request body.\n\nTo open the payment UI in a new window, use the following link: `https://secure.xsolla.com/paystation4/?token={token}`, where `{token}` is the received token.\n\nFor testing purposes, use this URL: `https://sandbox-secure.xsolla.com/paystation4/?token={token}`.\n\n<div class=\"notice\"><strong>Notice</strong>\n   <br><br>\n   <code>user.country.value</code> parameter is used to select a currency for the order. If user's country is unknown,\nproviding the user's IP in <code>X-User-Ip</code> header is an alternative option. <br> One of these two options is required for the correct work of this method. <br> The selected currency is used for payment methods at <a href=\"https://developers.xsolla.com/doc/pay-station/\">Pay Station</a></b>.\n   </div>",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "payment-server-side"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_admin-create-payment-token"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Cart-Payment_201-admin-create-payment-token"
          },
          "401": {
            "$ref": "#/components/responses/Cart-Payment_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-admin-create-payment-token"
          }
        }
      }
    },
    "/v2/admin/project/{project_id}/cart/fill": {
      "put": {
        "summary": "Fill cart with items",
        "description": "Fills the current cart with items. If the cart already has an item with the same SKU, the existing item will be replaced by the passed value.\n",
        "operationId": "admin-cart-fill",
        "x-server": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/x-user-for-header"
          },
          {
            "$ref": "#/components/parameters/x-user-id-header"
          }
        ],
        "tags": [
          "cart-server-side"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_admin-fill-cart-json-model"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-admin-fill-cart-json-model"
          },
          "401": {
            "$ref": "#/components/responses/Cart-Payment_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Cart-Payment_404-user"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-invalid-cart"
          }
        }
      }
    },
    "/v2/admin/project/{project_id}/cart/{cart_id}/fill": {
      "put": {
        "summary": "Fill cart by cart ID with items",
        "description": "Fills the cart by cart ID with items. If the cart already has an item with the same SKU, the existing item will be replaced by the passed value.\n",
        "operationId": "admin-fill-cart-by-id",
        "x-server": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/cart_id-path-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/x-user-for-header"
          },
          {
            "$ref": "#/components/parameters/x-user-id-header"
          }
        ],
        "tags": [
          "cart-server-side"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart-Payment_admin-fill-cart-json-model"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-admin-fill-cart-json-model"
          },
          "401": {
            "$ref": "#/components/responses/Cart-Payment_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Cart-Payment_404-user"
          },
          "422": {
            "$ref": "#/components/responses/Cart-Payment_422-invalid-cart"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/webhook": {
      "get": {
        "tags": [
          "common-webhooks"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-webhook",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "summary": "Get information about webhook settings",
        "description": "Gets the information about the webhook settings in Store.\nCheck webhooks [documentation](https://developers.xsolla.com/doc/shop-builder/integration-guide/set-up-webhooks/) to learn more.\n",
        "responses": {
          "200": {
            "description": "Information about webhook settings was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "http://site.ru/webhook"
                    },
                    "secret": {
                      "type": "string",
                      "example": "my_secret"
                    },
                    "is_enabled": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "url": "http://site.ru/webhook",
                      "secret": "my_secret",
                      "is_enabled": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Information about webhook settings with passed `project_id` does not exists. Make sure you used correct `project_id` or created webhook earlier."
          }
        }
      },
      "put": {
        "tags": [
          "common-webhooks"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "update-webhook",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "summary": "Update information about webhook settings",
        "description": "Updates the information about the webhook settings in Store.\nCheck webhooks [documentation](/doc/shop-builder/integration-guide/set-up-webhooks/) to learn more.\n",
        "responses": {
          "204": {
            "description": "Information about webhook settings was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Information about webhook settings with passed `project_id` does not exists. Make sure you used correct `project_id` or created webhook earlier."
          },
          "422": {
            "description": "Information about webhook settings contains empty URL."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL of your server for receiving [Game services](/webhooks/operation/successful-order-payment/) webhooks. The URL  must be publicly accessible and use the HTTPS protocol, for example `https://example.com`. You can also specify the URL you find in any tool for testing webhooks.\n\nFor [Game services](/webhooks/operation/successful-order-payment/) webhooks, the setting specified in this API call  takes precedence over the setting configured in Publisher Account in [Project Settings > Webhooks](https://publisher.xsolla.com/0/projects/0/edit/webhooks/) section.",
                    "example": "http://site.ru/webhook"
                  },
                  "secret": {
                    "type": "string",
                    "description": "The project secret key for signing [Game services](/webhooks/operation/successful-order-payment/) webhooks.\n\nFor [Game services](/webhooks/operation/successful-order-payment/), the key specified in this API call takes precedence over the key generated in Publisher Account in [Project Settings > Webhooks](https://publisher.xsolla.com/0/projects/0/edit/webhooks/) section.",
                    "example": "my_secret"
                  },
                  "is_enabled": {
                    "type": "boolean",
                    "description": "Whether [Game services](/webhooks/operation/successful-order-payment/) webhooks are enabled.\n\nFor [Game services](/webhooks/operation/successful-order-payment/) webhooks, the setting specified in this API call takes precedence over the setting configured in Publisher Account in [Project Settings > Webhooks](https://publisher.xsolla.com/0/projects/0/edit/webhooks/) section.",
                    "example": true
                  },
                  "version": {
                    "type": "integer",
                    "description": "Webhooks version. In version `2`, the [items](/webhooks/operation/successful-order-payment/#!path=items&t=request) array includes the parameters `is_free`, `is_bonus`, and `is_bundle_content`, which are not present in version `1` (default).",
                    "enum": [
                      1,
                      2
                    ]
                  }
                },
                "required": [
                  "url",
                  "secret",
                  "is_enabled"
                ],
                "example": {
                  "url": "http://site.ru/webhook",
                  "secret": "my_secret_key",
                  "is_enabled": true,
                  "version": 1
                }
              }
            }
          },
          "description": "Information about webhook settings.",
          "required": true
        }
      }
    },
    "/v2/project/{project_id}/admin/items/pre_order/limit/item/sku/{item_sku}": {
      "get": {
        "tags": [
          "common-pre-orders"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-pre-order-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Get information about item pre-order limit",
        "description": "Get pre-order limit of the item.\n\nPre-Order limit API allows you to sell an item in a limited quantity. For configuring the pre-order itself, go to the Admin section of the desired item module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n\nAliases for this endpoint:\n* /v2/project/{project_id}/admin/items/pre_order/limit/item/id/{item_id}\n",
        "responses": {
          "200": {
            "description": "Information about the item pre-order limit was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "sku": {
                      "type": "string",
                      "example": "com.xsolla.item_1"
                    },
                    "is_pre_order_limit_enabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "available": {
                      "type": "integer",
                      "example": 431
                    },
                    "reserved": {
                      "type": "integer",
                      "example": 13
                    },
                    "sold": {
                      "type": "integer",
                      "example": 556
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "item_id": 1,
                      "sku": "com.xsolla.item_1",
                      "is_pre_order_limit_enabled": true,
                      "available": 431,
                      "reserved": 13,
                      "sold": 556
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found."
          }
        }
      },
      "post": {
        "tags": [
          "common-pre-orders"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "add-pre-order-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Add quantity to item pre-order limit",
        "description": "Add quantity to pre-order limit of the item.\n\nPre-Order limit API allows you to sell an item in a limited quantity. For configuring the pre-order itself, go to the Admin section of the desired item module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n\nAliases for this endpoint:\n* /v2/project/{project_id}/admin/items/pre_order/limit/item/id/{item_id}\n",
        "responses": {
          "201": {
            "description": "The quantity to limit was successfully added."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity to add."
                  }
                },
                "required": [
                  "quantity"
                ]
              },
              "example": {
                "quantity": 100000
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "common-pre-orders"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "set-pre-order-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Set quantity of item pre-order limit",
        "description": "Set quantity of pre-order limit of the item.\n\nPre-Order limit API allows you to sell an item in a limited quantity. For configuring the pre-order itself, go to the Admin section of the desired item module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n\nAliases for this endpoint:\n* /v2/project/{project_id}/admin/items/pre_order/limit/item/id/{item_id}\n",
        "responses": {
          "204": {
            "description": "The quantity to limit was successfully set."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity to set."
                  }
                },
                "required": [
                  "quantity"
                ]
              },
              "example": {
                "quantity": 100000
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "common-pre-orders"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "remove-pre-order-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Remove quantity of item pre-order limit",
        "description": "Remove quantity of pre-order limit of the item.\n\nPre-Order limit API allows you to sell an item in a limited quantity. For configuring the pre-order itself, go to the Admin section of the desired item module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n\nAliases for this endpoint:\n* /v2/project/{project_id}/admin/items/pre_order/limit/item/id/{item_id}\n",
        "responses": {
          "204": {
            "description": "The quantity to limit was successfully removed."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity to remove."
                  }
                },
                "required": [
                  "quantity"
                ]
              },
              "example": {
                "quantity": 100000
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/pre_order/limit/item/sku/{item_sku}/toggle": {
      "put": {
        "tags": [
          "common-pre-orders"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "toggle-pre-order-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Toggle item's pre-order limit",
        "description": "Enable/disable pre-order limit of the item.\n\nPre-Order limit API allows you to sell an item in a limited quantity. For configuring the pre-order itself, go to the admin section of the desired item module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n\nAliases for this endpoint:\n* /v2/project/{project_id}/admin/items/pre_order/limit/item/id/{item_id}/toggle\n",
        "responses": {
          "204": {
            "description": "The limit has been disabled/enabled."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_pre_order_limit_enabled": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "is_pre_order_limit_enabled"
                ]
              },
              "example": {
                "is_pre_order_limit_enabled": true
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/pre_order/limit/item/sku/{item_sku}/all": {
      "delete": {
        "tags": [
          "common-pre-orders"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "remove-all-pre-order-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Remove all quantity of item pre-order limit",
        "description": "Remove all quantity of pre-order limit of the item.\n\nPre-Order limit API allows you to sell an item in a limited quantity. For configuring the pre-order itself, go to the admin section of the desired item module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n\nAliases for this endpoint:\n* /v2/project/{project_id}/admin/items/pre_order/limit/item/id/{item_id}/all\n",
        "responses": {
          "204": {
            "description": "The limit was successfully removed."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found."
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/upsell": {
      "get": {
        "tags": [
          "upsell-admin"
        ],
        "operationId": "get-upsell-configurations-for-project-admin",
        "x-admin": true,
        "x-server": true,
        "responses": {
          "200": {
            "description": "The list of configuration details and items used for upsell in the project.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "is_enabled": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether upsell is enabled for the project."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "fixed_list",
                          "most_sellable",
                          "only_promotions"
                        ],
                        "example": "fixed_list",
                        "description": "The type of upsell."
                      },
                      "items": {
                        "type": "array",
                        "example": [
                          {
                            "item_id": 1,
                            "sku": "com.xsolla.booster_mega_1",
                            "name": {
                              "en": "Item's name",
                              "de": "Name des Artikels"
                            },
                            "type": "virtual_good"
                          }
                        ],
                        "description": "The list of items SKU that are a part of the upsell in the project.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "item_id": {
                              "$ref": "#/components/schemas/item_id"
                            },
                            "sku": {
                              "$ref": "#/components/schemas/sku"
                            },
                            "type": {
                              "$ref": "#/components/schemas/item_type"
                            },
                            "name": {
                              "$ref": "#/components/schemas/name-localization-object"
                            },
                            "bundle_type": {
                              "$ref": "#/components/schemas/bundle_type"
                            },
                            "unit_type": {
                              "$ref": "#/components/schemas/unit_type"
                            },
                            "unit_items": {
                              "type": "array",
                              "description": "Game keys for different DRMs.",
                              "items": {
                                "type": "object",
                                "description": "Game key item. It represents game on a certain platform (steam, gog, etc.).",
                                "properties": {
                                  "item_id": {
                                    "$ref": "#/components/schemas/item_id"
                                  },
                                  "sku": {
                                    "$ref": "#/components/schemas/sku"
                                  },
                                  "type": {
                                    "$ref": "#/components/schemas/item_type"
                                  },
                                  "name": {
                                    "$ref": "#/components/schemas/name-localization-object"
                                  },
                                  "drm_name": {
                                    "$ref": "#/components/schemas/drm_name"
                                  },
                                  "drm_sku": {
                                    "$ref": "#/components/schemas/drm_sku"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "upsell": {
                    "summary": "Project has upsell",
                    "value": [
                      {
                        "is_enabled": true,
                        "type": "fixed_list",
                        "items": [
                          {
                            "item_id": 1,
                            "sku": "com.xsolla.booster_mega_1",
                            "name": {
                              "en": "Item's name",
                              "de": "Name des Artikels"
                            },
                            "type": "virtual_good"
                          },
                          {
                            "item_id": 2,
                            "sku": "com.xsolla.booster_mega_2",
                            "name": {
                              "en": "Item's name",
                              "de": "Name des Artikels"
                            },
                            "type": "bundle",
                            "bundle_type": "standard"
                          },
                          {
                            "item_id": 3,
                            "sku": "com.xsolla.mega_game_1",
                            "name": {
                              "en": "Mega game"
                            },
                            "type": "unit",
                            "unit_type": "game",
                            "unit_items": [
                              {
                                "item_id": 4,
                                "sku": "com.xsolla.mega_game_steam_1",
                                "name": {
                                  "en": "Mega game steam"
                                },
                                "drm_name": "Steam",
                                "drm_sku": "steam_key_1"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          }
        },
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "summary": "Get information about upsell in project",
        "description": "Retrieves the information about upsell in project: whether it's enabled, type of upsell, and the SKU list of items that are a part of this upsell."
      },
      "post": {
        "tags": [
          "upsell-admin"
        ],
        "operationId": "post-upsell",
        "summary": "Create upsell",
        "description": "Creates an upsell for a project.\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-upsell"
        },
        "responses": {
          "202": {
            "description": "Upsell has been created for the project."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "404": {
            "$ref": "#/components/responses/Upsell-404-item-not-found"
          },
          "422": {
            "$ref": "#/components/responses/Upsell-422-invalid-request"
          }
        }
      },
      "put": {
        "tags": [
          "upsell-admin"
        ],
        "operationId": "put-upsell",
        "summary": "Update upsell",
        "description": "Update an upsell for a project.\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/update-upsell"
        },
        "responses": {
          "202": {
            "description": "Upsell has been updated for the project."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "404": {
            "$ref": "#/components/responses/Upsell-404-item-not-found"
          },
          "422": {
            "$ref": "#/components/responses/Upsell-422-invalid-request"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/upsell/{toggle}": {
      "put": {
        "tags": [
          "upsell-admin"
        ],
        "operationId": "put-upsell-toggle-active-inactive",
        "x-admin": true,
        "x-server": true,
        "responses": {
          "202": {
            "description": "An upsell in a project was activated or deactivated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          }
        },
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "name": "toggle",
            "in": "path",
            "required": true,
            "description": "Activation status.",
            "schema": {
              "type": "string",
              "example": "activate"
            }
          }
        ],
        "summary": "Activate/Deactivate project's upsell",
        "description": "Changes an upsell’s status in a project to be either active or inactive."
      }
    },
    "/v2/project/{project_id}/items/upsell": {
      "get": {
        "tags": [
          "upsell-client"
        ],
        "operationId": "get-upsell-for-project-client",
        "x-client": true,
        "responses": {
          "200": {
            "$ref": "#/components/responses/Upsell-200-get-client-list"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          }
        },
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "summary": "Get list of upsell items in project",
        "description": "Gets a list of upsell items in a project if they have already been set up."
      }
    },
    "/v2/merchant/{merchant_id}/projects": {
      "get": {
        "tags": [
          "common-merchant"
        ],
        "operationId": "get-projects",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicMerchantAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/merchant_id-path-param"
          }
        ],
        "summary": "Get projects",
        "description": "Gets the list of merchant's projects.\n\n<div class=\"notice\">\n  <p><strong>Notice</strong></p><p>This API call does not contain the <code>project_id</code> path parameter, so you need to use the API key that is valid in all the company’s projects to set up authorization.</p>\n</div>\n",
        "responses": {
          "200": {
            "description": "Information about projects was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_items_count": {
                      "type": "integer",
                      "example": 3
                    },
                    "has_more": {
                      "type": "boolean",
                      "example": true
                    },
                    "items": {
                      "type": "array",
                      "properties": {
                        "project_id": {
                          "type": "integer",
                          "example": 17558
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "total_items_count": 2,
                      "has_more": false,
                      "items": [
                        {
                          "project_id": 17558
                        },
                        {
                          "project_id": 17559
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Basic authentication not passed or wrong. Make sure you used basic authentication or correct credentials."
          },
          "422": {
            "description": "Invalid `limit` or `offset` query parameters."
          }
        }
      }
    },
    "/v2/project/{project_id}/items/game": {
      "get": {
        "summary": "Get games list",
        "description": "Gets a games list for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "tags": [
          "game-keys-catalog"
        ],
        "operationId": "get-games-list",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-get-games-catalog"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/game/group/{external_id}": {
      "get": {
        "summary": "Get games list by specified group",
        "description": "Gets a games list from the specified group for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "tags": [
          "game-keys-catalog"
        ],
        "operationId": "get-games-group",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-group-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-get-games-catalog"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/game/sku/{item_sku}": {
      "get": {
        "summary": "Get game for catalog",
        "description": "Gets a game for the catalog.\n\n<div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "tags": [
          "game-keys-catalog"
        ],
        "operationId": "get-game-by-sku",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "name": "item_sku",
            "in": "path",
            "required": true,
            "description": "Item SKU.",
            "schema": {
              "type": "string",
              "default": "full_game_1"
            }
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "responses": {
          "200": {
            "description": "Game was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Object with game information.",
                  "properties": {
                    "sku": {
                      "type": "string",
                      "example": "game_01",
                      "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                    },
                    "name": {
                      "type": "string",
                      "example": "Game name",
                      "description": "Item name."
                    },
                    "groups": {
                      "type": "array",
                      "example": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        },
                        {
                          "external_id": "Xsolla",
                          "name": "Xsolla game"
                        }
                      ],
                      "description": "Groups the item belongs to.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "external_id": {
                            "type": "string",
                            "example": "accessory"
                          },
                          "name": {
                            "type": "string",
                            "example": "Accessory"
                          }
                        }
                      }
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/Game-Keys_schemas-client-attributes"
                    },
                    "type": {
                      "type": "string",
                      "example": "unit",
                      "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`physical_good`/`unit`."
                    },
                    "unit_type": {
                      "type": "string",
                      "example": "game",
                      "description": "Type of unit: `game`."
                    },
                    "description": {
                      "type": "string",
                      "example": "Game description",
                      "description": "Item description."
                    },
                    "image_url": {
                      "type": "string",
                      "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "description": "Image URL."
                    },
                    "promotions": {
                      "$ref": "#/components/schemas/Catalog_item_promotions"
                    },
                    "unit_items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sku": {
                            "type": "string",
                            "example": "game_01",
                            "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                          },
                          "type": {
                            "type": "string",
                            "example": "game_key",
                            "description": "Type of item: `game_key`."
                          },
                          "is_free": {
                            "$ref": "#/components/schemas/value-is_free"
                          },
                          "price": {
                            "type": "object",
                            "description": "Item prices.",
                            "properties": {
                              "amount": {
                                "type": "string",
                                "example": "2.9900",
                                "description": "Discounted item price."
                              },
                              "amount_without_discount": {
                                "type": "string",
                                "example": "2.9900",
                                "description": "Item price."
                              },
                              "currency": {
                                "type": "string",
                                "example": "USD",
                                "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                              }
                            }
                          },
                          "virtual_prices": {
                            "type": "array",
                            "description": "Virtual prices.",
                            "items": {
                              "type": "object",
                              "description": "Virtual price.",
                              "properties": {
                                "amount": {
                                  "type": "integer",
                                  "example": 100,
                                  "description": "Discounted item price in virtual currency."
                                },
                                "amount_without_discount": {
                                  "type": "integer",
                                  "example": 200,
                                  "description": "Item price."
                                },
                                "sku": {
                                  "type": "string",
                                  "example": "vc_test",
                                  "description": "Virtual currency item SKU."
                                },
                                "is_default": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "Whether price is default for item."
                                },
                                "image_url": {
                                  "type": "string",
                                  "example": "http://image.png",
                                  "description": "Image of virtual currency."
                                },
                                "name": {
                                  "type": "string",
                                  "example": "SHOTGUN FOR TRUE RAIDERS",
                                  "description": "Virtual currency name."
                                },
                                "type": {
                                  "type": "string",
                                  "example": "virtual_currency",
                                  "description": "Virtual currency type."
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Big Rocket - description",
                                  "description": "Virtual currency description."
                                }
                              }
                            }
                          },
                          "can_be_bought": {
                            "$ref": "#/components/schemas/Can_be_bought"
                          },
                          "drm_name": {
                            "type": "string",
                            "example": "Steam",
                            "description": "DRM name."
                          },
                          "drm_sku": {
                            "type": "string",
                            "example": "steam",
                            "description": "Unique DRM ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                          },
                          "has_keys": {
                            "type": "boolean",
                            "example": false,
                            "description": "If `true`, the game key has keys for sale."
                          },
                          "is_pre_order": {
                            "type": "boolean",
                            "example": true,
                            "description": "If `true`, the game key is pre-order and the release date hasn't passed."
                          },
                          "release_date": {
                            "type": "string",
                            "example": "2020-08-11T10:00:00+03:00",
                            "description": "Game key release date in the ISO 8601 format.",
                            "nullable": true
                          },
                          "promotions": {
                            "$ref": "#/components/schemas/Catalog_item_promotions"
                          },
                          "limits": {
                            "$ref": "#/components/schemas/Catalog_item_limits"
                          },
                          "periods": {
                            "$ref": "#/components/schemas/item-periods"
                          },
                          "vp_rewards": {
                            "$ref": "#/components/schemas/client-item-value-point-reward"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "sku": "com.xsolla.game_1",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        },
                        {
                          "external_id": "Xsolla",
                          "name": "Xsolla games"
                        }
                      ],
                      "type": "unit",
                      "unit_type": "game",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "OS",
                          "name": "OS",
                          "values": [
                            {
                              "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                              "value": "Windows"
                            }
                          ]
                        },
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "external_id": "9c5774997fc072b973bd5c231075c13841413f62",
                              "value": "Casual, Logic"
                            }
                          ]
                        }
                      ],
                      "promotions": [],
                      "unit_items": [
                        {
                          "sku": "com.xsolla.game_key_01",
                          "type": "game_key",
                          "is_free": false,
                          "price": {
                            "amount": "30.5",
                            "amount_without_discount": "30.5",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "drm_name": "Steam",
                          "drm_sku": "steam_key_1",
                          "has_keys": true,
                          "is_pre_order": true,
                          "release_date": "2020-08-11T10:00:00+03:00",
                          "promotions": [],
                          "limits": null,
                          "periods": [
                            {
                              "date_from": "2020-08-11T10:00:00+03:00",
                              "date_until": "2020-08-11T20:00:00+03:00"
                            }
                          ],
                          "vp_rewards": [
                            {
                              "item_id": 175232,
                              "sku": "com.xsolla.value_point_1",
                              "amount": 130,
                              "name": "Value point",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                            },
                            {
                              "item_id": 186321,
                              "sku": "com.xsolla.clan_value_point_1",
                              "amount": 50,
                              "name": "Clan Reward VP 1",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                              "is_clan": true
                            }
                          ]
                        },
                        {
                          "sku": "com.xsolla.game_key_02",
                          "type": "game_key",
                          "is_free": false,
                          "price": {
                            "amount": "30.5",
                            "amount_without_discount": "30.5",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "drm_name": "Origin",
                          "drm_sku": "origin_key_1",
                          "has_keys": false,
                          "is_pre_order": false,
                          "release_date": null,
                          "promotions": [],
                          "limits": null,
                          "periods": [],
                          "vp_rewards": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Game not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/items/game/key/sku/{item_sku}": {
      "get": {
        "summary": "Get game key for catalog",
        "description": "Gets a game key for the catalog.\n\n<div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "tags": [
          "game-keys-catalog"
        ],
        "operationId": "get-game-key-by-sku",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "name": "item_sku",
            "in": "path",
            "required": true,
            "description": "Item SKU.",
            "schema": {
              "type": "string",
              "default": "xsollus_basic_edition_steam"
            }
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "responses": {
          "200": {
            "description": "Game key was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Object with game key information.",
                  "example": {
                    "sku": "com.xsolla.game_1",
                    "name": "Game name",
                    "groups": [
                      {
                        "external_id": "all",
                        "name": "All games"
                      },
                      {
                        "external_id": "Xsolla",
                        "name": "Xsolla games"
                      }
                    ],
                    "type": "game_key",
                    "description": "Game description",
                    "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                    "attributes": [
                      {
                        "external_id": "OS",
                        "name": "OS",
                        "values": [
                          {
                            "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                            "value": "Windows"
                          }
                        ]
                      },
                      {
                        "external_id": "genre",
                        "name": "Genre",
                        "values": [
                          {
                            "external_id": "23fda05111c125608af8f1fa0e99db45a10ea1cc",
                            "value": "Horror"
                          }
                        ]
                      }
                    ],
                    "is_free": false,
                    "price": {
                      "amount": "30.5",
                      "amount_without_discount": "30.5",
                      "currency": "USD"
                    },
                    "virtual_prices": [],
                    "can_be_bought": true,
                    "drm_name": "Steam",
                    "drm_sku": "steam_key_1",
                    "has_keys": true,
                    "is_pre_order": true,
                    "release_date": "2020-08-11T10:00:00+03:00",
                    "promotions": [],
                    "limits": null,
                    "periods": [
                      {
                        "date_from": "2020-08-11T10:00:00+03:00",
                        "date_until": "2020-08-11T20:00:00+03:00"
                      }
                    ]
                  },
                  "properties": {
                    "sku": {
                      "type": "string",
                      "example": "com.xsolla.game_01",
                      "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                    },
                    "name": {
                      "type": "string",
                      "example": "Game name",
                      "description": "Item name."
                    },
                    "groups": {
                      "type": "array",
                      "example": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        },
                        {
                          "external_id": "Xsolla",
                          "name": "Xsolla game"
                        }
                      ],
                      "description": "Groups the item belongs to.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "external_id": {
                            "type": "string",
                            "example": "accessory"
                          },
                          "name": {
                            "type": "string",
                            "example": "Accessory"
                          }
                        }
                      }
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/Game-Keys_schemas-client-attributes"
                    },
                    "type": {
                      "type": "string",
                      "example": "game_key",
                      "description": "Type of item: `game_key`."
                    },
                    "description": {
                      "type": "string",
                      "example": "Game description",
                      "description": "Item description."
                    },
                    "image_url": {
                      "type": "string",
                      "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "description": "Image URL."
                    },
                    "is_free": {
                      "$ref": "#/components/schemas/value-is_free"
                    },
                    "price": {
                      "type": "object",
                      "description": "Item prices.",
                      "properties": {
                        "amount": {
                          "type": "string",
                          "example": "2.9900",
                          "description": "Discounted item price."
                        },
                        "amount_without_discount": {
                          "type": "string",
                          "example": "2.9900",
                          "description": "Item price."
                        },
                        "currency": {
                          "type": "string",
                          "example": "USD",
                          "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                        }
                      }
                    },
                    "virtual_prices": {
                      "type": "array",
                      "description": "Virtual prices.",
                      "items": {
                        "type": "object",
                        "description": "Virtual price.",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "example": 100,
                            "description": "Discounted item price in virtual currency."
                          },
                          "amount_without_discount": {
                            "type": "integer",
                            "example": 200,
                            "description": "Item price."
                          },
                          "sku": {
                            "type": "string",
                            "example": "com.xsolla.vc_1",
                            "description": "Virtual currency item SKU."
                          },
                          "is_default": {
                            "type": "boolean",
                            "example": true,
                            "description": "Whether price is default for item."
                          },
                          "image_url": {
                            "type": "string",
                            "example": "http://image.png",
                            "description": "Image of virtual currency."
                          },
                          "name": {
                            "type": "string",
                            "example": "SHOTGUN FOR TRUE RAIDERS",
                            "description": "Virtual currency name."
                          },
                          "type": {
                            "type": "string",
                            "example": "virtual_currency",
                            "description": "Virtual currency type."
                          },
                          "description": {
                            "type": "string",
                            "example": "Big Rocket - description",
                            "description": "Virtual currency description."
                          }
                        }
                      }
                    },
                    "can_be_bought": {
                      "$ref": "#/components/schemas/Can_be_bought"
                    },
                    "drm_name": {
                      "type": "string",
                      "example": "Steam",
                      "description": "DRM name."
                    },
                    "drm_sku": {
                      "type": "string",
                      "example": "steam_key_1",
                      "description": "Unique DRM ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                    },
                    "has_keys": {
                      "type": "boolean",
                      "example": false,
                      "description": "If `true`, the game key has keys for sale."
                    },
                    "is_pre_order": {
                      "type": "boolean",
                      "example": true,
                      "description": "If `true`, the game key is pre-order and the release date hasn't passed."
                    },
                    "release_date": {
                      "type": "string",
                      "example": "2020-08-11T10:00:00+03:00",
                      "description": "Game key release date in the ISO 8601 format."
                    },
                    "promotions": {
                      "$ref": "#/components/schemas/Catalog_item_promotions"
                    },
                    "limits": {
                      "$ref": "#/components/schemas/Catalog_item_limits"
                    },
                    "periods": {
                      "$ref": "#/components/schemas/item-periods"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "sku": "com.xsolla.game_1",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        },
                        {
                          "external_id": "Xsolla",
                          "name": "Xsolla games"
                        }
                      ],
                      "type": "game_key",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "OS",
                          "name": "OS",
                          "values": [
                            {
                              "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                              "value": "Windows"
                            }
                          ]
                        },
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "external_id": "23fda05111c125608af8f1fa0e99db45a10ea1cc",
                              "value": "Horror"
                            }
                          ]
                        }
                      ],
                      "is_free": false,
                      "price": {
                        "amount": "30.5",
                        "amount_without_discount": "30.5",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "drm_name": "Steam",
                      "drm_sku": "steam_key_1",
                      "has_keys": true,
                      "is_pre_order": true,
                      "release_date": "2020-08-11T10:00:00+03:00",
                      "promotions": [],
                      "limits": null,
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Game key not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_key_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_key_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/items/game/key/group/{external_id}": {
      "get": {
        "summary": "Get game keys list by specified group",
        "description": "Gets a game key list from the specified group for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "tags": [
          "game-keys-catalog"
        ],
        "operationId": "get-game-keys-group",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-group-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-get-game-keys-by-group-catalog"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/game/drm": {
      "get": {
        "summary": "Get DRM list",
        "description": "Gets the list of available DRMs.",
        "tags": [
          "game-keys-catalog"
        ],
        "operationId": "get-drm-list",
        "x-client": true,
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-get-drm-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game": {
      "post": {
        "summary": "Create game",
        "description": "Creates a game in the project.\n",
        "operationId": "admin-create-game",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Game-Keys_create-update-game-model"
        },
        "responses": {
          "201": {
            "description": "Game was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_id": {
                      "type": "integer",
                      "example": 101
                    },
                    "sku": {
                      "type": "string",
                      "example": "com.xsolla.game_1"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "item_id": 101,
                      "sku": "com.xsolla.game_1"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Game-Keys_422-invalid-request"
          }
        }
      },
      "get": {
        "summary": "Get list of games (admin)",
        "description": "Gets the list of games within a project for administration.\nGame consists of game keys which could be purchased by a user.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-game-list",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-admin-get-games-list"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/sku/{item_sku}": {
      "get": {
        "summary": "Get game (admin)",
        "description": "Gets a game for administration.\nGame consists of game keys which could be purchased by a user.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-game-by-sku",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-admin-get-game-by-sku"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update game by SKU",
        "description": "Updates a game in the project by SKU.\n",
        "operationId": "admin-update-game-by-sku",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Game-Keys_create-update-game-model"
        },
        "responses": {
          "201": {
            "description": "Game was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/Game-Keys_422-invalid-request"
          }
        }
      },
      "delete": {
        "summary": "Delete game by SKU",
        "description": "Deletes a game in the project by SKU.\n",
        "operationId": "admin-delete-game-by-sku",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Game was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/id/{item_id}": {
      "get": {
        "summary": "Get game by ID (admin)",
        "description": "Gets a game for administration.\nGame consists of game keys which could be purchased by a user.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-game-by-id",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-admin-get-game-by-sku"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with id = 1 not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with id = 1 not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update game by ID",
        "description": "Updates a game in the project by ID.\n",
        "operationId": "admin-update-game-by-id",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_id-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Game-Keys_create-update-game-model"
        },
        "responses": {
          "201": {
            "description": "Game was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with id = 1 not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with id = 1 not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/Game-Keys_422-invalid-request"
          }
        }
      },
      "delete": {
        "summary": "Delete game by ID",
        "description": "Deletes a game in the project by ID.\n",
        "operationId": "admin-delete-game-by-id",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_id-path-param"
          }
        ],
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Game was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/key/upload/sku/{item_sku}": {
      "post": {
        "summary": "Upload codes",
        "description": "Uploads codes by game key SKU.",
        "operationId": "admin-upload-codes-by-sku",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File with codes."
                  },
                  "region_id": {
                    "type": "integer",
                    "description": "Region ID."
                  }
                },
                "required": [
                  "file"
                ],
                "example": {
                  "file": "keys.txt",
                  "region_id": 1
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-session-information"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game key or region not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/key/upload/id/{item_id}": {
      "post": {
        "summary": "Upload codes by ID",
        "description": "Uploads codes by game key ID.",
        "operationId": "admin-upload-codes-by-id",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_id-path-param"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File with codes."
                  },
                  "region_id": {
                    "type": "integer",
                    "description": "Region ID."
                  }
                },
                "required": [
                  "file"
                ],
                "example": {
                  "file": "keys.txt",
                  "region_id": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-session-information"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game key or region not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/key/upload/session/{session_id}": {
      "get": {
        "summary": "Get codes loading session information",
        "description": "Gets codes loading session information.",
        "operationId": "admin-get-codes-session",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "description": "Session ID.",
            "schema": {
              "type": "string",
              "default": "fc7105b6e8ee01339582970b37697242"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-session-information"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Codes loading session not found.\n"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/key/request/sku/{item_sku}": {
      "get": {
        "summary": "Get codes",
        "description": "Gets a certain number of codes by game key SKU.",
        "operationId": "admin-get-codes-by-sku",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/user_email-query-param"
          },
          {
            "$ref": "#/components/parameters/quantity-query-param"
          },
          {
            "$ref": "#/components/parameters/reason-query-param"
          },
          {
            "$ref": "#/components/parameters/region_id-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-get-codes"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game key or region not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/key/request/id/{item_id}": {
      "get": {
        "summary": "Get codes by ID",
        "description": "Gets a certain number of codes by game key ID.",
        "operationId": "admin-get-codes-by-id",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_id-path-param"
          },
          {
            "$ref": "#/components/parameters/user_email-query-param"
          },
          {
            "$ref": "#/components/parameters/quantity-query-param"
          },
          {
            "$ref": "#/components/parameters/reason-query-param"
          },
          {
            "$ref": "#/components/parameters/region_id-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-get-codes"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game key or region not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/key/delete/sku/{item_sku}": {
      "delete": {
        "summary": "Delete codes",
        "description": "Deletes all codes by game key SKU.",
        "operationId": "admin-delete-codes-by-sku",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/user_email-query-param"
          },
          {
            "$ref": "#/components/parameters/reason-query-param"
          },
          {
            "$ref": "#/components/parameters/region_id-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-get-codes"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game key or region not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/game/key/delete/id/{item_id}": {
      "delete": {
        "summary": "Delete codes by ID",
        "description": "Deletes all codes by game key ID.",
        "operationId": "admin-delete-codes-by-id",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "game-keys-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_id-path-param"
          },
          {
            "$ref": "#/components/parameters/user_email-query-param"
          },
          {
            "$ref": "#/components/parameters/reason-query-param"
          },
          {
            "$ref": "#/components/parameters/region_id-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-get-codes"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          },
          "404": {
            "description": "Game key or region not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4001
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with sku = 'game_1' not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/entitlement": {
      "get": {
        "tags": [
          "game-keys-entitlement"
        ],
        "operationId": "get-user-games",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/sandbox-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-entitlement-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Game-Keys_200-user-entitlement-list"
          },
          "401": {
            "$ref": "#/components/responses/Game-Keys_401-invalid-basic-auth"
          }
        },
        "summary": "Get list of games owned by user",
        "description": "Get the list of games owned by the user. The response will contain an array of games owned by a particular user.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/entitlement/redeem": {
      "post": {
        "tags": [
          "game-keys-entitlement"
        ],
        "operationId": "redeem-game-pin-code",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful redemption."
          },
          "403": {
            "$ref": "#/components/responses/Game-Keys_403-auth-header-not-sent"
          },
          "404": {
            "description": "Game code not found. Make sure the `code` and `project_id` are correct.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4603
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4603]: Game code not found."
                    },
                    "transactionId": {
                      "type": "string",
                      "example": "x-x-x-x-transactionId-mock-x-x-x"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "Game code not found": {
                    "$ref": "#/components/examples/404-game-code-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 422
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 5103
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-5103]: Selected drm is not drmfree."
                    },
                    "transactionId": {
                      "type": "string",
                      "example": "x-x-x-x-transactionId-mock-x-x-x"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "DRM is not DRM free": {
                    "$ref": "#/components/examples/422-drm-is-not-drm-free"
                  },
                  "User already has entitlement": {
                    "$ref": "#/components/examples/422-user-already-has-entitlement"
                  },
                  "Game is in pre-order state": {
                    "value": {
                      "statusCode": 422,
                      "errorCode": 5106,
                      "errorMessage": "[0401-5106]: Item: game_sku is in pre-order state and can not be redeemed",
                      "transactionId": "transaction id"
                    }
                  },
                  "Game code is already activated": {
                    "value": {
                      "statusCode": 422,
                      "errorCode": 5107,
                      "errorMessage": "[0401-5107]: Game code has been already activated",
                      "transactionId": "transaction id"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Redeem game code by client",
        "description": "Grants entitlement by a provided game code.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>You can redeem codes only for the DRM-free platform.</div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "AAAA-BBBB-CCCC-DDDD",
                    "description": "Game code."
                  },
                  "sandbox": {
                    "type": "boolean",
                    "example": false,
                    "default": false,
                    "description": "Redeem game code in the sandbox mode. The option is available for those users who are specified in the list of company users."
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/project/{project_id}/admin/entitlement/grant": {
      "post": {
        "tags": [
          "game-keys-entitlement"
        ],
        "operationId": "grant-entitlement-admin",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "responses": {
          "200": {
            "description": "Entitlement was granted."
          },
          "403": {
            "$ref": "#/components/responses/Game-Keys_403-auth-header-not-sent"
          },
          "404": {
            "description": "Game code not found. Make sure the `code` and `project_id` are correct.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 4603
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-4603]: Game code not found."
                    },
                    "transactionId": {
                      "type": "string",
                      "example": "x-x-x-x-transactionId-mock-x-x-x"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "Game code not found": {
                    "$ref": "#/components/examples/404-game-code-not-found"
                  },
                  "Game not found": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 4604,
                      "errorMessage": "[0401-4604]: Game not found.",
                      "transactionId": "transaction id"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 422
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 5103
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-5103]: Selected drm is not drmfree."
                    },
                    "transactionId": {
                      "type": "string",
                      "example": "x-x-x-x-transactionId-mock-x-x-x"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "DRM is not DRM free": {
                    "$ref": "#/components/examples/422-drm-is-not-drm-free"
                  },
                  "User already has entitlement": {
                    "$ref": "#/components/examples/422-user-already-has-entitlement"
                  }
                }
              }
            }
          }
        },
        "summary": "Grant entitlement (admin)",
        "description": "Grants entitlement to user.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>Game codes or games for DRM free platform can be granted only.</div>\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_external_id",
                  "game",
                  "drm",
                  "mode"
                ],
                "properties": {
                  "user_external_id": {
                    "type": "string",
                    "example": "user-external-id",
                    "description": "Unique user identifier."
                  },
                  "game": {
                    "type": "object",
                    "required": [
                      "sku"
                    ],
                    "properties": {
                      "sku": {
                        "$ref": "#/components/schemas/Game-Keys_game_sku"
                      }
                    },
                    "example": {
                      "game": {
                        "sku": "com.xsolla.game_1"
                      }
                    },
                    "description": "Object with game properties."
                  },
                  "drm": {
                    "type": "object",
                    "required": [
                      "sku"
                    ],
                    "properties": {
                      "sku": {
                        "$ref": "#/components/schemas/Game-Keys_drm_sku"
                      }
                    },
                    "example": {
                      "drm": {
                        "sku": "com.xsolla.key_1"
                      }
                    },
                    "description": "Object with DRM properties."
                  },
                  "code": {
                    "type": "string",
                    "example": "AAAA-BBBB-CCCC-DDDD",
                    "description": "Game code of the game.",
                    "nullable": true
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "default",
                      "sandbox"
                    ],
                    "example": "default",
                    "description": "What type of entitlements should be granted. If the parameter is set to `sandbox`, the entitlement will be granted to the user in the sandbox mode. If the parameter is set to `default`, the entitlement will be granted to the user in the live mode."
                  },
                  "user_country": {
                    "type": "string",
                    "nullable": true,
                    "example": "US",
                    "description": "User's country."
                  }
                },
                "example": {
                  "user_external_id": "user-external-id",
                  "game": {
                    "sku": "com.xsolla.game_1"
                  },
                  "drm": {
                    "sku": "com.xsolla.key_1"
                  },
                  "code": "AAAA-BBBB-CCCC-DDDD",
                  "mode": "default",
                  "user_country": "US"
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/project/{project_id}/admin/entitlement/revoke": {
      "post": {
        "tags": [
          "game-keys-entitlement"
        ],
        "operationId": "revoke-entitlement-admin",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful revoke."
          },
          "403": {
            "$ref": "#/components/responses/Game-Keys_403-auth-header-not-sent"
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 422
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 5103
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-5103]: Selected drm is not drmfree."
                    },
                    "transactionId": {
                      "type": "string",
                      "example": "x-x-x-x-transactionId-mock-x-x-x"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "DRM is not DRM free": {
                    "value": {
                      "statusCode": 422,
                      "errorCode": 5103,
                      "errorMessage": "[0401-5103]: Selected drm is not drmfree.",
                      "transactionId": "transaction id"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Revoke entitlement (admin)",
        "description": "Revokes entitlement of user.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>Game codes or games for DRM free platform can be revoked only.</div>\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_external_id",
                  "game",
                  "drm",
                  "mode"
                ],
                "properties": {
                  "user_external_id": {
                    "type": "string",
                    "example": "user-external-id",
                    "description": "Unique user identifier."
                  },
                  "game": {
                    "type": "object",
                    "required": [
                      "sku"
                    ],
                    "properties": {
                      "sku": {
                        "$ref": "#/components/schemas/Game-Keys_game_sku"
                      }
                    },
                    "example": {
                      "game": {
                        "sku": "com.xsolla.game_1"
                      }
                    },
                    "description": "Object with game properties."
                  },
                  "drm": {
                    "type": "object",
                    "required": [
                      "sku"
                    ],
                    "properties": {
                      "sku": {
                        "$ref": "#/components/schemas/Game-Keys_drm_sku"
                      }
                    },
                    "example": {
                      "drm": {
                        "sku": "com.xsolla.key_1"
                      }
                    },
                    "description": "Object with DRM properties."
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "default",
                      "sandbox"
                    ],
                    "example": "default",
                    "description": "What type of entitlements should be revoked. If the parameter is set to `sandbox`, the entitlement will be revoked from the user in the sandbox mode. If the parameter is set to `default`, the entitlement will be revoked from the user in the live mode."
                  }
                },
                "example": {
                  "user_external_id": "user-external-id",
                  "game": {
                    "sku": "com.xsolla.game_1"
                  },
                  "drm": {
                    "sku": "com.xsolla.key_1"
                  },
                  "mode": "default"
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/project/{project_id}/admin/promotion": {
      "get": {
        "summary": "Get all promotion list",
        "description": "Gets the list of promotions of a project.",
        "operationId": "get-promotion-list",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/enabled-query-param"
          }
        ],
        "tags": [
          "promotions-common"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-get-promotions"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/admin/promotion/{promotion_id}/activate": {
      "put": {
        "summary": "Activate promotion",
        "description": "Activates a promotion.",
        "operationId": "activate-promotion",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "promotions-common"
        ],
        "responses": {
          "204": {
            "description": "Promotion was successfully activated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-activate-deactivate-promotion"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promotion/{promotion_id}/deactivate": {
      "put": {
        "summary": "Deactivate promotion",
        "description": "Deactivates a promotion.",
        "operationId": "deactivate-promotion",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "promotions-common"
        ],
        "responses": {
          "204": {
            "description": "Promotion was successfully deactivated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-activate-deactivate-promotion"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promotion/redeemable/code/{code}": {
      "get": {
        "summary": "Get redeemable promotion by code",
        "description": "Gets the promotion by a promo code or coupon code.",
        "operationId": "get-redeemable-promotion-by-code",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/code-path-param"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "tags": [
          "promotions-common"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-redeemable-by-code"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-code-not-found"
          },
          "405": {
            "$ref": "#/components/responses/405-method-not-found"
          }
        }
      }
    },
    "/v2/project/{project_id}/coupon/redeem": {
      "post": {
        "summary": "Redeem coupon code",
        "description": "Redeems a coupon code. The user gets a bonus after a coupon is redeemed.",
        "operationId": "redeem-coupon",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_redeem-coupon-model"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-coupon-redeemed"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "403": {
            "$ref": "#/components/responses/Promotions_403-auth-header"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-redeem-coupon"
          }
        },
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/coupon/code/{coupon_code}/rewards": {
      "get": {
        "summary": "Get coupon rewards",
        "description": "Gets coupons rewards by its code.\nCan be used to allow users to choose one of many items as a bonus.\nThe usual case is choosing a DRM if the coupon contains a game as a bonus (`type=unit`).\n",
        "operationId": "get-coupon-rewards-by-code",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/coupon_code-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-coupon-rewards"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "403": {
            "$ref": "#/components/responses/Promotions_403-auth-header"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-rewards"
          }
        },
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/admin/coupon": {
      "post": {
        "summary": "Create coupon promotion",
        "description": "Creates a coupon promotion.\n",
        "operationId": "admin-create-coupon",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_coupon-create"
        },
        "responses": {
          "201": {
            "description": "Coupon was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "$ref": "#/components/schemas/Promotions_coupon-external_id"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "external_id": "coupon_external_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-invalid-coupon"
          }
        }
      },
      "get": {
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-coupons",
        "x-server": true,
        "x-admin": true,
        "summary": "Get list of coupon promotions",
        "description": "Gets the list of coupon promotions of a project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-get-coupons"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/coupon/{external_id}": {
      "put": {
        "summary": "Update coupon promotion",
        "description": "Updates a coupon promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "update-coupon-promotion",
        "x-server": true,
        "x-admin": true,
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_coupon-update"
        },
        "responses": {
          "204": {
            "description": "Coupon was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-invalid-coupon"
          }
        }
      },
      "get": {
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-coupon",
        "x-server": true,
        "x-admin": true,
        "summary": "Get coupon promotion",
        "description": "Gets a specified coupon promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/admin-promotions_200-get-coupon-promotion-model"
                },
                "examples": {
                  "response": {
                    "value": {
                      "external_id": "summer20221",
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "name": {
                        "en-US": "Coupon name",
                        "ru-RU": "Название купона"
                      },
                      "is_enabled": true,
                      "bonus": [
                        {
                          "sku": "com.xsolla.diamonds_1",
                          "quantity": 100
                        }
                      ],
                      "redeem_user_limit": null,
                      "redeem_total_limit": 100,
                      "redeem_code_limit": null,
                      "total_limit_state": {
                        "available": 50,
                        "reserved": 10,
                        "used": 40
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          }
        }
      },
      "delete": {
        "summary": "Delete coupon promotion",
        "description": "Deletes [coupon promotion](https://developers.xsolla.com/doc/shop-builder/features/coupons/). The deleted promotion:\n* Disappears from the list of promotions set up in your project.\n* Is no longer applied to the item catalog. User can’t get bonus items with this promotion.\n\nAfter deletion, the promotion can’t be restored.\nCoupon codes from the deleted promotion can be [added](https://developers.xsolla.com/api/shop-builder/operation/create-coupon-code/) to existing promotions.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "delete-coupon-promotion",
        "x-server": true,
        "x-admin": true,
        "responses": {
          "204": {
            "description": "Coupon promotion was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/coupon/{external_id}/activate": {
      "put": {
        "summary": "Activate coupon promotion",
        "description": "Activates a coupon promotion.\nCreated coupon promotion is disabled by default.\nIt will not be ready for redemption until you activate it.\nUse this endpoint to enable and activate a coupon promotion.\n",
        "operationId": "activate-coupon",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Coupon was successfully activated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-error"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/coupon/{external_id}/deactivate": {
      "put": {
        "summary": "Deactivate coupon promotion",
        "description": "Deactivates a coupon promotion.\nCreated coupon promotion is disabled by default.\nIt will not be ready for redemption until you activate it.\nUse this endpoint to disable and deactivate a coupon promotion.\n",
        "operationId": "deactivate-coupon",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Coupon was successfully deactivated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-error"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/coupon/{external_id}/code": {
      "post": {
        "operationId": "create-coupon-code",
        "x-server": true,
        "x-admin": true,
        "summary": "Create coupon code",
        "description": "Creates coupon code.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_create-coupon-promocode-code"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Promotions_201-coupon-promocode-code-created"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-coupon-promocode-same-code-exists"
          }
        }
      },
      "get": {
        "operationId": "get-coupon-codes",
        "x-server": true,
        "x-admin": true,
        "summary": "Get coupon codes",
        "description": "Gets coupon codes.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-coupon-code-list"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/coupon/{external_id}/code/generate": {
      "put": {
        "summary": "Generate coupon codes",
        "description": "Generates coupon codes.\n",
        "operationId": "generate-coupon-codes",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "count": {
                    "$ref": "#/components/schemas/Promotions_coupon-generate-count"
                  }
                },
                "required": [
                  "count"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Codes were successfully generated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "$ref": "#/components/schemas/Promotions_coupon-generate-count"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          }
        }
      }
    },
    "/v2/project/{project_id}/promocode/redeem": {
      "post": {
        "summary": "Redeem promo code",
        "description": "Redeems a code of promo code promotion.\nAfter redeeming a promo code, the user will get free items and/or the price of the cart and/or particular items will be decreased.\n",
        "operationId": "redeem-promo-code",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_redeem-promo-code-model"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-promo-code-redeemed"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "403": {
            "$ref": "#/components/responses/Promotions_403-auth-header"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-promo-code"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-redeem-coupon"
          }
        },
        "security": [
          {
            "AuthForCart": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/promocode/remove": {
      "put": {
        "summary": "Remove promo code from cart",
        "description": "Removes a promo code from a cart.\nAfter the promo code is removed, the total price of all items in the cart will be recalculated without bonuses and discounts provided by a promo code.\n",
        "operationId": "remove-cart-promo-code",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_cancel-promo-code-model"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-promo-code-canceled"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "403": {
            "$ref": "#/components/responses/Promotions_403-auth-header"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-cancel-promo-code"
          }
        },
        "security": [
          {
            "AuthForCart": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/promocode/code/{promocode_code}/rewards": {
      "get": {
        "summary": "Get promo code rewards",
        "description": "Gets promo code rewards by its code.\nCan be used to allow users to choose one of many items as a bonus.\nThe usual case is choosing a DRM if the promo code contains a game as a bonus (`type=unit`).\n",
        "operationId": "get-promo-code-rewards-by-code",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promocode_code-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-promocode-rewards"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "403": {
            "$ref": "#/components/responses/Promotions_403-auth-header"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-promo-code"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-rewards"
          }
        },
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ]
      }
    },
    "/v2/project/{project_id}/admin/promocode": {
      "post": {
        "operationId": "create-promo-code",
        "x-server": true,
        "x-admin": true,
        "summary": "Create promo code promotion",
        "description": "Creates a promo code promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_promocode-create"
        },
        "responses": {
          "201": {
            "description": "Promo code was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "$ref": "#/components/schemas/Promotions_coupon-external_id"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "external_id": "coupon_external_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-invalid-coupon"
          }
        }
      },
      "get": {
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-promo-codes",
        "x-server": true,
        "x-admin": true,
        "summary": "Get list of promo code promotions",
        "description": "Gets the list of promo codes of a project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-get-promocodes"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promocode/{external_id}": {
      "put": {
        "summary": "Update promo code promotion",
        "description": "Updates a promo code promotion.\n",
        "operationId": "update-promo-code",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_promocode-update"
        },
        "responses": {
          "204": {
            "description": "Promo code was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-invalid-coupon"
          }
        }
      },
      "get": {
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-promo-code",
        "x-server": true,
        "x-admin": true,
        "summary": "Get promo code promotion",
        "description": "Gets a specified promo code promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "responses": {
          "200": {
            "description": "Promo code was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotions_200-get-promocode-promotion-model"
                },
                "examples": {
                  "simple": {
                    "value": {
                      "external_id": "summer20221",
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "name": {
                        "en-US": "Coupon name",
                        "ru-RU": "Название купона"
                      },
                      "is_enabled": true,
                      "bonus": [
                        {
                          "sku": "com.xsolla.diamonds_1",
                          "quantity": 100
                        }
                      ],
                      "redeem_user_limit": null,
                      "redeem_total_limit": 100,
                      "redeem_code_limit": 1,
                      "discount": {
                        "percent": "10.99"
                      },
                      "discounted_items": null,
                      "total_limit_state": {
                        "available": 50,
                        "reserved": 10,
                        "used": 40
                      },
                      "excluded_promotions": [
                        23,
                        45
                      ]
                    }
                  },
                  "with price conditions": {
                    "value": {
                      "external_id": "summer20221",
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "name": {
                        "en-US": "Coupon name",
                        "ru-RU": "Название купона"
                      },
                      "is_enabled": true,
                      "bonus": [
                        {
                          "sku": "com.xsolla.diamonds_2",
                          "quantity": 100
                        }
                      ],
                      "redeem_user_limit": null,
                      "redeem_total_limit": 100,
                      "redeem_code_limit": 1,
                      "discount": {
                        "percent": "10.99"
                      },
                      "discounted_items": null,
                      "total_limit_state": {
                        "available": 50,
                        "reserved": 10,
                        "used": 40
                      },
                      "price_conditions": [
                        {
                          "operator": "gt",
                          "value": "10.0000"
                        },
                        {
                          "operator": "lt",
                          "value": "50.0000"
                        }
                      ]
                    }
                  },
                  "with item price conditions": {
                    "value": {
                      "external_id": "summer20221",
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "name": {
                        "en-US": "Coupon name",
                        "ru-RU": "Название купона"
                      },
                      "is_enabled": true,
                      "bonus": [
                        {
                          "sku": "com.xsolla.diamonds_3",
                          "quantity": 100
                        }
                      ],
                      "redeem_user_limit": null,
                      "redeem_total_limit": 100,
                      "redeem_code_limit": 1,
                      "discount": {
                        "percent": "10.99"
                      },
                      "discounted_items": null,
                      "total_limit_state": {
                        "available": 50,
                        "reserved": 10,
                        "used": 40
                      },
                      "item_price_conditions": [
                        {
                          "operator": "gt",
                          "value": "10.0000"
                        },
                        {
                          "operator": "lt",
                          "value": "50.0000"
                        }
                      ],
                      "excluded_promotions": [
                        23,
                        45
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          }
        }
      },
      "delete": {
        "summary": "Delete promo code promotion",
        "description": "Deletes [promo code promotion](https://developers.xsolla.com/doc/shop-builder/features/promo-codes/). The deleted promotion:\n* Disappears from the list of promotions set up in your project.\n* Is no longer applied to the item catalog and the cart. User can’t get bonus items or purchase items using this promotion.\n\nAfter deletion, the promotion can’t be restored.\nPromo codes from the deleted promotion can be [added](https://developers.xsolla.com/api/shop-builder/operation/create-promo-code-code/) to existing promotions.\n",
        "operationId": "delete-promo-code",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Promo code promotion was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promocode/{external_id}/activate": {
      "put": {
        "summary": "Activate promo code promotion",
        "description": "Activates a promo code promotion.\n\nCreated promo code promotion is disabled by default.\nIt will not be ready for redemption until you activate it.\nUse this endpoint to enable and activate a promo code promotion.\n",
        "operationId": "activate-promo-code",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Promo code was successfully activated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-error"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promocode/{external_id}/deactivate": {
      "put": {
        "summary": "Deactivate promo code promotion",
        "description": "Deactivates a promo code promotion.\n\nCreated promo code promotion is disabled by default.\nIt will not be ready for redemption until you activate it.\nUse this endpoint to disable and deactivate a promo code promotion.\n",
        "operationId": "deactivate-promo-code",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Coupon was successfully deactivated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-error"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promocode/{external_id}/code": {
      "post": {
        "operationId": "create-promo-code-code",
        "x-server": true,
        "x-admin": true,
        "summary": "Create code for promo code promotion",
        "description": "Creates code for a promo code promotion.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_create-coupon-promocode-code"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Promotions_201-coupon-promocode-code-created"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-coupon-promocode-same-code-exists"
          }
        }
      },
      "get": {
        "operationId": "get-promocode-codes",
        "x-server": true,
        "x-admin": true,
        "summary": "Get codes of promo code promotion",
        "description": "Gets codes of a promo code promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-promocode-code-list"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promocode/{external_id}/code/generate": {
      "put": {
        "summary": "Generate codes for promo code promotion",
        "description": "Generates codes for a promo code promotion.\n",
        "operationId": "generate-promo-code-codes",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "count": {
                    "$ref": "#/components/schemas/Promotions_coupon-generate-count"
                  }
                },
                "required": [
                  "count"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Codes were successfully generated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "$ref": "#/components/schemas/Promotions_coupon-generate-count"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promotion/item": {
      "post": {
        "summary": "Create discount promotion for item",
        "description": "Creates a discount promotion for an item.\n\nPromotions provide a discount (%) on items.\nThe discount will be applied to all prices of the specified items.\n",
        "operationId": "create-item-promotion",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "promotions-discounts"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_create-update-item-promotion"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Promotions_201-create-promotion"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-missed-items-property"
          }
        }
      },
      "get": {
        "tags": [
          "promotions-discounts"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-item-promotion-list",
        "x-server": true,
        "x-admin": true,
        "summary": "Get list of item promotions",
        "description": "Get the list of item promotions of a project.\n\nPromotions provide a discount (%) on items.\nThe discount will be applied to all prices of the specified items.\n",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "description": "Project ID.",
            "schema": {
              "type": "integer",
              "default": 59080
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Limit for the number of elements on the page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "Number of the element from which the list is generated (the count starts from 0).",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-get-item-promotions"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promotion/{promotion_id}/item": {
      "put": {
        "tags": [
          "promotions-discounts"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "update-item-promotion",
        "x-server": true,
        "x-admin": true,
        "summary": "Update item promotion",
        "description": "Updates the promotion.\n\n<div class='note'><b>Note</b><br><br>New data will replace old data. If you want to update only a part of a promotion, you should transfer all required data in request as well.</div>\n\nPromotions provide a discount (%) on items.\nThe discount will be applied to all prices of the specified items.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "responses": {
          "204": {
            "description": "Promotion was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promotion"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-missed-items-property"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_create-update-item-promotion"
        }
      },
      "get": {
        "tags": [
          "promotions-discounts"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-item-promotion",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "summary": "Get item promotion",
        "description": "Gets the promotion applied to particular items.\n\nPromotions provide a discount (%) on items.\nThe discount will be applied to all prices of the specified items.\n",
        "responses": {
          "200": {
            "description": "Item promotion was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Promotion ID. Unique promotion identifier within the project."
                    },
                    "date_start": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "default": "2020-04-15T18:16:00+05:00",
                      "description": "Date when your promotion will be started."
                    },
                    "date_end": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "default": "2020-04-15T18:16:00+05:00",
                      "description": "Date when your promotion will be finished. Can be `null`."
                    },
                    "is_enabled": {
                      "type": "boolean",
                      "default": true
                    },
                    "name": {
                      "type": "object",
                      "description": "Name of promotion. Should contain key/value pairs,\nwhere key is locale with format \"^[a-z]{2}-[A-Z]{2}$\", value is string.\n",
                      "additionalProperties": {
                        "type": "string",
                        "example": {
                          "en-US": "Promotion",
                          "ru-RU": "Акция"
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "percent": {
                          "nullable": true,
                          "type": "string",
                          "description": "Percent discount.\nThe price of item will be decreased using a value which was calculated using this percent.",
                          "default": "10.00"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "description": "The list of items which will be affected by discount.",
                        "type": "object",
                        "properties": {
                          "sku": {
                            "type": "string",
                            "description": "Item SKU.",
                            "default": "elven_sword"
                          }
                        }
                      }
                    },
                    "attribute_conditions": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/user-attribute_conditions-string"
                        },
                        {
                          "$ref": "#/components/schemas/user-attribute_conditions-date"
                        },
                        {
                          "$ref": "#/components/schemas/user-attribute_conditions-number"
                        }
                      ]
                    },
                    "limits": {
                      "$ref": "#/components/schemas/Promotions_promotion_limits_response"
                    },
                    "price_conditions": {
                      "$ref": "#/components/schemas/price_conditions_discount"
                    },
                    "excluded_promotions": {
                      "$ref": "#/components/schemas/excluded_promotions"
                    }
                  },
                  "example": {
                    "id": 1,
                    "date_start": "2020-04-15T18:16:00+05:00",
                    "date_end": "2020-04-25T18:16:00+05:00",
                    "is_enabled": true,
                    "discount": {
                      "percent": "15.00"
                    },
                    "items": [
                      {
                        "sku": "com.xsolla.elven_sword_1"
                      },
                      {
                        "sku": "com.xsolla.elven_helmet_1"
                      },
                      {
                        "sku": "com.xsolla.elven_armor_1"
                      }
                    ],
                    "name": {
                      "en-US": "Promotion",
                      "ru-RU": "Акция"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 1,
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "is_enabled": true,
                      "discount": {
                        "percent": "20.00"
                      },
                      "items": [
                        {
                          "sku": "com.xsolla.elven_helmet_1"
                        },
                        {
                          "sku": "com.xsolla.elven_armor_1"
                        }
                      ],
                      "name": {
                        "en-US": "Promotion",
                        "ru-RU": "Акция"
                      },
                      "limits": {
                        "per_user": {
                          "total": 10
                        },
                        "per_item": null,
                        "recurrent_schedule": {
                          "per_user": {
                            "interval_type": "daily",
                            "day_of_week": null,
                            "day_of_month": null,
                            "time": "11:00:00+08:00",
                            "reset_next_date": 1677553200,
                            "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                            "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                          }
                        }
                      },
                      "price_conditions": [
                        {
                          "operator": "ge",
                          "value": "10.0000"
                        },
                        {
                          "operator": "le",
                          "value": "50.0000"
                        }
                      ],
                      "excluded_promotions": [
                        23,
                        45
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "description": "Promotion not found. Make sure `promotion_id` is correct.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    },
                    "errorCode": {
                      "type": "integer",
                      "example": 9502
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "[0401-9502]: Can not find promotion with ID = 111425 in project 59080"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 9502,
                      "errorMessage": "[0401-9502]: Can not find promotion with ID = 111425 in project 59080"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete item promotion",
        "tags": [
          "promotions-discounts"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "delete-item-promotion",
        "x-server": true,
        "x-admin": true,
        "description": "Deletes [discount promotion](https://developers.xsolla.com/doc/shop-builder/features/discounts/). The deleted promotion:\n* Disappears from the list of promotions set up in your project.\n* Is no longer applied to the item catalog and the cart. User can’t buy items with this promotion.\n\nAfter deletion, the promotion can’t be restored.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "responses": {
          "204": {
            "description": "Promotion was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promotion"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promotion/bonus": {
      "post": {
        "summary": "Create bonus promotion",
        "description": "Creates the bonus promotion.\n\nPromotion adds free bonus items to the purchase made by a user.\nThe promotion can be applied to every purchase within a project or to a purchase that includes particular items.\n",
        "operationId": "create-bonus-promotion",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "promotions-bonuses"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_create-update-bonus-promotion"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Promotions_201-create-promotion"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-missed-bonus-property"
          }
        }
      },
      "get": {
        "tags": [
          "promotions-bonuses"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-bonus-promotion-list",
        "x-server": true,
        "x-admin": true,
        "summary": "Get list of bonus promotions",
        "description": "Gets the list of bonus promotions of a project.\n\nPromotion adds free bonus items to the purchase made by a user.\nThe promotion can be applied to every purchase within a project or to a purchase that includes particular items.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-get-bonus-promotions"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/promotion/{promotion_id}/bonus": {
      "put": {
        "summary": "Update bonus promotion",
        "description": "Updates the promotion.\n\n<div class='note'><b>Note</b><br><br>New data will replace old data. If you want to update only a part of a promotion, you should transfer all required data in request as well.</div>\n\nPromotion adds free bonus items to the purchase made by a user.\nThe promotion can be applied to every purchase within a project or to a purchase that includes particular items.\n",
        "operationId": "update-bonus-promotion",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "tags": [
          "promotions-bonuses"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_create-update-bonus-promotion"
        },
        "responses": {
          "204": {
            "description": "Promotion was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-missed-bonus-property"
          }
        }
      },
      "get": {
        "tags": [
          "promotions-bonuses"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-bonus-promotion",
        "x-server": true,
        "x-admin": true,
        "summary": "Get bonus promotion",
        "description": "Gets the bonus promotion.\n\nPromotion adds free bonus items to the purchase made by a user.\nThe promotion can be applied to every purchase within a project or to a purchase that includes particular items.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-admin-get-bonus-promotion"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promotion"
          }
        }
      },
      "delete": {
        "summary": "Delete bonus promotion",
        "tags": [
          "promotions-bonuses"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "delete-bonus-promotion",
        "x-server": true,
        "x-admin": true,
        "description": "Deletes [bonus promotion](https://developers.xsolla.com/doc/shop-builder/features/bonuses/). The deleted promotion:\n* Disappears from the list of promotions set up in your project.\n* Is no longer applied to the item catalog and the cart. User can’t get bonus items with this promotion.\n\nAfter deletion, the promotion can’t be restored.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "responses": {
          "204": {
            "description": "Promotion was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promotion"
          }
        }
      }
    },
    "/v2/project/{project_id}/promotion/code/{code}/verify": {
      "get": {
        "summary": "Verify promotion code",
        "description": "Determines if the code is a promo code or coupon code and if the user can apply it.\n",
        "operationId": "verify-promotion-code",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/code-path-param"
          }
        ],
        "tags": [
          "promotions-common"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-verify-promo-code"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "403": {
            "$ref": "#/components/responses/Promotions_403-auth-header"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-verify-promo-code"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-verify-promo-code"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/virtual_items": {
      "get": {
        "summary": "Get list of virtual items (admin)",
        "description": "Gets the list of virtual items within a project for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "operationId": "admin-get-virtual-items-list",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-admin-get-virtual-items"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create virtual item",
        "description": "Creates a virtual item.",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-create-virtual-item",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Virtual-Items-Currency_admin-create-virtual-item"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Virtual-Items-Currency_201-created"
          },
          "422": {
            "$ref": "#/components/responses/Virtual-Items-Currency_422-invalid-request"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/virtual_items/group/external_id/{external_id}": {
      "get": {
        "summary": "Get list of virtual items by specified group external id",
        "description": "Gets the list of virtual items within a group for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-group-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "operationId": "admin-get-virtual-items-list-by-group-external-id",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-admin-get-virtual-items-by-group"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/virtual_items/group/id/{group_id}": {
      "get": {
        "summary": "Get list of virtual items by specified group id",
        "description": "Gets the list of virtual items within a group for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/group_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "operationId": "admin-get-virtual-items-list-by-group-id",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-admin-get-virtual-items-by-group"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/virtual_items/sku/{item_sku}": {
      "get": {
        "summary": "Get virtual item",
        "description": "Gets the virtual item within a project for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-virtual-item",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-admin-get-item"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      },
      "put": {
        "summary": "Update virtual item",
        "description": "Updates a virtual item.\n",
        "operationId": "admin-update-virtual-item",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Virtual-Items-Currency_admin-create-virtual-item"
        },
        "responses": {
          "204": {
            "description": "Virtual item was successfully updated.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Virtual-Items-Currency_422-invalid-request"
          }
        }
      },
      "delete": {
        "summary": "Delete virtual item",
        "description": "Deletes a virtual item.\n",
        "operationId": "admin-delete-virtual-item",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "responses": {
          "204": {
            "description": "Virtual item was successfully deleted.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/virtual_currency": {
      "get": {
        "summary": "Get list of virtual currencies (admin)",
        "description": "Gets the list of virtual currencies within a project for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "operationId": "admin-get-virtual-currencies-list",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-admin-get-virtual-currencies"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create virtual currency",
        "operationId": "admin-create-virtual-currency",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-server": true,
        "x-admin": true,
        "description": "Creates a virtual currency.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Virtual-Items-Currency_admin-create-virtual-currency"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Virtual-Items-Currency_201-created"
          },
          "422": {
            "$ref": "#/components/responses/Virtual-Items-Currency_422-invalid-request"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/virtual_currency/sku/{virtual_currency_sku}": {
      "get": {
        "summary": "Get virtual currency",
        "description": "Gets the virtual currency within a project for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-virtual-currency",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-server": true,
        "x-admin": true,
        "tags": [
          "virtual-items-currency-admin"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/virtual_currency_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-admin-get-virtual-currency"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Virtual-Items-Currency_404-item"
          }
        }
      },
      "put": {
        "summary": "Update virtual currency",
        "description": "Updates a virtual currency.\n",
        "operationId": "admin-update-virtual-currency",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/virtual_currency_sku-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Virtual-Items-Currency_admin-create-virtual-currency"
        },
        "responses": {
          "204": {
            "description": "Virtual currency was successfully updated.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Virtual-Items-Currency_422-invalid-request"
          }
        }
      },
      "delete": {
        "summary": "Delete virtual currency",
        "description": "Deletes a virtual currency.\n",
        "operationId": "admin-delete-virtual-currency",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/virtual_currency_sku-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "responses": {
          "204": {
            "description": "Virtual currency was successfully deleted.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/virtual_currency/package": {
      "get": {
        "summary": "Get list of virtual currency packages (admin)",
        "description": "Gets the list of virtual currency packages within a project for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "operationId": "admin-get-virtual-currency-packages-list",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-admin-get-virtual-currency-packages"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create virtual currency package",
        "description": "Creates a virtual currency package.",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-create-virtual-currency-package",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Virtual-Items-Currency_admin-create-virtual-currency-package"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Virtual-Items-Currency_201-created"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Virtual-Items-Currency_422-invalid-request"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/virtual_currency/package/sku/{item_sku}": {
      "put": {
        "summary": "Update virtual currency package",
        "description": "Updates a virtual currency package.\n",
        "operationId": "admin-update-virtual-currency-package",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Virtual-Items-Currency_admin-create-virtual-currency-package"
        },
        "responses": {
          "204": {
            "description": "Virtual item was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Virtual-Items-Currency_422-invalid-request"
          }
        }
      },
      "delete": {
        "summary": "Delete virtual currency package",
        "description": "Deletes a virtual currency package.\n",
        "operationId": "admin-delete-virtual-currency-package",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "responses": {
          "204": {
            "description": "Virtual currency package was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      },
      "get": {
        "summary": "Get virtual currency package",
        "description": "Gets the virtual currency package within a project for administration.\n\n<div class=\"note\"><b>Note</b><br><br>Do not use this endpoint for building a store catalog.</div>\n",
        "operationId": "admin-get-virtual-currency-package",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "virtual-items-currency-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-admin-get-virtual-currency-package"
          },
          "401": {
            "$ref": "#/components/responses/Virtual-Items-Currency_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/virtual_items": {
      "get": {
        "summary": "Get virtual items list",
        "description": "Gets a virtual items list for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "operationId": "get-virtual-items",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-items-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/virtual_items/sku/{item_sku}": {
      "get": {
        "summary": "Get virtual item by SKU",
        "description": "Gets a virtual item by SKU for building a catalog.\n<div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "operationId": "get-virtual-items-sku",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-item-by-sku"
          },
          "404": {
            "$ref": "#/components/responses/Virtual-Items-Currency_404-item"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/virtual_items/all": {
      "get": {
        "summary": "Get all virtual items list",
        "description": "Gets a list of all virtual items for searching on client-side.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>Returns only item SKU, name, groups and description</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "operationId": "get-all-virtual-items",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-all-items-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/virtual_currency": {
      "get": {
        "summary": "Get virtual currency list",
        "description": "Gets a virtual currency list for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "operationId": "get-virtual-currency",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-virtual-currency-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/virtual_currency/sku/{virtual_currency_sku}": {
      "get": {
        "summary": "Get virtual currency by SKU",
        "description": "Gets a virtual currency by SKU for building a catalog.\n<div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "operationId": "get-virtual-currency-sku",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/virtual_currency_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-virtual-currency"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/virtual_currency/package": {
      "get": {
        "summary": "Get virtual currency package list",
        "description": "Gets a virtual currency packages list for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "operationId": "get-virtual-currency-package",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-virtual-currency-packages-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/virtual_currency/package/sku/{virtual_currency_package_sku}": {
      "get": {
        "summary": "Get virtual currency package by SKU",
        "description": "Gets a virtual currency packages by SKU for building a catalog.\n<div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "operationId": "get-virtual-currency-package-sku",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/virtual_currency_package_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-virtual-currency-package"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/virtual_items/group/{external_id}": {
      "get": {
        "summary": "Get items list by specified group",
        "description": "Gets an items list from the specified group for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "operationId": "get-virtual-items-group",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-group-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-items-by-group-id"
          },
          "404": {
            "$ref": "#/components/responses/Virtual-Items-Currency_404-item-group"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/groups": {
      "get": {
        "summary": "Get item group list",
        "description": "Gets an item group list for building a catalog.",
        "operationId": "get-item-groups",
        "x-client": true,
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          }
        ],
        "tags": [
          "virtual-items-currency-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-get-items-groups"
          }
        }
      }
    },
    "/v2/project/{project_id}/payment/item/{item_sku}/virtual/{virtual_currency_sku}": {
      "post": {
        "summary": "Create order with specified item purchased by virtual currency",
        "description": "Creates item purchase using virtual currency.",
        "operationId": "create-order-with-item-for-virtual-currency",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/virtual_currency_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/platform-query-param"
          }
        ],
        "tags": [
          "virtual-payment"
        ],
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "custom_parameters": {
                    "$ref": "#/components/schemas/Cart-Payment_custom_parameters"
                  }
                }
              },
              "example": {
                "custom_parameters": {
                  "array_param": [
                    {
                      "object1": {
                        "param": "https://xsolla.com"
                      },
                      "property": {
                        "int_property": 112,
                        "string_property": "xsolla"
                      }
                    },
                    {
                      "object2": {
                        "param": "https://developers.xsolla.com"
                      },
                      "property": {
                        "int_property": 112,
                        "string_property": "email@example.com"
                      }
                    }
                  ],
                  "object_param": {
                    "key": "value"
                  },
                  "bool_param": true,
                  "int_param": 100,
                  "null_param": null
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Virtual-Items-Currency_200-quick-purchase"
          },
          "404": {
            "$ref": "#/components/responses/Virtual-Items-Currency_404-item"
          },
          "422": {
            "$ref": "#/components/responses/Virtual-Items-Currency_422-not-enough-virtual-currency"
          }
        }
      }
    },
    "/v2/project/{project_id}/items": {
      "get": {
        "summary": "Get sellable items list",
        "description": "Gets a sellable items list for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "operationId": "get-sellable-items",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id_59080-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "common-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/sellable_items_200-get-items-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/id/{item_id}": {
      "get": {
        "summary": "Get sellable item by ID",
        "description": "Gets a sellable item by its ID.\n<div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "operationId": "get-sellable-item-by-id",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id_59080-path-param"
          },
          {
            "$ref": "#/components/parameters/item_id_59080-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "common-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/sellable_items_200-get-item-by-id"
          },
          "404": {
            "$ref": "#/components/responses/sellable-item-by-id_404"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/sku/{sku}": {
      "get": {
        "summary": "Get sellable item by SKU",
        "description": "Gets a sellable item by SKU for building a catalog.\n<div class=\"note\"><b>Note</b><br><br>This endpoint, accessible without authorization, returns generic data. However, authorization enriches the response with user-specific details for <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized result</a>, such as available user limits and promotions.</div>",
        "operationId": "get-sellable-item-by-sku",
        "x-client": true,
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id_59080-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku_59080-path-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "common-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/sellable_items_200-get-item-by-id"
          },
          "404": {
            "$ref": "#/components/responses/sellable-item-by-sku_404"
          }
        }
      }
    },
    "/v2/project/{project_id}/items/group/{external_id}": {
      "get": {
        "summary": "Get sellable items list by specified group",
        "description": "Gets a sellable items list from the specified group for building a catalog.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div> <br> <div class=\"note\"><b>Note</b><br><br>In general, the use of catalog of items is available without authorization.<br> Only authorized users can get <a href=\"https://developers.xsolla.com/doc/shop-builder/features/personalization/\" target=\"_blank\">a personalized catalog.</a></div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "operationId": "get-sellable-items-group",
        "x-client": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id_59080-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id_59080-group-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/locale-query-param"
          },
          {
            "$ref": "#/components/parameters/additional_fields-query-param"
          },
          {
            "$ref": "#/components/parameters/country-query-param"
          },
          {
            "$ref": "#/components/parameters/promo_code-query-param"
          },
          {
            "$ref": "#/components/parameters/show_inactive_time_limited_items-query-param"
          }
        ],
        "tags": [
          "common-catalog"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/sellable_items_200-get-items-by-group-id"
          },
          "404": {
            "$ref": "#/components/responses/Virtual-Items-Currency_404-item-group"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/region": {
      "get": {
        "summary": "Get list of regions",
        "description": "Gets list of regions.\n\nYou can use a region for managing your regional restrictions.\n",
        "operationId": "admin-get-regions",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "common-regions"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-regions-list"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create region",
        "description": "Creates region.\n\nYou can use a region for managing your regional restrictions.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-create-region",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "common-regions"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-update-region"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-admin-create-region"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/region/{region_id}": {
      "get": {
        "summary": "Get region",
        "description": "Gets particular region.\n\nYou can use a region for managing your regional restrictions.\n",
        "operationId": "admin-get-region",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/region_id-path-param"
          }
        ],
        "tags": [
          "common-regions"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-region"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-region-not-found"
          }
        }
      },
      "put": {
        "summary": "Update region",
        "description": "Updates particular region.\n\nYou can use a region for managing your regional restrictions.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-update-region",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/region_id-path-param"
          }
        ],
        "tags": [
          "common-regions"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-update-region"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204-admin-update-region"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-region-not-found"
          }
        }
      },
      "delete": {
        "summary": "Delete region",
        "description": "Deletes particular region.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-delete-region",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/region_id-path-param"
          }
        ],
        "tags": [
          "common-regions"
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204-admin-delete-region"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-region-not-found"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/user/limit/item/all": {
      "delete": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "reset-all-user-items-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "summary": "Refresh all purchase limits for specified user",
        "description": "Refreshes all purchase limits across all items for a specified user so they can purchase these items again.\n\nUser limit API allows you to sell an item in a limited quantity. To configure the purchase limits, go to the Admin section of the desired item type module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n",
        "responses": {
          "200": {
            "description": "The limit was successfully refreshed."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "User not found": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 5008,
                      "errorMessage": "[0401-5008]: Could not find User"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "property": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "value": {
                      "statusCode": 404,
                      "errorCode": 1102,
                      "errorMessage": "[0401-1102]: Unprocessable Entity",
                      "errorMessageExtended": [
                        {
                          "property": "user_external_id",
                          "message": "Must be at least 1 characters long"
                        },
                        {
                          "property": "user_external_id",
                          "message": "Does not match the regex pattern ^\\S+$"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/reset-user-limits"
        }
      }
    },
    "/v2/project/{project_id}/admin/user/limit/item/sku/{item_sku}/all": {
      "delete": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "reset-user-item-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Refresh purchase limit",
        "description": "Refreshes the purchase limit for an item so a user can buy it again. If the *user* parameter is `null`, this call refreshes this limit for all users.\n\nUser limit API allows you to sell an item in a limited quantity. To configure the purchase limits, go to the Admin section of the desired item type module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n",
        "responses": {
          "200": {
            "description": "The limit was successfully refreshed."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-item-by-sku-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Item does not have configured user limits": {
                    "$ref": "#/components/examples/422-item-without-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/reset-user-limits-flexible"
        }
      }
    },
    "/v2/project/{project_id}/admin/user/limit/item/sku/{item_sku}": {
      "get": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-user-item-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          },
          {
            "$ref": "#/components/parameters/user_external_id-query-param"
          }
        ],
        "summary": "Get number of items available to specified user",
        "description": "Gets the remaining number of items available to the specified user within the limit applied.\n\nUser limit API allows you to sell an item in a limited quantity. To configure the purchase limits, go to the Admin section of the desired item type module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-item-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-item-by-sku-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Item does not have configured user limits": {
                    "$ref": "#/components/examples/422-item-without-user-limit"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "add-user-item-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Increase number of items available to specified user",
        "description": "Increases the remaining number of items available to the specified user within the limit applied.\n\nUser limit API allows you to sell an item in a limited quantity. To configure the purchase limits, go to the Admin section of the desired item type module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-item-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-item-by-sku-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Item does not have configured user limits": {
                    "$ref": "#/components/examples/422-item-without-user-limit"
                  },
                  "Available item limit is out of range": {
                    "$ref": "#/components/examples/422-item-out-of-range-available-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-user-limits-strict"
        }
      },
      "put": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "set-user-item-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Set number of items available to specified user",
        "description": "Sets the number of items the specified user can buy within the limit applied after it was increased or decreased.\n\nUser limit API allows you to sell an item in a limited quantity. To configure the purchase limits, go to the Admin section of the desired item type module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-item-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-item-by-sku-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Item does not have configured user limits": {
                    "$ref": "#/components/examples/422-item-without-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-user-limits-flexible"
        }
      },
      "delete": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "remove-user-item-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "summary": "Decrease number of items available to specified user",
        "description": "Decreases the remaining number of items available to the specified user within the limit applied.\n\nUser limit API allows you to sell an item in a limited quantity. To configure the purchase limits, go to the Admin section of the desired item type module:\n* [Game Keys](https://developers.xsolla.com/api/shop-builder/operation/admin-create-game/)\n* [Virtual Items & Currency](https://developers.xsolla.com/api/shop-builder/operation/admin-get-virtual-items-list/)\n* [Bundles](https://developers.xsolla.com/api/shop-builder/operation/admin-get-bundle-list/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-item-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-item-by-sku-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Item does not have configured user limits": {
                    "$ref": "#/components/examples/422-item-without-user-limit"
                  },
                  "Available item limit is out of range": {
                    "$ref": "#/components/examples/422-item-out-of-range-available-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-user-limits-strict"
        }
      }
    },
    "/v2/project/{project_id}/admin/user/limit/promotion/all": {
      "delete": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "reset-all-user-promotions-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "summary": "Refresh all promotion limits for specified user",
        "description": "Refreshes all limits across all promotions for the specified user so they can use these promotions again.\n\nUser limit API allows you to limit the number of times users can use a promotion. For configuring the user limit itself, go to the Admin section of the desired promotion type:\n* [Discount Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-discounts/)\n* [Bonus Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-bonuses/)\n",
        "responses": {
          "200": {
            "description": "The promotion limit was successfully refreshed."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/reset-user-limits"
        }
      }
    },
    "/v2/project/{project_id}/admin/user/limit/promotion/id/{promotion_id}/all": {
      "delete": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "reset-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "summary": "Refresh promotion limit for users",
        "description": "Refreshes the promotion limit so a user can use this promotion again. If the *user* parameter is `null`, this call refreshes this limit for all users.\n\nUser limit API allows you to limit the number of times users can use a promotion. For configuring the user limit itself, go to the Admin section of the desired promotion type:\n* [Discount Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-discounts/)\n* [Bonus Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-bonuses/)\n",
        "responses": {
          "200": {
            "description": "The promotion limit was successfully refreshed."
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-promotion-by-id-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Promotion does not have configured user limits": {
                    "$ref": "#/components/examples/422-promotion-without-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/reset-user-limits-flexible"
        }
      }
    },
    "/v2/project/{project_id}/admin/user/limit/promotion/id/{promotion_id}": {
      "get": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          },
          {
            "$ref": "#/components/parameters/user_external_id-query-param"
          }
        ],
        "summary": "Get promotion limit for specified user",
        "description": "Gets the remaining number of times the specified user can use the promotion within the limit applied.\n\nUser limit API allows you to limit the number of times users can use a promotion. For configuring the user limit itself, go to the Admin section of the desired promotion type:\n* [Discount Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-discounts/)\n* [Bonus Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-bonuses/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-promotion-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-promotion-by-id-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Promotion does not have configured user limits": {
                    "$ref": "#/components/examples/422-promotion-without-user-limit"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "add-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "summary": "Increase promotion limit for specified user",
        "description": "Increases the remaining number of times the specified user can use the promotion within the limit applied.\n\nUser limit API allows you to limit the number of times users can use a promotion. For configuring the user limit itself, go to the Admin section of the desired promotion type:\n* [Discount Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-discounts/)\n* [Bonus Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-bonuses/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-promotion-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-promotion-by-id-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Promotion does not have configured user limits": {
                    "$ref": "#/components/examples/422-promotion-without-user-limit"
                  },
                  "Available promotion limit is out of range": {
                    "$ref": "#/components/examples/422-promotion-out-of-range-available-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-user-limits-strict"
        }
      },
      "put": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "set-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "summary": "Set promotion limit for specified user",
        "description": "Sets the number of times the specified user can use a promotion within the limit applied after it was increased or decreased.\n\nUser limit API allows you to limit the number of times users can use a promotion. For configuring the user limit itself, go to the Admin section of the desired promotion type:\n* [Discount Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-discounts/)\n* [Bonus Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-bonuses/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-promotion-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-promotion-by-id-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Promotion does not have configured user limits": {
                    "$ref": "#/components/examples/422-promotion-without-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-user-limits-flexible"
        }
      },
      "delete": {
        "tags": [
          "user-limits-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "remove-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/promotion_id-path-param"
          }
        ],
        "summary": "Decrease promotion limit for specified user",
        "description": "Decreases the remaining number of times the specified user can use a promotion within the limit applied.\n\nUser limit API allows you to limit the number of times users can use a promotion. For configuring the user limit itself, go to the Admin section of the desired promotion type:\n* [Discount Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-discounts/)\n* [Bonus Promotions](https://developers.xsolla.com/api/shop-builder/tag/promotions-bonuses/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-promotion-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Item not found": {
                    "$ref": "#/components/examples/404-promotion-by-id-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Promotion does not have configured user limits": {
                    "$ref": "#/components/examples/422-promotion-without-user-limit"
                  },
                  "Available promotion limit is out of range": {
                    "$ref": "#/components/examples/422-promotion-out-of-range-available-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-user-limits-strict"
        }
      }
    },
    "/v2/project/{project_id}/admin/user/limit/promocode/external_id/{external_id}": {
      "get": {
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-promo-code-user-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          },
          {
            "$ref": "#/components/parameters/user_external_id-query-param"
          }
        ],
        "summary": "Get promo code limit for specified user",
        "description": "Gets the remaining number of times the specified user can use the promo code.\n\nUser limit API allows you to limit the number of times users can use a promo code. For configuring the user limit itself, go to the Admin section:\n* [Promo Codes](https://developers.xsolla.com/api/shop-builder/tag/promotions-promo-codes/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-promo-code-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Promo code not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/Promotions_422-invalid-coupon"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "add-promo-code-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "summary": "Increase promo code limit for specified user",
        "description": "Increases the remaining number of times the specified user can use the promo code.\n\nUser limit API allows you to limit the number of times users can use a promo code. For configuring the user limit itself, go to the Admin section:\n* [Promo Codes](https://developers.xsolla.com/api/shop-builder/tag/promotions-promo-codes/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-promo-code-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Promo code not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Available promo code limit is out of range": {
                    "$ref": "#/components/examples/422-promo-code-out-of-range-available-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-promo-code-user-limits-strict"
        }
      },
      "put": {
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "set-promo-code-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "summary": "Set promo code limit for specified user",
        "description": "Sets the number of times the specified user can use a promo code after it was increased or decreased.\n\nUser limit API allows you to limit the number of times users can use a promo code. For configuring the user limit itself, go to the Admin section:\n* [Promo Codes](https://developers.xsolla.com/api/shop-builder/tag/promotions-promo-codes/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-promo-code-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Promo code not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-promo-code-user-limits-flexible"
        }
      },
      "delete": {
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "remove-promo-code-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "summary": "Decrease promo code limit for specified user",
        "description": "Decreases the remaining number of times the specified user can use a promo code.\n\nUser limit API allows you to limit the number of times users can use a promo code. For configuring the user limit itself, go to the Admin section:\n* [Promo Codes](https://developers.xsolla.com/api/shop-builder/tag/promotions-promo-codes/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-promo-code-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Promo code not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Available promo code limit is out of range": {
                    "$ref": "#/components/examples/422-promo-code-out-of-range-available-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-promo-code-user-limits-strict"
        }
      }
    },
    "/v2/project/{project_id}/admin/user/limit/coupon/external_id/{external_id}": {
      "get": {
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-coupon-user-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          },
          {
            "$ref": "#/components/parameters/user_external_id-query-param"
          }
        ],
        "summary": "Get coupon limit for specified user",
        "description": "Gets the remaining number of times the specified user can use the coupon.\n\nUser limit API allows you to limit the number of times users can use a coupon. For configuring the user limit itself, go to the Admin section:\n* [Coupons](https://developers.xsolla.com/api/shop-builder/tag/promotions-coupons/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-coupon-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Coupon not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/Promotions_422-invalid-coupon"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "add-coupon-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "summary": "Increase coupon limit for specified user",
        "description": "Increases the remaining number of times the specified user can use the coupon.\n\nUser limit API allows you to limit the number of times users can use a coupon. For configuring the user limit itself, go to the Admin section:\n* [Coupons](https://developers.xsolla.com/api/shop-builder/tag/promotions-coupons/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-coupon-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Coupon not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Available coupon limit is out of range": {
                    "$ref": "#/components/examples/422-coupon-out-of-range-available-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-coupon-user-limits-strict"
        }
      },
      "put": {
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "set-coupon-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "summary": "Set coupon limit for specified user",
        "description": "Sets the number of times the specified user can use a coupon after it was increased or decreased.\n\nUser limit API allows you to limit the number of times users can use a coupon. For configuring the user limit itself, go to the Admin section:\n* [Coupons](https://developers.xsolla.com/api/shop-builder/tag/promotions-coupons/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-coupon-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Coupon not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-coupon-user-limits-flexible"
        }
      },
      "delete": {
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "remove-coupon-user-promotion-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "summary": "Decrease coupon limit for specified user",
        "description": "Decreases the remaining number of times the specified user can use a coupon.\n\nUser limit API allows you to limit the number of times users can use a coupon. For configuring the user limit itself, go to the Admin section:\n* [Coupons](https://developers.xsolla.com/api/shop-builder/tag/promotions-coupons/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-user-coupon-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Coupon not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  },
                  "User not found": {
                    "$ref": "#/components/examples/404-user-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid user_external_id": {
                    "$ref": "#/components/examples/422-user_external_id_invalid"
                  },
                  "Available coupon limit is out of range": {
                    "$ref": "#/components/examples/422-coupon-out-of-range-available-user-limit"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/update-coupon-user-limits-strict"
        }
      }
    },
    "/v2/project/{project_id}/admin/code/limit/promocode/external_id/{external_id}": {
      "get": {
        "tags": [
          "promotions-promo-codes"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-promo-code-code-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          },
          {
            "$ref": "#/components/parameters/codes-query-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "summary": "Get promo code limit for codes",
        "description": "Gets the remaining number of times codes can be used. For filtering the codes, use the `codes` query parameter.\n\nFor configuring the code limit itself, go to the Admin section:\n* [Promo Codes](https://developers.xsolla.com/api/shop-builder/tag/promotions-promo-codes/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-code-promo-code-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Promo code not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/code/limit/coupon/external_id/{external_id}": {
      "get": {
        "tags": [
          "promotions-coupons"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "get-coupon-code-limit",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          },
          {
            "$ref": "#/components/parameters/codes-query-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "summary": "Get unique coupon code limits",
        "description": "Gets the remaining number of times codes can be used. For filtering the codes, use the `codes` query parameter.\n\nFor configuring the code limit itself, go to the Admin section:\n* [Coupons](https://developers.xsolla.com/api/shop-builder/tag/promotions-coupons/)\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-code-coupon-limits"
          },
          "401": {
            "$ref": "#/components/responses/Common_401-invalid-basic-auth"
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Coupon not found": {
                    "$ref": "#/components/examples/404-coupon-not-found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "errorCode": {
                      "type": "integer"
                    },
                    "errorMessage": {
                      "type": "string"
                    },
                    "errorMessageExtended": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/value_points": {
      "get": {
        "summary": "Get list of value points (admin)",
        "description": "Gets the list of value points within a project for administration.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "operationId": "admin-get-value-points-list",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-value-points"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create value point",
        "description": "Creates a value point.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "operationId": "admin-create-value-points",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-value-point"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-admin-create-value-point"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/422-admin-create-update-rc-vp-invalid-request"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/value_points/sku/{item_sku}": {
      "get": {
        "summary": "Get value point",
        "description": "Gets a value point by the SKU within a project for administration.\n",
        "operationId": "admin-get-value-point",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-value-point"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      },
      "put": {
        "summary": "Update value point",
        "description": "Updates a value point identified by an SKU.\n",
        "operationId": "admin-update-value-point",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-value-point"
        },
        "responses": {
          "204": {
            "description": "Value point was successfully updated.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/422-admin-create-update-rc-vp-invalid-request"
          }
        }
      },
      "delete": {
        "summary": "Delete value points",
        "description": "Deletes a value point identified by an SKU.\n",
        "operationId": "admin-delete-value-point",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/item_sku-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "responses": {
          "204": {
            "description": "Value point was successfully deleted.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/items/{value_point_sku}/value_points/rewards": {
      "get": {
        "summary": "Get list of items with value points",
        "description": "Gets list of all items with value points within a project for administration.\n",
        "operationId": "admin-get-items-value-point-reward",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/value_point_sku-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-list-value-point-rewards"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      },
      "put": {
        "summary": "Set value points for items",
        "description": "Assigns value points to one or several items by an SKU. Users receive value points after they purchase these items.\n\nNote that this PUT request overwrites all previously set value points for items in the project.\n\nTo avoid unintentional deletion of value points, include all items and their respective value points in each PUT request.\n\nIf you only want to update the value points for a specific item while preserving the value points of other items, you should retrieve the current set of value points using a GET request, modify the desired item's value points, and then send the modified set of value points back with the updated value points for the specific item.\n",
        "operationId": "admin-set-items-value-point-reward",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/value_point_sku-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/set-item-value-point-reward"
        },
        "responses": {
          "204": {
            "description": "Value point rewards for items were successfully updated.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/sellable-item-by-sku_404"
          }
        }
      },
      "patch": {
        "summary": "Partially update value points for items",
        "description": "Partially updates the number of value points for one or more items by the item’s SKU. Users receive these value points after purchasing the specified items.\n\nPrinciples of updating value points:\n  * If an item does not yet have value points, sending a non-zero value in the `amount` field creates them.\n  * If an item already has value points, sending a non-zero value in the `amount` field updates them.\n  * If `amount` is set to 0, the existing value points for that item are deleted.\n\nUnlike the `PUT` method ([Set value points for items](https://developers.xsolla.com/api/shop-builder/operation/admin-set-items-value-point-reward/)), this `PATCH` method does not overwrite all existing value points for items in the project, it only updates the specified items.\n\nA single request can update up to 100 items. Duplicate item SKUs cannot be included in the same request.\n",
        "operationId": "admin-patch-items-value-point-reward",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/value_point_sku-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/set-item-value-point-reward-for-patch"
        },
        "responses": {
          "204": {
            "description": "Value point rewards for items were successfully updated.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/sellable-item-by-sku_404"
          }
        }
      },
      "delete": {
        "summary": "Delete value points from items",
        "description": "Removes value point rewards from ALL items.\n",
        "operationId": "admin-delete-items-value-point-reward",
        "x-server": true,
        "x-admin": true,
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/value_point_sku-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "responses": {
          "204": {
            "description": "Value point rewards for items were successfully deleted.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/user/reward_chain": {
      "get": {
        "tags": [
          "reward-chain-client"
        ],
        "operationId": "get-reward-chains-list",
        "x-client": true,
        "summary": "Get current user's reward chains",
        "description": "Client endpoint. Gets the current user’s reward chains.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>50 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-client-get-reward-chains-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/user/reward_chain/{reward_chain_id}/balance": {
      "get": {
        "tags": [
          "reward-chain-client"
        ],
        "operationId": "get-user-reward-chain-balance",
        "x-client": true,
        "summary": "Get current user's value point balance",
        "description": "Client endpoint. Gets the current user’s value point balance.\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/reward_chain_id-path-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-client-get-user-reward-chain-balance"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/user/reward_chain/{reward_chain_id}/step/{step_id}/claim": {
      "post": {
        "tags": [
          "reward-chain-client"
        ],
        "operationId": "claim-user-reward-chain-step-reward",
        "x-client": true,
        "summary": "Claim step reward",
        "description": "Client endpoint. Claims the current user’s step reward from a reward chain.\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/reward_chain_id-path-param"
          },
          {
            "$ref": "#/components/parameters/reward_chain_step_id-path-param"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully claimed the current user's step reward from a reward chain."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-reward-chain-step-not-found"
          },
          "422": {
            "$ref": "#/components/responses/422-reward-chain-step-reward-can-not-claimed"
          }
        }
      }
    },
    "/v2/project/{project_id}/user/clan/contributors/{reward_chain_id}/top": {
      "get": {
        "tags": [
          "clan-reward-chain-client"
        ],
        "operationId": "get-user-clan-top-contributors",
        "x-client": true,
        "responses": {
          "200": {
            "description": "The top 10 list of contributors to the clan's reward chain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Rocket",
                        "description": "User ID. This is the ID sending to Xsolla during authorization and links the user to your Xsolla Login project."
                      },
                      "contributed_amount": {
                        "type": "integer",
                        "example": 100,
                        "description": "The amount of value points contributed by the user."
                      }
                    }
                  }
                },
                "examples": {
                  "clan": {
                    "summary": "User has a clan",
                    "value": [
                      {
                        "name": "winner",
                        "contributed_amount": 555
                      },
                      {
                        "name": "Rocket",
                        "contributed_amount": 398
                      },
                      {
                        "name": "MrJoe",
                        "contributed_amount": 201
                      },
                      {
                        "name": "beginner",
                        "contributed_amount": 1
                      }
                    ]
                  },
                  "without-clan": {
                    "summary": "User doesn't belong to a clan",
                    "value": []
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "description": "Project ID.",
            "schema": {
              "type": "integer",
              "example": 44056
            }
          },
          {
            "name": "reward_chain_id",
            "in": "path",
            "required": true,
            "description": "Reward chain ID.",
            "schema": {
              "type": "integer",
              "example": 101
            }
          }
        ],
        "summary": "Get top 10 contributors to reward chain under clan",
        "description": "Retrieves the list of top 10 contributors to the specific reward chain under the current user's clan. If a user doesn't belong to a clan, the call returns an empty array."
      }
    },
    "/v2/project/{project_id}/user/clan/update": {
      "put": {
        "tags": [
          "clan-reward-chain-client"
        ],
        "operationId": "user-clan-update",
        "x-client": true,
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-client-update-user-clan"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          }
        },
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "description": "Project ID.",
            "schema": {
              "type": "integer",
              "default": 44056
            }
          }
        ],
        "summary": "Update current user's clan",
        "description": "Updates a current user's clan via user attributes. Claims all rewards from reward chains that were not claimed for a previous clan and returns them in the response. If the user was in a clan and now is not — their inclusion in the clan will be revoked. If the user changed the clan — the clan will be changed.\n"
      }
    },
    "/v2/project/{project_id}/user/offer_chain": {
      "get": {
        "tags": [
          "offer-chain-client"
        ],
        "operationId": "get-offer-chains-list",
        "x-client": true,
        "summary": "Get current user's offer chains",
        "description": "Gets the current user’s offer chains.\n<div class=\"notice\"><strong>Notice</strong><br><br>All projects have a limit on the number of items that can be returned in a single response. The default and maximum value is <strong>30 items per response</strong>. To get more data, use the <code>limit</code> and <code>offset</code> query parameters for pagination.</div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-client-get-offer-chains-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/user/offer_chain/{offer_chain_id}": {
      "get": {
        "tags": [
          "offer-chain-client"
        ],
        "operationId": "get-user-offer-chain-by-id",
        "x-client": true,
        "summary": "Get current user's offer chain by ID",
        "description": "Gets the current user’s offer chain by the offer chain's ID.\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_id-path-param"
          }
        ],
        "responses": {
          "200": {
            "description": "The user’s offer chain was successfully retrieved.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "$ref": "#/components/examples/200-client-offer-chain"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/client-offer-chain-model"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-offer-chain-not-found"
          }
        }
      }
    },
    "/v2/project/{project_id}/user/offer_chain/{offer_chain_id}/step/number/{step_number}/claim": {
      "post": {
        "tags": [
          "offer-chain-client"
        ],
        "operationId": "claim-user-offer-chain-step-reward",
        "x-client": true,
        "summary": "Claim free offer chain step",
        "description": "Completes the current user’s progression through the offer chain step and grants the associated reward.\n<div class=\"notice\">\n  <strong>Notice</strong><br><br>\n    Use this call only for free steps in the offer chain.\n    For steps that require payment in real currency, use the <a href=\"/api/shop-builder/operation/order-user-offer-chain-step-reward\">Create order for paid offer chain step</a> call instead.\n</div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_step_number-path-param"
          }
        ],
        "responses": {
          "200": {
            "description": "The free step was successfully claimed and the reward granted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "order_id": {
                      "type": "integer",
                      "description": "Order ID."
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "order_id": 641
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-offer-chain-step-not-found"
          },
          "422": {
            "description": "The step cannot be claimed. Ensure all previous steps are completed and the step is marked as free.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offer-chain-error-model"
                },
                "examples": {
                  "invalid-step": {
                    "$ref": "#/components/examples/422-offer-chain-claim-error-invalid-step"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/user/offer_chain/{offer_chain_id}/step/number/{step_number}/order": {
      "post": {
        "tags": [
          "offer-chain-client",
          "payment-client-side"
        ],
        "operationId": "order-user-offer-chain-step-reward",
        "x-client": true,
        "summary": "Create order for paid offer chain step",
        "description": "Creates an order for the item associated with the specified paid offer chain step. The created order gets the `new` order status.\n\nTo open the payment UI in a new window, use the following link: `https://secure.xsolla.com/paystation4/?token={token}`, where `{token}` is the received token.\n\nFor testing purposes, use this URL: `https://sandbox-secure.xsolla.com/paystation4/?token={token}`.\n\n<div class=\"notice\">\n  <strong>Notice</strong> <br><br>\n    This method must be used on the client side. The user's IP address is used to determine the country, which affects the currency and available payment methods. Using this method from the server side may result in incorrect currency detection and affect payment methods in <a href=\"https://developers.xsolla.com/doc/pay-station/\">Pay Station</a>.\n</div><br>\n\n<div class=\"notice\">\n  <strong>Notice</strong><br><br>\n    Use this call only for paid offer chain steps.\n    For free steps, use the <a href=\"/api/shop-builder/operation/claim-user-offer-chain-step-reward\">Claim free offer chain step</a> call instead.\n</div>\n",
        "security": [
          {
            "XsollaLoginUserJWT": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_step_number-path-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cart-Payment_200-order-created"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-client-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-offer-chain-step-not-found"
          },
          "422": {
            "description": "The step cannot be purchased.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offer-chain-error-model"
                },
                "examples": {
                  "invalid-step": {
                    "$ref": "#/components/examples/422-offer-chain-claim-error-invalid-step"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/reward_chain": {
      "get": {
        "summary": "Get list of reward chains",
        "description": "Gets list of reward chains.\n\n<div class=\"notice\"><strong>Attention</strong><br><br>All projects have the limitation to the number of items that you can get in the response. The default and maximum value is <strong>10 items per response.</strong> To get more data page by page, use <b>limit</b> and <b>offset</b> fields.</div>\n",
        "operationId": "admin-get-reward-chains",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/enabled-query-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-list-reward-chains"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create reward chain",
        "description": "Creates reward chain.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-create-reward-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-reward-chain"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-admin-create-reward-chain"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/422-admin-create-update-rc-vp-invalid-request"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/reward_chain/id/{reward_chain_id}": {
      "get": {
        "summary": "Get reward chain",
        "description": "Gets particular reward chain.\n",
        "operationId": "admin-get-reward-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/reward_chain_id-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-reward-chain"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-admin-reward-chain-not-found"
          }
        }
      },
      "put": {
        "summary": "Update reward chain",
        "description": "Updates particular reward chain.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-update-reward-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/reward_chain_id-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/update-reward-chain"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204-admin-update-reward-chain"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-admin-reward-chain-not-found"
          },
          "422": {
            "$ref": "#/components/responses/422-admin-create-update-rc-vp-invalid-request"
          }
        }
      },
      "delete": {
        "summary": "Delete reward chain",
        "description": "Deletes particular reward chain.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-delete-reward-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/reward_chain_id-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204-admin-delete-reward-chain"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/reward_chain/id/{reward_chain_id}/toggle": {
      "put": {
        "summary": "Toggle reward chain",
        "description": "Enable/disable reward chain.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-toggle-reward-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/reward_chain_id-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204-admin-toggle-reward-chain"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/reward_chain/id/{reward_chain_id}/reset": {
      "post": {
        "summary": "Reset reward chain",
        "description": "Resets value points and progress of all users in the reward chain.<br> After the reset, you can update the validity period of the reward chain and the user can progress through it again.\n<div class=\"notice\"><strong>Notice</strong>\n  <br><br>\n  You should not reset the reward chain during its validity period. In this case, users may lose earned value points before they claim their reward.\n</div>\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-reset-reward-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/reward_chain_id-path-param"
          }
        ],
        "tags": [
          "reward-chain-value-points-admin"
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204-admin-reset-reward-chain"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/offer_chain": {
      "get": {
        "summary": "Get list of offer chains",
        "description": "Gets list of offer chains for administration.\n<div class=\"notice\"><strong>Notice</strong><br><br>All projects have a limit on to the number of items that can be returned in a single response. The default and maximum value is <strong>10 items per response</strong>. To get more data, use the <code>limit</code> and <code>offset</code> query parameters for pagination.</div>\n",
        "operationId": "admin-get-offer-chains",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          },
          {
            "$ref": "#/components/parameters/enabled-query-param"
          }
        ],
        "tags": [
          "offer-chain-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-list-offer-chains"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        }
      },
      "post": {
        "summary": "Create offer chain",
        "description": "Creates an offer chain.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-create-offer-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "offer-chain-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-offer-chain"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-admin-create-offer-chain"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/422-create-error-list"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/offer_chain/id/{offer_chain_id}": {
      "get": {
        "summary": "Get offer chain",
        "description": "Gets a particular offer chain for administration.",
        "operationId": "admin-get-offer-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_id-path-param"
          }
        ],
        "tags": [
          "offer-chain-admin"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-admin-get-offer-chain"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-offer-chain-not-found"
          }
        }
      },
      "put": {
        "summary": "Update offer chain",
        "description": "Updates a particular offer chain.",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-update-offer-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_id-path-param"
          }
        ],
        "tags": [
          "offer-chain-admin"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/update-offer-chain"
        },
        "responses": {
          "204": {
            "description": "Offer chain was successfully updated.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-offer-chain-not-found"
          },
          "422": {
            "$ref": "#/components/responses/422-update-error-list"
          }
        }
      },
      "delete": {
        "summary": "Delete offer chain",
        "description": "Deletes a particular offer chain.\n\nAfter deletion:<ul><li>All rewards already received by users are retained.</li><li>Uncompleted steps become unavailable, and their rewards can no longer be obtained.</li></ul>\n\nUnlike disabling the offer chain via the <a href=\"/api/shop-builder/operation/admin-toggle-offer-chain\">Toggle offer chain</a> call, deletion is irreversible and user progress is not preserved.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-delete-offer-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_id-path-param"
          }
        ],
        "tags": [
          "offer-chain-admin"
        ],
        "responses": {
          "204": {
            "description": "Offer chain was successfully deleted.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-offer-chain-not-found"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/offer_chain/id/{offer_chain_id}/toggle": {
      "put": {
        "summary": "Toggle offer chain",
        "description": "Enables or disables an offer chain.\n\nWhen the offer chain is disabled, users temporarily lose access to it, but their progress is preserved.\n\nAfter the offer chain is re-enabled, users can continue from the step where they left off.\n",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "admin-toggle-offer-chain",
        "x-server": true,
        "x-admin": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/offer_chain_id-path-param"
          }
        ],
        "tags": [
          "offer-chain-admin"
        ],
        "responses": {
          "204": {
            "description": "The offer chain has been disabled/enabled.",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/404-offer-chain-not-found"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/unique_catalog_offer": {
      "post": {
        "operationId": "admin-create-unique-catalog-offer",
        "x-server": true,
        "x-admin": true,
        "summary": "Create unique catalog offer promotion",
        "description": "Creates a unique catalog offer promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_unique_catalog_offer-create"
        },
        "responses": {
          "201": {
            "description": "Unique catalog offer was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "$ref": "#/components/schemas/Promotions_coupon-external_id"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "external_id": "coupon_external_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-invalid-coupon"
          }
        }
      },
      "get": {
        "operationId": "get-unique-catalog-offers",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get list of unique catalog offer promotions",
        "description": "Gets the list of unique catalog offer promotions of a project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-get-unique-catalog-offers"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/unique_catalog_offer/{external_id}": {
      "put": {
        "operationId": "update-unique-catalog-offer-promotion",
        "x-server": true,
        "x-admin": true,
        "summary": "Update unique catalog offer promotion",
        "description": "Updates the unique catalog offer promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_unique_catalog_offer-update"
        },
        "responses": {
          "204": {
            "description": "Unique catalog offer was successfully updated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-invalid-coupon"
          }
        }
      },
      "get": {
        "operationId": "get-unique-catalog-offer",
        "x-server": true,
        "x-admin": true,
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get unique catalog offer promotion",
        "description": "Gets the specified unique catalog offer promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique catalog offer was successfully received.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotions_200-get-unique-catalog-offer-promotion-model"
                },
                "examples": {
                  "response": {
                    "value": {
                      "external_id": "secret_shop",
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "name": {
                        "en-US": "Secret shop",
                        "ru-RU": "Секретный магазин"
                      },
                      "items": [
                        "helmet",
                        "sword",
                        "shield"
                      ],
                      "is_enabled": true,
                      "redeem_user_limit": 1,
                      "redeem_total_limit": 100,
                      "redeem_code_limit": 1,
                      "total_limit_state": {
                        "available": 50,
                        "reserved": 10,
                        "used": 40
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          }
        }
      },
      "delete": {
        "operationId": "delete-unique-catalog-offer-promotion",
        "x-server": true,
        "x-admin": true,
        "summary": "Delete unique catalog offer promotion",
        "description": "Deletes [unique catalog offer promotion](https://developers.xsolla.com/doc/shop-builder/features/unique-offer/). The deleted promotion:\n* Disappears from the list of promotions set up in your project.\n* Is no longer applied to the item catalog and the cart. User can’t buy items with this promotion.\n\nAfter deletion, the promotion can’t be restored.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Unique catalog offer was successfully deleted."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/unique_catalog_offer/{external_id}/activate": {
      "put": {
        "operationId": "activate-unique-catalog-offer",
        "x-server": true,
        "x-admin": true,
        "summary": "Activate unique catalog offer promotion",
        "description": "Activates a unique catalog offer promotion.\nThe created unique catalog offer promotion is disabled by default.\nIt cannot be redeemed until you activate it.\nUse this endpoint to enable and activate a coupon promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Unique catalog offer was successfully activated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-error"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/unique_catalog_offer/{external_id}/deactivate": {
      "put": {
        "operationId": "deactivate-unique-catalog-offer",
        "x-server": true,
        "x-admin": true,
        "summary": "Deactivate unique catalog offer promotion",
        "description": "Deactivates a unique catalog offer promotion.\nThe created unique catalog offer promotion is disabled by default.\nIt cannot be redeemed until you activate it.\nUse this endpoint to disable and deactivate a coupon promotion.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Unique catalog offer was successfully deactivated."
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-admin-promotion-error"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/unique_catalog_offer/{external_id}/code": {
      "post": {
        "operationId": "create-unique-catalog-offer-code",
        "x-server": true,
        "x-admin": true,
        "summary": "Create unique catalog offer code",
        "description": "Creates unique catalog offer code.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Promotions_create-coupon-promocode-code"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Promotions_201-coupon-promocode-code-created"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          },
          "422": {
            "$ref": "#/components/responses/Promotions_422-coupon-promocode-same-code-exists"
          }
        }
      },
      "get": {
        "operationId": "get-unique-catalog-offer-codes",
        "x-server": true,
        "x-admin": true,
        "summary": "Get unique catalog offer codes",
        "description": "Gets unique catalog offer codes.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          },
          {
            "$ref": "#/components/parameters/limit-query-param"
          },
          {
            "$ref": "#/components/parameters/offset-query-param"
          }
        ],
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Promotions_200-unique-catalog-offer-code-list"
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-coupon"
          }
        }
      }
    },
    "/v2/project/{project_id}/admin/unique_catalog_offer/{external_id}/code/generate": {
      "put": {
        "operationId": "generate-unique-catalog-offer-codes",
        "x-server": true,
        "x-admin": true,
        "summary": "Generate unique catalog offer codes",
        "description": "Generates unique catalog offer codes.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          },
          {
            "$ref": "#/components/parameters/external_id-promotion-path-param"
          }
        ],
        "tags": [
          "promotions-unique-catalog-offers"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "count": {
                    "$ref": "#/components/schemas/Promotions_coupon-generate-count"
                  }
                },
                "required": [
                  "count"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The codes were successfully generated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "$ref": "#/components/schemas/Promotions_coupon-generate-count"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "count": 10
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Promotions_401-invalid-basic-auth"
          },
          "404": {
            "$ref": "#/components/responses/Promotions_404-admin-promocode"
          }
        }
      }
    },
    "/v1/projects/{project_id}/import/from_external_file": {
      "post": {
        "tags": [
          "connector-admin"
        ],
        "operationId": "import-items-from-external-file",
        "summary": "Import items via JSON file",
        "description": "Imports items into the store from a JSON file via the specified URL. Refer to the [documentation](https://developers.xsolla.com/doc/shop-builder/how-to/json-import/) for more information about import from a JSON file.",
        "servers": [
          {
            "url": "https://connector.xsolla.com"
          }
        ],
        "x-admin": true,
        "x-server": true,
        "responses": {
          "201": {
            "description": "The file has been successfully imported and is being processed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "import_id": {
                      "type": "string",
                      "example": "af9f3638a16e11ef880da2cd677d2d24",
                      "description": "Import operation ID. If you encounter difficulties importing the JSON file, report this ID to your Customer Success Manager or send an email to csm@xsolla.com."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          },
          "422": {
            "$ref": "#/components/responses/connector-422-validation-failed"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/connector-import-items-body"
        }
      }
    },
    "/v1/admin/projects/{project_id}/connectors/import_items/import/status": {
      "get": {
        "tags": [
          "connector-admin"
        ],
        "operationId": "get-items-import-status",
        "summary": "Get status of items import",
        "description": "Retrieves information about the progress of importing items into the project. This API call retrieves data on the last import carried out through the API or Publisher Account.",
        "servers": [
          {
            "url": "https://connector.xsolla.com"
          }
        ],
        "x-admin": true,
        "x-server": true,
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-items-import-status-model"
          },
          "401": {
            "$ref": "#/components/responses/401-invalid-basic-auth"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id-path-param"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "description": "Xsolla API uses basic access authentication. All requests to API must\ncontain the `Authorization: Basic <your_authorization_basic_key>`\nheader, where `your_authorization_basic_key` is the `project_id:api_key`\npair encoded according to the Base64 standard.\n\nYou can use `merchant_id` instead of `project_id` if you need. It doesn't affect functionality.\n\nGo to [Publisher Account](https://publisher.xsolla.com/) to find values of the parameters:\n\n* `merchant_id` is shown:\n  * In the **Company settings > Company** section\n  * In the URL in the browser address bar on any Publisher Account page. The URL has the following format: `https://publisher.xsolla.com/<merchant_id>`.\n* `api_key` is shown in Publisher Account only once when it is created and must be stored on your side. You can create a new key in the following section:\n  * **Company settings > API keys**\n  * **Project settings > API keys**\n* `project_id` is shown:\n  * In Publisher Account next to the name of the project.\n  * In the URL in the browser address bar when working on project in Publisher Account. The URL has the following format: `https://publisher.xsolla.com/<merchant_id>/projects/<project_id>`.\n\nFor more information about working with API keys, see the [API reference](https://developers.xsolla.com/api/getting-started/#api_keys_overview).\n",
        "scheme": "basic"
      },
      "XsollaLoginUserJWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "By default, the Xsolla Login User JWT (Bearer token) is used for authorization. You can try calling this endpoint with a test Xsolla Login User JWT token: `Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE5NjIyMzQwNDgsImlzcyI6Imh0dHBzOi8vbG9naW4ueHNvbGxhLmNvbSIsImlhdCI6MTU2MjE0NzY0OCwidXNlcm5hbWUiOiJ4c29sbGEiLCJ4c29sbGFfbG9naW5fYWNjZXNzX2tleSI6IjA2SWF2ZHpDeEVHbm5aMTlpLUc5TmMxVWFfTWFZOXhTR3ZEVEY4OFE3RnMiLCJzdWIiOiJkMzQyZGFkMi05ZDU5LTExZTktYTM4NC00MjAxMGFhODAwM2YiLCJlbWFpbCI6InN1cHBvcnRAeHNvbGxhLmNvbSIsInR5cGUiOiJ4c29sbGFfbG9naW4iLCJ4c29sbGFfbG9naW5fcHJvamVjdF9pZCI6ImU2ZGZhYWM2LTc4YTgtMTFlOS05MjQ0LTQyMDEwYWE4MDAwNCIsInB1Ymxpc2hlcl9pZCI6MTU5MjR9.GCrW42OguZbLZTaoixCZgAeNLGH2xCeJHxl8u8Xn2aI`.\n\nYou can use the [Pay Station access token](https://developers.xsolla.com/api/pay-station/operation/create-token/) as an alternative."
      },
      "AuthForCart": {
        "type": "http",
        "scheme": "bearer",
        "description": "When selling a cart with games, you can [call the endpoint without authorization](/doc/buy-button/how-to/set-up-authentication/#guides_buy_button_selling_items_not_authenticated_users).\n\nTo do this:\n\n* Add a unique identifier to the `x-unauthorized-id` parameter in the header for games.\n* Add user’s email to the `x-user` parameter (Base64 encoded) in the header for games.\n\nBy default, the Xsolla Login User JWT (Bearer token) is used for authorization. You can try calling this endpoint with a test Xsolla Login User JWT token: `Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE5NjIyMzQwNDgsImlzcyI6Imh0dHBzOi8vbG9naW4ueHNvbGxhLmNvbSIsImlhdCI6MTU2MjE0NzY0OCwidXNlcm5hbWUiOiJ4c29sbGEiLCJ4c29sbGFfbG9naW5fYWNjZXNzX2tleSI6IjA2SWF2ZHpDeEVHbm5aMTlpLUc5TmMxVWFfTWFZOXhTR3ZEVEY4OFE3RnMiLCJzdWIiOiJkMzQyZGFkMi05ZDU5LTExZTktYTM4NC00MjAxMGFhODAwM2YiLCJlbWFpbCI6InN1cHBvcnRAeHNvbGxhLmNvbSIsInR5cGUiOiJ4c29sbGFfbG9naW4iLCJ4c29sbGFfbG9naW5fcHJvamVjdF9pZCI6ImU2ZGZhYWM2LTc4YTgtMTFlOS05MjQ0LTQyMDEwYWE4MDAwNCIsInB1Ymxpc2hlcl9pZCI6MTU5MjR9.GCrW42OguZbLZTaoixCZgAeNLGH2xCeJHxl8u8Xn2aI`.\n\nYou can use the [Pay Station access token](https://developers.xsolla.com/api/pay-station/operation/create-token/) as an alternative.\n"
      },
      "basicMerchantAuth": {
        "type": "http",
        "description": "Xsolla API uses basic access authentication. All requests to API must\ncontain the `Authorization: Basic <your_authorization_basic_key>`\nheader, where `your_authorization_basic_key` is the `merchant_id:api_key`\npair encoded according to the Base64 standard.\n\nGo to [Publisher Account](https://publisher.xsolla.com/) to find values of the parameters:\n\n* `merchant_id` is shown:\n  * In the **Company settings > Company** section\n  * In the URL in the browser address bar on any Publisher Account page. The URL has the following format: `https://publisher.xsolla.com/<merchant_id>`\n* `api_key` is shown in Publisher Account only once when it is created and must be stored on your side. You can create a new key in the following section:\n  * **Company settings > API keys**\n  * **Project settings > API keys**\n\nFor more information about working with API keys, see the [API reference](https://developers.xsolla.com/api/getting-started/#api_keys_overview).\n",
        "scheme": "basic"
      }
    },
    "parameters": {
      "project_id-path-param": {
        "name": "project_id",
        "in": "path",
        "required": true,
        "description": "Project ID. You can find this parameter in your [Publisher Account](https://publisher.xsolla.com/) next to the name of the project.",
        "schema": {
          "type": "integer",
          "example": 44056
        }
      },
      "limit-query-param": {
        "name": "limit",
        "in": "query",
        "example": 50,
        "required": false,
        "description": "Limit for the number of elements on the page.",
        "schema": {
          "type": "integer",
          "example": 50,
          "minimum": 1
        }
      },
      "offset-query-param": {
        "name": "offset",
        "in": "query",
        "required": false,
        "example": 0,
        "description": "Number of the element from which the list is generated (the count starts from 0).",
        "schema": {
          "type": "integer",
          "example": 0,
          "minimum": 0
        }
      },
      "external_id-attr-path-param": {
        "name": "external_id",
        "in": "path",
        "required": true,
        "description": "Attribute external ID.",
        "schema": {
          "type": "string",
          "example": "attribute_id"
        }
      },
      "value_external_id-path-param": {
        "name": "value_external_id",
        "in": "path",
        "required": true,
        "description": "Attribute value external ID.",
        "schema": {
          "type": "string",
          "pattern": "^[-_\\.\\d\\w]+$",
          "example": "value_id"
        }
      },
      "is_enabled-query-param": {
        "name": "is_enabled",
        "in": "query",
        "required": false,
        "description": "Filter elements by `is_enabled` flag.",
        "schema": {
          "type": "integer"
        }
      },
      "personalized-catalog-rule_id-path-param": {
        "name": "rule_id",
        "in": "path",
        "required": true,
        "description": "Rule ID.",
        "schema": {
          "type": "number",
          "example": 1
        }
      },
      "promo_code-query-param": {
        "name": "promo_code",
        "in": "query",
        "required": false,
        "description": "Unique case sensitive code. Contains letters and numbers.",
        "schema": {
          "type": "string",
          "example": "WINTER2021",
          "minLength": 1,
          "maxLength": 128
        }
      },
      "group_id-path-param": {
        "name": "group_id",
        "in": "path",
        "required": true,
        "description": "Group ID.",
        "schema": {
          "type": "integer",
          "example": 10
        }
      },
      "external_id-group-path-param": {
        "name": "external_id",
        "in": "path",
        "required": true,
        "description": "Group external ID.",
        "schema": {
          "type": "string",
          "default": "all"
        }
      },
      "sku-path-param": {
        "name": "sku",
        "in": "path",
        "required": true,
        "description": "Bundle SKU.",
        "schema": {
          "type": "string",
          "example": "kg_1"
        }
      },
      "locale-query-param": {
        "name": "locale",
        "in": "query",
        "required": false,
        "description": "Response language. Two-letter lowercase language code per ISO 639-1.",
        "schema": {
          "type": "string",
          "default": "en"
        }
      },
      "additional_fields-query-param": {
        "name": "additional_fields[]",
        "in": "query",
        "required": false,
        "description": "The list of additional fields. These fields will be in the response if you send them in your request.",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "media_list",
              "order",
              "long_description",
              "custom_attributes"
            ]
          }
        }
      },
      "country-query-param": {
        "name": "country",
        "in": "query",
        "required": false,
        "description": "Two-letter uppercase country code per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Check the documentation for detailed information about [countries supported by Xsolla](https://developers.xsolla.com/doc/shop-builder/references/supported-countries/) and [the process of determining the country](https://developers.xsolla.com/doc/shop-builder/features/pricing-policy/#pricing_policy_country_determination).",
        "schema": {
          "type": "string",
          "example": "US"
        }
      },
      "show_inactive_time_limited_items-query-param": {
        "name": "show_inactive_time_limited_items",
        "in": "query",
        "required": false,
        "description": "Shows time-limited items that are not available to the user. The validity period of such items has not started or has already expired.",
        "schema": {
          "type": "integer",
          "example": 1,
          "default": 0
        }
      },
      "cart_id-path-param": {
        "name": "cart_id",
        "in": "path",
        "required": true,
        "description": "Cart ID.",
        "schema": {
          "type": "string",
          "example": "custom_id"
        }
      },
      "currency-query-param": {
        "name": "currency",
        "in": "query",
        "required": false,
        "description": "The item price currency displayed in the cart. Three-letter currency code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/).",
        "schema": {
          "type": "string",
          "default": "USD"
        }
      },
      "item_sku-path-param": {
        "name": "item_sku",
        "in": "path",
        "required": true,
        "description": "Item SKU.",
        "schema": {
          "type": "string",
          "example": "booster_mega_1"
        }
      },
      "order_id-path-param": {
        "name": "order_id",
        "in": "path",
        "required": true,
        "description": "Order ID.",
        "schema": {
          "type": "string",
          "example": "656"
        }
      },
      "x-user-for-header": {
        "in": "header",
        "name": "x-user-for",
        "example": "ACCESS_TOKEN/LOGIN_JWT",
        "schema": {
          "type": "string"
        },
        "required": false,
        "description": "User identifier can be transferred by using the Xsolla Login User JWT or the [Pay Station access token](https://developers.xsolla.com/pay-station-api/current/token/create-token)."
      },
      "x-user-id-header": {
        "in": "header",
        "name": "x-user-id",
        "example": "UNIQUE_ID",
        "schema": {
          "maxLength": 32,
          "type": "string"
        },
        "required": false,
        "description": "You can use your own user ID when selling a cart with games.\n"
      },
      "merchant_id-path-param": {
        "name": "merchant_id",
        "in": "path",
        "required": true,
        "description": "Merchant ID.",
        "schema": {
          "type": "integer",
          "example": 121212
        }
      },
      "item_id-path-param": {
        "name": "item_id",
        "in": "path",
        "required": true,
        "description": "Item ID.",
        "schema": {
          "type": "string",
          "example": "656"
        }
      },
      "user_email-query-param": {
        "name": "user_email",
        "in": "query",
        "required": true,
        "description": "User email.",
        "schema": {
          "type": "string",
          "example": "email@email.com"
        }
      },
      "quantity-query-param": {
        "name": "quantity",
        "in": "query",
        "required": true,
        "description": "Codes quantity.",
        "schema": {
          "type": "integer",
          "example": 100
        }
      },
      "reason-query-param": {
        "name": "reason",
        "in": "query",
        "required": true,
        "description": "Reason receiving codes.",
        "schema": {
          "type": "string",
          "example": "Very important"
        }
      },
      "region_id-query-param": {
        "name": "region_id",
        "in": "query",
        "required": false,
        "description": "Region ID.",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "sandbox-query-param": {
        "name": "sandbox",
        "in": "query",
        "required": false,
        "description": "What type of entitlements should be returned. If the parameter is set to 1, the entitlements received by the user in the sandbox mode only are returned. If the parameter isn't passed or is set to 0, the entitlements received by the user in the live mode only are returned.",
        "schema": {
          "type": "integer",
          "default": 0
        }
      },
      "additional_fields-entitlement-query-param": {
        "name": "additional_fields[]",
        "in": "query",
        "required": false,
        "description": "The list of additional fields. These fields will be in the response if you send them in your request. Available fields `attributes`.",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "enabled-query-param": {
        "name": "enabled",
        "in": "query",
        "required": false,
        "description": "Filter elements by `is_enabled` flag.",
        "schema": {
          "type": "integer"
        }
      },
      "promotion_id-path-param": {
        "name": "promotion_id",
        "in": "path",
        "required": true,
        "description": "Promotion ID. Unique promotion identifier within the project.",
        "schema": {
          "type": "integer",
          "example": 111425
        }
      },
      "code-path-param": {
        "name": "code",
        "in": "path",
        "required": true,
        "description": "Unique case-sensitive code. Contains letters and numbers.",
        "schema": {
          "type": "string",
          "example": "WINTER2021",
          "minLength": 1,
          "maxLength": 128
        }
      },
      "coupon_code-path-param": {
        "name": "coupon_code",
        "in": "path",
        "required": true,
        "description": "Unique case sensitive code. Contains letters and numbers.",
        "schema": {
          "type": "string",
          "example": "WINTER2021",
          "minLength": 1,
          "maxLength": 128
        }
      },
      "external_id-promotion-path-param": {
        "name": "external_id",
        "in": "path",
        "required": true,
        "description": "Promotion external ID. Unique promotion identifier within the project.",
        "schema": {
          "type": "integer",
          "example": "coupon_44056_1"
        }
      },
      "promocode_code-path-param": {
        "name": "promocode_code",
        "in": "path",
        "required": true,
        "description": "Unique case sensitive code. Contains letters and numbers.",
        "schema": {
          "type": "string",
          "example": "SO6rew99j9",
          "minLength": 1,
          "maxLength": 128
        }
      },
      "virtual_currency_sku-path-param": {
        "name": "virtual_currency_sku",
        "in": "path",
        "required": true,
        "description": "Virtual currency SKU.",
        "schema": {
          "type": "string",
          "example": "crystal"
        }
      },
      "virtual_currency_package_sku-path-param": {
        "name": "virtual_currency_package_sku",
        "in": "path",
        "required": true,
        "description": "Virtual currency package SKU.",
        "schema": {
          "type": "string",
          "example": "crystal-pack"
        }
      },
      "platform-query-param": {
        "name": "platform",
        "in": "query",
        "required": false,
        "description": "Publishing platform the user plays on: `xsolla` (default), `playstation_network`, `xbox_live`, `pc_standalone`, `nintendo_shop`, `google_play`, `app_store_ios`, `android_standalone`, `ios_standalone`, `android_other`, `ios_other`, `pc_other`.",
        "schema": {
          "type": "string",
          "enum": [
            "playstation_network",
            "xbox_live",
            "xsolla",
            "pc_standalone",
            "nintendo_shop",
            "google_play",
            "app_store_ios",
            "android_standalone",
            "ios_standalone",
            "android_other",
            "ios_other",
            "pc_other"
          ],
          "default": "xsolla"
        }
      },
      "project_id_59080-path-param": {
        "name": "project_id",
        "in": "path",
        "required": true,
        "description": "Project ID. You can find this parameter in your [Publisher Account](https://publisher.xsolla.com/) next to the name of the project.",
        "schema": {
          "type": "integer",
          "example": 59080
        }
      },
      "item_id_59080-path-param": {
        "name": "item_id",
        "in": "path",
        "required": true,
        "description": "Item ID.",
        "schema": {
          "type": "string",
          "example": "259774"
        }
      },
      "item_sku_59080-path-param": {
        "name": "sku",
        "in": "path",
        "required": true,
        "description": "Item SKU.",
        "schema": {
          "type": "string",
          "example": "electric_shield"
        }
      },
      "external_id_59080-group-path-param": {
        "name": "external_id",
        "in": "path",
        "required": true,
        "description": "Group external ID.",
        "schema": {
          "type": "string",
          "default": "armour"
        }
      },
      "region_id-path-param": {
        "name": "region_id",
        "in": "path",
        "required": true,
        "description": "Region ID. Unique region identifier within the project.",
        "schema": {
          "type": "integer",
          "example": 42
        }
      },
      "user_external_id-query-param": {
        "name": "user_external_id",
        "in": "query",
        "required": true,
        "description": "User external ID",
        "schema": {
          "type": "string",
          "example": "d342dad2-9d59-11e9-a384-42010aa8003f"
        }
      },
      "codes-query-param": {
        "name": "codes[]",
        "in": "query",
        "description": "Unique case-sensitive codes. Contain only letters and numbers.",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          }
        }
      },
      "value_point_sku-path-param": {
        "name": "value_point_sku",
        "in": "path",
        "required": true,
        "description": "Value Point SKU.",
        "schema": {
          "type": "string",
          "example": "value_point_3"
        }
      },
      "reward_chain_id-path-param": {
        "name": "reward_chain_id",
        "in": "path",
        "required": true,
        "description": "Reward chain ID.",
        "schema": {
          "type": "integer",
          "example": 101
        }
      },
      "reward_chain_step_id-path-param": {
        "name": "step_id",
        "in": "path",
        "required": true,
        "description": "Reward chain step ID.",
        "schema": {
          "type": "integer",
          "example": 120
        }
      },
      "offer_chain_id-path-param": {
        "name": "offer_chain_id",
        "in": "path",
        "required": true,
        "description": "Offer chain ID.",
        "schema": {
          "type": "integer",
          "example": 101
        }
      },
      "offer_chain_step_number-path-param": {
        "name": "step_number",
        "in": "path",
        "required": true,
        "description": "Offer chain step number.",
        "schema": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "schemas": {
      "admin-attribute-external_id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[a-zA-Z0-9-_]+$",
        "example": "attribute_1",
        "description": "Unique attribute ID. The `external_id` may contain only lowercase and uppercase Latin alphanumeric characters, dashes, and underscores."
      },
      "admin-attribute-name": {
        "type": "object",
        "description": "Object with localizations for attribute's name. Keys are specified in ISO 3166-1.",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en": "Genre",
          "de": "Genre"
        },
        "default": {
          "en": "Genre",
          "de": "Genre"
        }
      },
      "admin_attribute_response": {
        "type": "object",
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/admin-attribute-external_id"
          },
          "name": {
            "$ref": "#/components/schemas/admin-attribute-name"
          }
        },
        "example": {
          "value": [
            {
              "external_id": "genre",
              "name": {
                "en": "Genre",
                "de": "Genre"
              }
            }
          ]
        }
      },
      "schemas-422-invalid-request": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-1102]: Unprocessable Entity. The property `property_name` is required"
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          }
        }
      },
      "value-external_id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[-_.\\d\\w]+$",
        "example": "attribute_value",
        "description": "Unique value ID for an attribute. The `external_id` may only contain lowercase Latin alphanumeric characters, dashes, and underscores."
      },
      "value-name": {
        "type": "object",
        "description": "Object with localizations of the value's name. Keys are specified in ISO 3166-1.",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en": "Strategy",
          "de": "Strategie"
        },
        "default": {
          "en": "Strategy",
          "de": "Strategie"
        }
      },
      "request-attribute-value": {
        "type": "object",
        "required": [
          "external_id",
          "value"
        ],
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/value-external_id"
          },
          "value": {
            "$ref": "#/components/schemas/value-name"
          }
        },
        "example": {
          "external_id": "value_id",
          "value": {
            "en": "Value",
            "de": "Wert"
          }
        }
      },
      "404-not-found": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "example": "[0000-0000]: Entity not found"
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          }
        }
      },
      "user-attribute_conditions_properties_attribute": {
        "type": "string",
        "description": "User attribute code.",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[-_.\\d\\w]+$"
      },
      "user-attribute_conditions_properties_type-string": {
        "type": "string",
        "enum": [
          "string"
        ],
        "description": "User attribute type."
      },
      "user-attribute_conditions_properties_operator_string": {
        "type": "string",
        "enum": [
          "eq",
          "ne"
        ],
        "description": "Type of operation performed by condition. For <code>string</code> attribute type.\n",
        "x-enumDescriptions": {
          "eq": "Equals",
          "ne": "Not equals"
        }
      },
      "user-attribute_conditions_properties_value": {
        "type": "string",
        "description": "Condition value which user attribute value will be compared to. Type depends on attribute type.\n",
        "maxLength": 255
      },
      "user-attribute_conditions_properties_can_be_missing": {
        "type": "boolean",
        "description": "Indicates that the condition is met even if attribute is missing from user attributes. Pass `true` to show the item to users who don't have this attribute. Users who have the attribute, but the value does not match that specified in the condition, will not see the item. `false` — users who have the attribute, but the value does not match that specified in the condition, or the attribute is missing, will not see the item.\n"
      },
      "user-attribute_conditions-string": {
        "type": "array",
        "title": "type = string",
        "minItems": 1,
        "maxItems": 100,
        "items": {
          "type": "object",
          "properties": {
            "attribute": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_attribute"
            },
            "type": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_type-string"
            },
            "operator": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_operator_string"
            },
            "value": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_value"
            },
            "can_be_missing": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_can_be_missing"
            }
          },
          "required": [
            "attribute",
            "operator",
            "value",
            "type"
          ]
        }
      },
      "user-attribute_conditions_properties_type-date": {
        "type": "string",
        "enum": [
          "date"
        ],
        "description": "User attribute type."
      },
      "user-attribute_conditions_properties_operator": {
        "type": "string",
        "enum": [
          "eq",
          "ne",
          "er",
          "lt",
          "ee",
          "le"
        ],
        "description": "Type of operation performed by condition. For <code>date</code> attribute type.\n",
        "x-enumDescriptions": {
          "eq": "Equals",
          "ne": "Not equals",
          "er": "Earlier",
          "lt": "Later",
          "ee": "Earlier or equals",
          "le": "Later or equals"
        }
      },
      "user-attribute_conditions-date": {
        "type": "array",
        "title": "type = date",
        "minItems": 1,
        "maxItems": 100,
        "items": {
          "type": "object",
          "properties": {
            "attribute": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_attribute"
            },
            "type": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_type-date"
            },
            "operator": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_operator"
            },
            "value": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_value"
            },
            "can_be_missing": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_can_be_missing"
            }
          },
          "required": [
            "attribute",
            "operator",
            "value",
            "type"
          ]
        }
      },
      "user-attribute_conditions_properties_type-number": {
        "type": "string",
        "enum": [
          "number"
        ],
        "description": "User attribute type."
      },
      "user-attribute_conditions-number": {
        "type": "array",
        "title": "type = number",
        "minItems": 1,
        "maxItems": 100,
        "items": {
          "type": "object",
          "properties": {
            "attribute": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_attribute"
            },
            "type": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_type-number"
            },
            "operator": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_operator"
            },
            "value": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_value"
            },
            "can_be_missing": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_can_be_missing"
            }
          },
          "required": [
            "attribute",
            "operator",
            "value",
            "type"
          ]
        }
      },
      "user-attribute_personalized-catalog": {
        "type": "object",
        "properties": {
          "rule_id": {
            "type": "number",
            "description": "Rule ID."
          },
          "name": {
            "type": "string",
            "description": "Readable name of a rule. Used to display a rule in Publisher Account."
          },
          "is_enabled": {
            "type": "boolean",
            "description": "If rule is enabled."
          },
          "is_satisfied_for_unauth": {
            "type": "boolean",
            "description": "Whether the item is displayed to unauthorized users. If `true`, the item is displayed to the unauthorized user regardless of catalog display rules. `false` by default."
          },
          "attribute_conditions": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-number"
              }
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Items which will be shown for user if his attribute values meet conditions.",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID."
                },
                "sku": {
                  "type": "string",
                  "description": "Item SKU."
                },
                "name": {
                  "type": "string",
                  "description": "Item name."
                },
                "type": {
                  "type": "string",
                  "description": "Item type.",
                  "enum": [
                    "virtual_good",
                    "virtual_currency",
                    "bundle",
                    "physical_good",
                    "unit"
                  ]
                },
                "bundle_type": {
                  "type": "string",
                  "description": "Bundle type. Returned if item type is a bundle.",
                  "enum": [
                    "standard",
                    "virtual_currency_package"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "rule_id",
          "name",
          "is_enabled",
          "attribute_conditions",
          "items"
        ]
      },
      "user-attribute_personalized-catalog-body-required": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Readable name of a rule. Used to display a rule in Publisher Account.",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^\\S"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "If rule is enabled."
          },
          "is_satisfied_for_unauth": {
            "type": "boolean",
            "description": "Whether the item is displayed to unauthorized users. If `true`, the item is displayed to the unauthorized user regardless of catalog display rules. `false` by default."
          },
          "attribute_conditions": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-number"
              }
            ]
          },
          "items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Items which are shown to a user if their attribute values meet conditions.",
                  "properties": {
                    "item_id": {
                      "type": "number",
                      "description": "Item ID."
                    }
                  },
                  "required": [
                    "item_id"
                  ]
                },
                {
                  "type": "object",
                  "description": "Items which are shown to a user if their attribute values meet conditions.",
                  "properties": {
                    "sku": {
                      "type": "string",
                      "description": "Item SKU."
                    }
                  },
                  "required": [
                    "sku"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "name",
          "is_enabled",
          "attribute_conditions",
          "items"
        ]
      },
      "422-invalid-request": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "Response status code.",
            "example": 422
          },
          "errorCode": {
            "type": "number",
            "description": "Error code.",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "description": "Readable error message.",
            "example": "[0401-1102]: Unprocessable Entity. The property `external_id` is required"
          },
          "transactionId": {
            "type": "string",
            "description": "Unique ID of request.",
            "example": "da145238620011eb8e24fe6913ff226a"
          }
        }
      },
      "user-attribute_personalized-catalog_all": {
        "type": "object",
        "properties": {
          "rule_id": {
            "type": "number",
            "description": "Rule ID."
          },
          "name": {
            "type": "string",
            "description": "Readable name of a rule. Used to display a rule in Publisher Account."
          },
          "is_enabled": {
            "type": "boolean",
            "description": "If rule is enabled."
          },
          "is_satisfied_for_unauth": {
            "type": "boolean",
            "description": "Whether the item is displayed to unauthorized users. If `true`, the item is displayed to the unauthorized user regardless of catalog display rules. `false` by default."
          }
        },
        "required": [
          "rule_id",
          "name",
          "is_enabled"
        ]
      },
      "user-attribute_personalized-catalog-body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Readable name of a rule. Used to display a rule in Publisher Account.",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^\\S"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "If rule is enabled."
          },
          "is_satisfied_for_unauth": {
            "type": "boolean",
            "description": "Whether the item is displayed to unauthorized users. If `true`, the item is displayed to the unauthorized user regardless of catalog display rules. `false` by default."
          },
          "attribute_conditions": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-number"
              }
            ]
          },
          "items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Items which are shown to a user if their attribute values meet conditions.",
                  "properties": {
                    "item_id": {
                      "type": "number",
                      "description": "Item ID."
                    }
                  },
                  "required": [
                    "item_id"
                  ]
                },
                {
                  "type": "object",
                  "description": "Items which are shown to a user if their attribute values meet conditions.",
                  "properties": {
                    "sku": {
                      "type": "string",
                      "description": "Item SKU."
                    }
                  },
                  "required": [
                    "sku"
                  ]
                }
              ]
            }
          }
        }
      },
      "Bundles_item_id": {
        "type": "integer",
        "example": 1,
        "minLength": 1,
        "maxLength": 255,
        "description": "Internal unique item ID."
      },
      "Bundles_sku": {
        "type": "string",
        "example": "bundle_1",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[a-zA-Z0-9_\\-–.]*$",
        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
      },
      "two-letter-locale": {
        "type": "object",
        "nullable": true,
        "description": "Two-letter lowercase language codes.",
        "title": "two-letter",
        "properties": {
          "en": {
            "type": "string",
            "description": "English",
            "nullable": true
          },
          "ar": {
            "type": "string",
            "description": "Arabic",
            "nullable": true
          },
          "bg": {
            "type": "string",
            "description": "Bulgarian",
            "nullable": true
          },
          "cn": {
            "type": "string",
            "description": "Chinese (Simplified)",
            "nullable": true
          },
          "cs": {
            "type": "string",
            "description": "Czech",
            "nullable": true
          },
          "de": {
            "type": "string",
            "description": "German",
            "nullable": true
          },
          "es": {
            "type": "string",
            "description": "Spanish (Spain)",
            "nullable": true
          },
          "fr": {
            "type": "string",
            "description": "French",
            "nullable": true
          },
          "he": {
            "type": "string",
            "description": "Hebrew",
            "nullable": true
          },
          "it": {
            "type": "string",
            "description": "Italian",
            "nullable": true
          },
          "ja": {
            "type": "string",
            "description": "Japanese",
            "nullable": true
          },
          "ko": {
            "type": "string",
            "description": "Korean",
            "nullable": true
          },
          "pl": {
            "type": "string",
            "description": "Polish",
            "nullable": true
          },
          "pt": {
            "type": "string",
            "description": "Portuguese",
            "nullable": true
          },
          "ro": {
            "type": "string",
            "description": "Romanian",
            "nullable": true
          },
          "ru": {
            "type": "string",
            "description": "Russian",
            "nullable": true
          },
          "th": {
            "type": "string",
            "description": "Thai",
            "nullable": true
          },
          "tr": {
            "type": "string",
            "description": "Turkish",
            "nullable": true
          },
          "tw": {
            "type": "string",
            "description": "Chinese (Traditional)",
            "nullable": true
          },
          "vi": {
            "type": "string",
            "description": "Vietnamese",
            "nullable": true
          },
          "km": {
            "type": "string",
            "description": "Khmer",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Indonesian",
            "nullable": true
          },
          "lo": {
            "type": "string",
            "description": "Lao",
            "nullable": true
          },
          "my": {
            "type": "string",
            "description": "Burmese",
            "nullable": true
          },
          "ph": {
            "type": "string",
            "description": "Filipino",
            "nullable": true
          },
          "ne": {
            "type": "string",
            "description": "Nepali",
            "nullable": true
          }
        }
      },
      "five-letter-locale": {
        "type": "object",
        "nullable": true,
        "description": "Five-character locale codes.",
        "title": "five-letter",
        "properties": {
          "en-US": {
            "type": "string",
            "description": "English",
            "nullable": true
          },
          "ar-AE": {
            "type": "string",
            "description": "Arabic",
            "nullable": true
          },
          "bg-BG": {
            "type": "string",
            "description": "Bulgarian",
            "nullable": true
          },
          "zh-CN": {
            "type": "string",
            "description": "Chinese (Simplified)",
            "nullable": true
          },
          "cs-CZ": {
            "type": "string",
            "description": "Czech",
            "nullable": true
          },
          "de-DE": {
            "type": "string",
            "description": "German",
            "nullable": true
          },
          "es-ES": {
            "type": "string",
            "description": "Spanish (Spain)",
            "nullable": true
          },
          "fr-FR": {
            "type": "string",
            "description": "French",
            "nullable": true
          },
          "he-IL": {
            "type": "string",
            "description": "Hebrew",
            "nullable": true
          },
          "it-IT": {
            "type": "string",
            "description": "Italian",
            "nullable": true
          },
          "ja-JP": {
            "type": "string",
            "description": "Japanese",
            "nullable": true
          },
          "ko-KR": {
            "type": "string",
            "description": "Korean",
            "nullable": true
          },
          "pl-PL": {
            "type": "string",
            "description": "Polish",
            "nullable": true
          },
          "pt-BR": {
            "type": "string",
            "description": "Portuguese (Brazil)",
            "nullable": true
          },
          "ro-RO": {
            "type": "string",
            "description": "Romanian",
            "nullable": true
          },
          "ru-RU": {
            "type": "string",
            "description": "Russian",
            "nullable": true
          },
          "th-TH": {
            "type": "string",
            "description": "Thai",
            "nullable": true
          },
          "tr-TR": {
            "type": "string",
            "description": "Turkish",
            "nullable": true
          },
          "zh-TW": {
            "type": "string",
            "description": "Chinese (Traditional)",
            "nullable": true
          },
          "vi-VN": {
            "type": "string",
            "description": "Vietnamese",
            "nullable": true
          },
          "km-KH": {
            "type": "string",
            "description": "Khmer",
            "nullable": true
          },
          "id-ID": {
            "type": "string",
            "description": "Indonesian",
            "nullable": true
          },
          "lo-LA": {
            "type": "string",
            "description": "Lao",
            "nullable": true
          },
          "my-MM": {
            "type": "string",
            "description": "Burmese",
            "nullable": true
          },
          "ph-PH": {
            "type": "string",
            "description": "Filipino",
            "nullable": true
          },
          "ne-NP": {
            "type": "string",
            "description": "Nepali",
            "nullable": true
          }
        }
      },
      "name-localization-object": {
        "type": "object",
        "nullable": true,
        "description": "Object with localizations for item’s name. Accepts value in one of two formats: two-letter lowercase language codes (e.g., `en`) or five-character language codes (e.g., `en-US`). While both formats are accepted as input, responses return two-letter lowercase language codes. When both options for the same language are provided (e.g., `en` and `en-US`), the last provided value is stored. You can find the full list of supported languages in the [documentation](/doc/shop-builder/references/supported-languages/).",
        "oneOf": [
          {
            "$ref": "#/components/schemas/two-letter-locale"
          },
          {
            "$ref": "#/components/schemas/five-letter-locale"
          }
        ]
      },
      "attribute-value": {
        "type": "object",
        "required": [
          "value",
          "external_id"
        ],
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/value-external_id"
          },
          "value": {
            "$ref": "#/components/schemas/value-name"
          }
        },
        "example": {
          "external_id": "value_external_id",
          "name": {
            "en": "Value 1",
            "de": "Wert 1"
          }
        }
      },
      "attribute": {
        "type": "object",
        "required": [
          "external_id",
          "values"
        ],
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/admin-attribute-external_id"
          },
          "name": {
            "$ref": "#/components/schemas/admin-attribute-name"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/attribute-value"
            },
            "example": [
              {
                "external_id": "strategy",
                "value": {
                  "en": "Strategy",
                  "de": "Strategie"
                }
              },
              {
                "external_id": "action",
                "value": {
                  "en": "Action",
                  "de": "Aktion"
                }
              }
            ]
          }
        },
        "example": {
          "external_id": "attribute_external_id",
          "name": {
            "en": "Attribute name",
            "de": "Attributname"
          },
          "values": [
            {
              "external_id": "value_1",
              "name": {
                "en": "value 1",
                "de": "wert 1"
              }
            },
            {
              "external_id": "value_2",
              "name": {
                "en": "value 2",
                "de": "wert 2"
              }
            }
          ]
        }
      },
      "Bundles_admin-attributes": {
        "type": "array",
        "description": "List of attributes.",
        "items": {
          "$ref": "#/components/schemas/attribute"
        }
      },
      "Bundles_type": {
        "type": "string",
        "example": "bundle",
        "description": "Type of item."
      },
      "bundle_type": {
        "type": "string",
        "description": "Bundle type. Returned if item type is a bundle.",
        "enum": [
          "standard",
          "virtual_currency_package",
          "partner_side_content"
        ]
      },
      "description-localization-object": {
        "type": "object",
        "nullable": true,
        "description": "Object with localizations for item’s description. Accepts value in one of two formats: two-letter lowercase language codes (e.g., `en`) or five-character locale codes (e.g., `en-US`).  While both formats are accepted as input, responses return two-letter lowercase language codes. When both options for the same language are provided (e.g., `en` and `en-US`), the last provided value is stored. You can find the full list of supported languages in the [documentation](/doc/shop-builder/references/supported-languages/).",
        "oneOf": [
          {
            "$ref": "#/components/schemas/two-letter-locale"
          },
          {
            "$ref": "#/components/schemas/five-letter-locale"
          }
        ]
      },
      "long-description-localization-object": {
        "type": "object",
        "nullable": true,
        "description": "Object with localizations for long description of item. Accepts value in one of two formats: two-letter lowercase language codes (e.g., `en`) or five-character locale codes (e.g., `en-US`).  While both formats are accepted as input, responses return two-letter lowercase language codes. When both variants for the same language are provided (e.g., `en` and `en-US`), the last provided value is stored. You can find the full list of supported languages in the [documentation](/doc/shop-builder/references/supported-languages/).",
        "anyOf": [
          {
            "$ref": "#/components/schemas/two-letter-locale"
          },
          {
            "$ref": "#/components/schemas/five-letter-locale"
          }
        ]
      },
      "Bundles_image_url": {
        "type": "string",
        "nullable": true,
        "example": "https://image.example.com",
        "description": "Image URL."
      },
      "value-is_free": {
        "type": "boolean",
        "example": false,
        "default": false,
        "description": "If `true`, the item is free."
      },
      "Bundles_groups_response": {
        "type": "array",
        "example": [
          {
            "external_id": "horror",
            "name": {
              "en": "Horror"
            }
          }
        ],
        "default": [],
        "description": "Groups the item belongs to.",
        "items": {
          "type": "object",
          "properties": {
            "external_id": {
              "type": "string",
              "example": "horror"
            },
            "name": {
              "type": "object",
              "description": "Name of item. Should contain key/value pairs\nwhere key is a locale with \"^[a-z]{2}\" format, value is string.\n",
              "example": {
                "en": "Horror",
                "de": "Horror"
              },
              "default": {
                "en": "Horror"
              },
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "Bundles_amount_without_discount": {
        "type": "string",
        "example": "100.99",
        "description": "Item price.",
        "pattern": "^\\d*\\.?\\d*$"
      },
      "Bundles_currency": {
        "type": "string",
        "example": "USD",
        "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
      },
      "Bundles_prices": {
        "type": "array",
        "description": "Prices in real currencies.",
        "items": {
          "type": "object",
          "properties": {
            "amount": {
              "$ref": "#/components/schemas/Bundles_amount_without_discount"
            },
            "currency": {
              "$ref": "#/components/schemas/Bundles_currency"
            },
            "is_default": {
              "type": "boolean",
              "description": "Default price is used to build a catalog if no price in the user's currency is specified."
            },
            "is_enabled": {
              "type": "boolean",
              "description": "The price is enabled."
            },
            "country_iso": {
              "type": "string",
              "nullable": true,
              "example": "US",
              "description": "Country where this price is available. Two-letter code per [ISO 3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)."
            }
          },
          "required": [
            "amount",
            "currency",
            "is_default",
            "is_enabled"
          ]
        }
      },
      "Bundles_vc-type": {
        "type": "string",
        "example": "virtual_currency",
        "description": "Virtual currency type."
      },
      "Bundles_amount": {
        "type": "string",
        "example": "100.99",
        "description": "Item price with a discount.",
        "pattern": "^\\d*\\.?\\d*$"
      },
      "Bundles_currency-is_default": {
        "type": "boolean",
        "example": true,
        "description": "Whether the price is default for an item."
      },
      "Bundles_admin-response-virtual_price": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Bundles_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "type": {
            "$ref": "#/components/schemas/Bundles_vc-type"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Bundles_image_url"
          },
          "amount": {
            "$ref": "#/components/schemas/Bundles_amount"
          },
          "is_default": {
            "$ref": "#/components/schemas/Bundles_currency-is_default"
          }
        }
      },
      "Bundles_media_list": {
        "type": "array",
        "example": [
          {
            "type": "image",
            "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
          }
        ],
        "description": "Bundle's additional assets.",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "image",
                "video"
              ],
              "example": "image",
              "description": "Type of media: `image`/`video`."
            },
            "url": {
              "type": "string",
              "example": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg",
              "description": "Resource file."
            }
          }
        }
      },
      "Bundles_order": {
        "type": "integer",
        "example": 1,
        "default": 1,
        "description": "Bundle's order priority in the list."
      },
      "Bundles_is_enabled": {
        "type": "boolean",
        "example": true,
        "default": true,
        "description": "If disabled, the item can't be found and purchased."
      },
      "Bundles_is_show_in_store": {
        "type": "boolean",
        "example": true,
        "default": false,
        "description": "Item is available for purchase."
      },
      "Bundles_admin-regions": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          }
        }
      },
      "Bundles_admin_content_response": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Bundles_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "type": {
            "$ref": "#/components/schemas/Bundles_type"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Bundles_image_url"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the item type in the bundle.",
            "default": 1,
            "minimum": 1
          }
        }
      },
      "recurrent_schedule_response": {
        "type": "object",
        "nullable": true,
        "description": "Limit refresh period.",
        "properties": {
          "per_user": {
            "type": "object",
            "description": "User limit refresh period.",
            "properties": {
              "interval_type": {
                "type": "string",
                "description": "Recurrent refresh period type.",
                "enum": [
                  "daily",
                  "weekly",
                  "monthly"
                ]
              },
              "day_of_week": {
                "type": "integer",
                "description": "Day of the week when the limits refresh. Where 1 is Monday and 7 is Sunday. Not `null` only for `weekly` limit refresh period type.",
                "minimum": 1,
                "maximum": 7,
                "nullable": true
              },
              "day_of_month": {
                "type": "integer",
                "description": "Day of the month when limits refresh. If there's no selected day of the month as it's shorter, then the refresh will occur on the last day of the month. Not `null` only for `monthly` limit refresh period type.",
                "minimum": 1,
                "maximum": 31,
                "nullable": true
              },
              "time": {
                "type": "string",
                "description": "Time of limit refresh in the desired time zone (rounding to hours).",
                "format": "full-time",
                "example": "11:00:00+03:00"
              },
              "reset_next_date": {
                "type": "integer",
                "description": "Date and time when limits refresh (Unix Timestamp).",
                "example": 1677553200
              },
              "displayable_reset_start_date": {
                "description": "Date and time of the first limit refresh (ISO 8601).",
                "type": "string",
                "format": "date-time",
                "example": "2023-02-28T11:00:00+08:00"
              },
              "displayable_reset_next_date": {
                "description": "Date and time when limits should reset (ISO 8601).",
                "type": "string",
                "format": "date-time",
                "example": "2023-02-28T11:00:00+08:00"
              }
            }
          }
        }
      },
      "item-limit-response": {
        "type": "object",
        "description": "Item limits.",
        "nullable": true,
        "properties": {
          "per_user": {
            "type": "object",
            "nullable": true,
            "description": "Item limitation for a separate user.",
            "properties": {
              "total": {
                "type": "integer"
              },
              "available": {
                "type": "integer"
              },
              "recurrent_schedule": {
                "type": "object",
                "nullable": true,
                "description": "Item limits recurrent refresh period for a user.",
                "properties": {
                  "interval_type": {
                    "type": "string",
                    "description": "Recurrent refresh period type.",
                    "enum": [
                      "weekly",
                      "monthly"
                    ]
                  },
                  "reset_next_date": {
                    "type": "integer",
                    "description": "Date and time when limits reset (Unix Timestamp).",
                    "example": 1677553200
                  }
                }
              }
            }
          },
          "per_item": {
            "type": "object",
            "nullable": true,
            "description": "Global item limitation.",
            "properties": {
              "total": {
                "type": "integer"
              },
              "available": {
                "type": "integer"
              },
              "reserved": {
                "type": "integer"
              },
              "sold": {
                "type": "integer"
              }
            }
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/recurrent_schedule_response"
          }
        }
      },
      "item-periods-response": {
        "type": "array",
        "description": "Item sales period.",
        "items": {
          "type": "object",
          "properties": {
            "date_from": {
              "type": "string",
              "format": "date-time",
              "example": "2020-08-11T10:00:00+03:00",
              "description": "Date when the specified item will be available for sale.",
              "nullable": true
            },
            "date_until": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "example": "2020-08-11T20:00:00+03:00",
              "description": "Date when the specified item will become unavailable for sale. Can be `null`."
            }
          }
        }
      },
      "item-custom-attributes-response": {
        "type": "object",
        "description": "A JSON object containing item attributes and values.",
        "format": "json"
      },
      "Bundles_total_content_price": {
        "type": "object",
        "nullable": true,
        "description": "Sum of the bundle content prices.",
        "properties": {
          "amount": {
            "type": "string",
            "example": "100.99",
            "description": "Sum of the bundle content prices with a discount."
          },
          "amount_without_discount": {
            "type": "string",
            "example": "100.99",
            "description": "Sum of the bundle content prices."
          },
          "currency": {
            "$ref": "#/components/schemas/Bundles_currency"
          }
        }
      },
      "Bundles_admin_bundle_response": {
        "type": "object",
        "properties": {
          "item_id": {
            "$ref": "#/components/schemas/Bundles_item_id"
          },
          "sku": {
            "$ref": "#/components/schemas/Bundles_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "attributes": {
            "$ref": "#/components/schemas/Bundles_admin-attributes"
          },
          "type": {
            "$ref": "#/components/schemas/Bundles_type"
          },
          "bundle_type": {
            "$ref": "#/components/schemas/bundle_type"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Bundles_image_url"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "groups": {
            "$ref": "#/components/schemas/Bundles_groups_response"
          },
          "prices": {
            "$ref": "#/components/schemas/Bundles_prices"
          },
          "virtual_prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bundles_admin-response-virtual_price"
            }
          },
          "media_list": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bundles_media_list"
              },
              {
                "nullable": true,
                "type": "array"
              }
            ]
          },
          "order": {
            "$ref": "#/components/schemas/Bundles_order"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Bundles_is_enabled"
          },
          "is_show_in_store": {
            "$ref": "#/components/schemas/Bundles_is_show_in_store"
          },
          "regions": {
            "$ref": "#/components/schemas/Bundles_admin-regions"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bundles_admin_content_response"
            }
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit-response"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods-response"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes-response"
          },
          "total_content_price": {
            "$ref": "#/components/schemas/Bundles_total_content_price"
          }
        },
        "description": "The specified bundle."
      },
      "Bundles_groups_request": {
        "type": "array",
        "example": [
          "honor"
        ],
        "default": [],
        "description": "Groups the item belongs to.\n<div class=\"note\"><strong>Note.</strong> The string value refers to group `external_id`.</div>",
        "items": {
          "type": "string"
        }
      },
      "admin-post-put-attribute-item": {
        "type": "object",
        "required": [
          "external_id",
          "values"
        ],
        "maxItems": 6,
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/admin-attribute-external_id"
          },
          "name": {
            "$ref": "#/components/schemas/admin-attribute-name"
          },
          "values": {
            "type": "array",
            "description": "<div class=\"notice\"><strong>Attention.</strong> You <strong>can't create more than 6 values</strong> for each attribute. Any attempts to exceed the limit result in an error.</div>\n",
            "items": {
              "$ref": "#/components/schemas/attribute-value"
            },
            "example": [
              {
                "external_id": "strategy",
                "value": {
                  "en": "Strategy",
                  "de": "Strategie"
                }
              },
              {
                "external_id": "action",
                "value": {
                  "en": "Action",
                  "de": "Aktion"
                }
              }
            ]
          }
        }
      },
      "Bundles_admin-post-put-attributes": {
        "type": "array",
        "maxItems": 20,
        "description": "List of attributes.\n<div class=\"notice\"><strong>Attention.</strong> You <strong>can't specify more than 20 attributes</strong> for the item. Any attempts to exceed the limit result in an error.</div>\n",
        "items": {
          "$ref": "#/components/schemas/admin-post-put-attribute-item"
        }
      },
      "Bundles_vc_prices": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sku": {
              "type": "string",
              "example": "gold",
              "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
            },
            "amount": {
              "type": "integer"
            },
            "is_default": {
              "type": "boolean"
            },
            "is_enabled": {
              "type": "boolean"
            }
          },
          "required": [
            "amount",
            "currency",
            "is_default",
            "is_enabled"
          ]
        }
      },
      "Bundles_bundle_type": {
        "type": "string",
        "example": "standard",
        "enum": [
          "standard",
          "partner_side_content"
        ],
        "description": "Bundle type. Use `standard` to create a bundle with items and specify the SKUs of the items included in the bundle.\nUse `partner_side_content` to create an empty bundle and add items on your side using a [webhook](https://developers.xsolla.com/webhooks/operation/personalized-partner-catalog/). This type is used only for [Catalog personalization on partner side](https://developers.xsolla.com/doc/shop-builder/features/personalization/#guides_personalization_on_partner_side).\n",
        "default": "standard"
      },
      "Bundles_admin_content_request": {
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "properties": {
            "sku": {
              "$ref": "#/components/schemas/Bundles_sku"
            },
            "quantity": {
              "type": "integer",
              "description": "Quantity of the selected items in the bundle.",
              "default": 1,
              "minimum": 1
            }
          },
          "required": [
            "sku"
          ],
          "example": {
            "sku": "com.xsolla.kg_1",
            "quantity": 1
          }
        }
      },
      "recurrent_schedule": {
        "type": "object",
        "nullable": true,
        "description": "Limit refresh period.",
        "properties": {
          "per_user": {
            "oneOf": [
              {
                "type": "object",
                "title": "interval_type = daily",
                "description": "Daily type of user limits refresh.",
                "properties": {
                  "interval_type": {
                    "type": "string",
                    "description": "Recurrent refresh period.",
                    "enum": [
                      "daily"
                    ]
                  },
                  "time": {
                    "type": "string",
                    "description": "Time of limit refresh in the desired time zone (rounding to hours).",
                    "pattern": "((0[0-9]|1[0-9]|2[0-3]):00:00)(\\+|-)(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])",
                    "example": "02:00:00+03:00"
                  }
                },
                "required": [
                  "interval_type",
                  "time"
                ]
              },
              {
                "type": "object",
                "title": "interval_type = weekly",
                "description": "Weekly type of user limits refresh.",
                "properties": {
                  "interval_type": {
                    "type": "string",
                    "description": "Recurrent refresh period.",
                    "enum": [
                      "weekly"
                    ]
                  },
                  "day_of_week": {
                    "type": "integer",
                    "description": "Day of the week when the limits refresh. Where 1 is Monday and 7 is Sunday.",
                    "minimum": 1,
                    "maximum": 7
                  },
                  "time": {
                    "type": "string",
                    "description": "Time of limit refresh in the desired time zone (rounding to hours).",
                    "pattern": "((0[0-9]|1[0-9]|2[0-3]):00:00)(\\+|-)(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])",
                    "example": "11:00:00+03:00"
                  }
                },
                "required": [
                  "interval_type",
                  "time",
                  "day_of_week"
                ]
              },
              {
                "type": "object",
                "title": "interval_type = monthly",
                "description": "Monthly type of refresh of user limits.",
                "properties": {
                  "interval_type": {
                    "type": "string",
                    "description": "Recurrent refresh period.",
                    "enum": [
                      "monthly"
                    ]
                  },
                  "day_of_month": {
                    "type": "integer",
                    "description": "Day of the month when limits refresh. If there's no selected day in the month as it's shorter, then the refresh will occur on the last day of the month.",
                    "minimum": 1,
                    "maximum": 31
                  },
                  "time": {
                    "type": "string",
                    "description": "Time of limit refresh in the desired time zone (rounding to hours).",
                    "pattern": "((0[0-9]|1[0-9]|2[0-3]):00:00)(\\+|-)(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])",
                    "example": "23:00:00+03:00"
                  }
                },
                "required": [
                  "interval_type",
                  "time",
                  "day_of_month"
                ]
              }
            ]
          }
        }
      },
      "item-limit": {
        "type": "object",
        "description": "Item limits.",
        "properties": {
          "per_user": {
            "type": "integer",
            "nullable": true,
            "description": "Item limitation for a separate user.",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of items a user can purchase. You can set this number in Publisher Account or use admin endpoints for Store entities (limits object).",
                "example": 5
              }
            }
          },
          "per_item": {
            "type": "integer",
            "nullable": true,
            "description": "Global item limitation.",
            "example": 10
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/recurrent_schedule"
          }
        }
      },
      "item-periods": {
        "type": "array",
        "nullable": true,
        "description": "Item sales period.",
        "items": {
          "type": "object",
          "properties": {
            "date_from": {
              "type": "string",
              "format": "date-time",
              "example": "2020-08-11T10:00:00+03:00",
              "description": "Date when the specified item will be available for sale."
            },
            "date_until": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "example": "2020-08-11T20:00:00+03:00",
              "description": "Date when the specified item will become unavailable for sale. Can be `null`."
            }
          }
        }
      },
      "item-custom-attributes": {
        "type": "object",
        "description": "A JSON object containing item attributes and values. Attributes allow you to add more info to items like the player's required level to use the item. Attributes enrich your game's internal logic and are accessible through dedicated GET methods and webhooks.",
        "format": "json",
        "maxLength": 500
      },
      "Bundles_admin_bundle_request": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Bundles_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "groups": {
            "$ref": "#/components/schemas/Bundles_groups_request"
          },
          "attributes": {
            "$ref": "#/components/schemas/Bundles_admin-post-put-attributes"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Bundles_image_url"
          },
          "prices": {
            "$ref": "#/components/schemas/Bundles_prices"
          },
          "vc_prices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bundles_vc_prices"
              },
              {
                "nullable": true,
                "type": "array"
              }
            ]
          },
          "bundle_type": {
            "$ref": "#/components/schemas/Bundles_bundle_type"
          },
          "content": {
            "$ref": "#/components/schemas/Bundles_admin_content_request"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Bundles_is_enabled"
          },
          "is_show_in_store": {
            "$ref": "#/components/schemas/Bundles_is_show_in_store"
          },
          "media_list": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bundles_media_list"
              },
              {
                "nullable": true,
                "type": "array"
              }
            ]
          },
          "order": {
            "$ref": "#/components/schemas/Bundles_order"
          },
          "regions": {
            "$ref": "#/components/schemas/Bundles_admin-regions"
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes"
          }
        },
        "description": "The specified bundle.",
        "required": [
          "sku",
          "name",
          "description"
        ]
      },
      "Bundles_422-invalid-request": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-1102]: Unprocessable Entity. The property `property_name` is required"
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          },
          "errorMessageExtended": {
            "type": "array"
          }
        }
      },
      "Pagination_has-more": {
        "type": "boolean",
        "example": true,
        "description": "Used as an indicator that there are more pages."
      },
      "Bundles_client_name": {
        "type": "string",
        "example": "Big Rocket",
        "description": "Item name."
      },
      "Bundles_client_description": {
        "nullable": true,
        "type": "string",
        "example": "Big Rocket - description.",
        "description": "Item description."
      },
      "Bundles_client-attributes": {
        "type": "array",
        "description": "List of attributes and their values corresponding to the item. Can be used for catalog filtering.",
        "example": {
          "value": {
            "external_id": "genre",
            "name": "Жанр",
            "values": [
              {
                "external_id": "genre_e3364991f92e751689a68b96598a5a5a84010b85",
                "value": "Casual"
              },
              {
                "external_id": "genre_eba07bfd0f982940773cba3744d97264dd58acd7",
                "value": "Strategy"
              },
              {
                "external_id": "genre_b8d0c6d8f0524c2b2d79ebb93aa3cd0e8b5199a8",
                "value": "Mobile"
              }
            ]
          }
        },
        "default": [],
        "items": {
          "type": "object",
          "properties": {
            "external_id": {
              "$ref": "#/components/schemas/admin-attribute-external_id"
            },
            "name": {
              "type": "string",
              "description": "Name of attribute.",
              "example": "Genre"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "$ref": "#/components/schemas/value-external_id"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of attribute.",
                    "example": "Strategy"
                  }
                }
              }
            }
          }
        }
      },
      "Bundles_price": {
        "type": "object",
        "description": "Item price.",
        "nullable": true,
        "required": [
          "amount",
          "amount_without_discount",
          "currency"
        ],
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Bundles_amount"
          },
          "amount_without_discount": {
            "$ref": "#/components/schemas/Bundles_amount_without_discount"
          },
          "currency": {
            "$ref": "#/components/schemas/Bundles_currency"
          }
        }
      },
      "Bundles_virtual_prices": {
        "type": "array",
        "description": "Virtual prices.",
        "items": {
          "type": "object",
          "description": "Virtual price.",
          "properties": {
            "amount": {
              "type": "integer",
              "example": 100,
              "description": "Item price in virtual currency with a discount."
            },
            "amount_without_discount": {
              "type": "integer",
              "example": 200,
              "description": "Item price in virtual currency."
            },
            "sku": {
              "type": "string",
              "example": "gold",
              "description": "Virtual currency item SKU."
            },
            "is_default": {
              "type": "boolean",
              "example": true,
              "description": "Whether the price is default for an item."
            },
            "image_url": {
              "type": "string",
              "example": "http://image.png",
              "nullable": true,
              "description": "Image of virtual currency."
            },
            "name": {
              "type": "string",
              "example": "Gold",
              "description": "Virtual currency name."
            },
            "type": {
              "type": "string",
              "example": "virtual_currency",
              "description": "Virtual currency type."
            },
            "description": {
              "type": "string",
              "nullable": true,
              "example": "Most popular gold",
              "description": "Virtual currency description."
            }
          }
        }
      },
      "Can_be_bought": {
        "type": "boolean",
        "example": true,
        "description": "If `true`, the user can buy an item."
      },
      "Catalog_item_limits": {
        "nullable": true,
        "description": "Item limits.",
        "properties": {
          "per_user": {
            "type": "object",
            "nullable": true,
            "description": "Item limits for a user.",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of items a user can purchase. You can set this number in Publisher Account or use admin endpoints for Store entities (limits object).",
                "example": 5
              },
              "available": {
                "type": "integer",
                "description": "Available number of items for a user. The number decreases after every successful purchase. If no authorization is provided in the request,  the `available` number of items is set to match the `total` number of items.",
                "example": 3
              },
              "recurrent_schedule": {
                "description": "Item limits recurrent refresh period for a user.",
                "properties": {
                  "interval_type": {
                    "type": "string",
                    "description": "Recurrent refresh period type.",
                    "enum": [
                      "daily",
                      "weekly",
                      "monthly"
                    ]
                  },
                  "reset_next_date": {
                    "type": "integer",
                    "description": "Date and time when limits reset (Unix Timestamp).",
                    "example": 1677553200
                  }
                },
                "type": "object"
              }
            }
          },
          "per_item": {
            "type": "object",
            "nullable": true,
            "description": "Item limits for an item.",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of items that can be purchased. You can set this number in Publisher Account or use admin endpoints for Store entities (limits object).",
                "example": 5
              },
              "available": {
                "type": "integer",
                "description": "Available number of items for a user. The number decreases after every successful purchase. If no authorization is provided in the request,  the `available` number of items is set to match the `total` number of items.",
                "example": 3
              }
            }
          }
        },
        "type": "object"
      },
      "Bundles_client_content": {
        "type": "array",
        "example": [
          {
            "description": "Big Rocket - short description.",
            "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
            "sku": "com.xsolla.big_rocket_1",
            "name": "Big Rocket",
            "type": "virtual_currency",
            "quantity": 100,
            "attributes": [],
            "is_free": false,
            "groups": [],
            "price": {
              "amount": "10.99",
              "currency": "USD",
              "amount_without_discount": "10.99"
            }
          }
        ],
        "description": "Bundle package content.",
        "items": {
          "type": "object",
          "description": "Item in a package.",
          "properties": {
            "sku": {
              "type": "string",
              "example": "com.xsolla.big_rocket_1",
              "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, dashes, and underscores."
            },
            "name": {
              "type": "string",
              "example": "Big Rocket",
              "description": "Item name."
            },
            "type": {
              "type": "string",
              "example": "virtual_currency",
              "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`."
            },
            "description": {
              "type": "string",
              "example": "Big Rocket - description",
              "description": "Item description."
            },
            "image_url": {
              "type": "string",
              "example": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
              "description": "Image URL."
            },
            "quantity": {
              "type": "integer",
              "example": 250,
              "description": "Quantity of item in a package."
            },
            "virtual_item_type": {
              "type": "string",
              "example": "non-consumable",
              "description": "Type of virtual item.",
              "x-enumDescriptions": {
                "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
                "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
                "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
              },
              "enum": [
                "consumable",
                "non_consumable",
                "non_renewing_subscription"
              ]
            },
            "attributes": {
              "$ref": "#/components/schemas/Bundles_client-attributes"
            },
            "price": {
              "type": "object",
              "description": "Item prices.",
              "nullable": true,
              "properties": {
                "amount": {
                  "type": "string",
                  "example": "100.99",
                  "description": "Item price with a discount."
                },
                "amount_without_discount": {
                  "type": "string",
                  "example": "100.99",
                  "description": "Item price."
                },
                "currency": {
                  "type": "string",
                  "example": "USD",
                  "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
                }
              }
            },
            "virtual_prices": {
              "type": "array",
              "description": "Virtual prices.",
              "items": {
                "type": "object",
                "description": "Virtual price.",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 100,
                    "description": "Item price in virtual currency with a discount."
                  },
                  "amount_without_discount": {
                    "type": "integer",
                    "example": 200,
                    "description": "Item price."
                  },
                  "sku": {
                    "type": "string",
                    "example": "vc_test",
                    "description": "Virtual currency item SKU."
                  },
                  "is_default": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the price is default for an item."
                  },
                  "image_url": {
                    "type": "string",
                    "example": "http://image.png",
                    "description": "Image of virtual currency."
                  },
                  "name": {
                    "type": "string",
                    "example": "SHOTGUN FOR TRUE RAIDERS",
                    "description": "Virtual currency name."
                  },
                  "type": {
                    "type": "string",
                    "example": "virtual_currency",
                    "description": "Virtual currency type."
                  },
                  "description": {
                    "type": "string",
                    "example": "Big Rocket - description",
                    "description": "Virtual currency description."
                  }
                }
              }
            },
            "limits": {
              "$ref": "#/components/schemas/Catalog_item_limits"
            },
            "is_free": {
              "$ref": "#/components/schemas/value-is_free"
            },
            "groups": {
              "$ref": "#/components/schemas/Bundles_groups_response"
            }
          }
        }
      },
      "Catalog_item_promotions": {
        "type": "array",
        "description": "Applied promotions for specific items in the cart. The array is returned in the following cases:\n\n* A discount promotion is configured for a specific item.\n\n* A promo code with the **Discount on selected items** setting is applied.\n\nIf no item-level promotions are applied, an empty array is returned.\n",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "date_start": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "date_end": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "discount": {
              "type": "object",
              "properties": {
                "percent": {
                  "type": "string",
                  "nullable": true
                },
                "value": {
                  "type": "string",
                  "nullable": true
                }
              },
              "nullable": true
            },
            "bonus": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "description": "Bonus item type.",
                    "enum": [
                      "virtual_good",
                      "virtual_currency",
                      "bundle",
                      "physical_good",
                      "game_key",
                      "nft"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Bonus item name. Not available for `physical_good` bonus item type."
                  },
                  "image_url": {
                    "type": "string",
                    "description": "Bonus item image URL. Not available for `physical_good` bonus item type."
                  },
                  "bundle_type": {
                    "type": "string",
                    "description": "Bonus bundle item type. Available only for `bundle` bonus item type.",
                    "enum": [
                      "standard",
                      "virtual_currency_package"
                    ]
                  }
                }
              }
            },
            "limits": {
              "type": "object",
              "properties": {
                "per_user": {
                  "type": "object",
                  "properties": {
                    "available": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "item_id": {
        "type": "integer",
        "example": 1,
        "description": "Internal unique item ID."
      },
      "value-point-sku": {
        "type": "string",
        "description": "Unique value point ID."
      },
      "value-point-amount": {
        "type": "integer",
        "description": "Amount of value points."
      },
      "value-point-name": {
        "type": "string",
        "description": "Value point name."
      },
      "Common_admin-image_url": {
        "type": "string",
        "example": "https://image.example.com",
        "description": "Image URL."
      },
      "is_clan": {
        "type": "boolean",
        "description": "Whether the value point is used in clan reward chains.",
        "example": true
      },
      "client-item-value-point-reward": {
        "type": "array",
        "description": "Value point item reward.",
        "items": {
          "type": "object",
          "properties": {
            "item_id": {
              "$ref": "#/components/schemas/item_id"
            },
            "sku": {
              "$ref": "#/components/schemas/value-point-sku"
            },
            "amount": {
              "$ref": "#/components/schemas/value-point-amount"
            },
            "name": {
              "$ref": "#/components/schemas/value-point-name"
            },
            "image_url": {
              "$ref": "#/components/schemas/Common_admin-image_url"
            },
            "is_clan": {
              "$ref": "#/components/schemas/is_clan"
            }
          }
        }
      },
      "Bundles_client_bundle": {
        "type": "object",
        "properties": {
          "item_id": {
            "$ref": "#/components/schemas/Bundles_item_id"
          },
          "sku": {
            "$ref": "#/components/schemas/Bundles_sku"
          },
          "name": {
            "$ref": "#/components/schemas/Bundles_client_name"
          },
          "groups": {
            "$ref": "#/components/schemas/Bundles_groups_response"
          },
          "description": {
            "$ref": "#/components/schemas/Bundles_client_description"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "attributes": {
            "$ref": "#/components/schemas/Bundles_client-attributes"
          },
          "type": {
            "$ref": "#/components/schemas/Bundles_type"
          },
          "bundle_type": {
            "$ref": "#/components/schemas/Bundles_bundle_type"
          },
          "image_url": {
            "$ref": "#/components/schemas/Bundles_image_url"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "price": {
            "$ref": "#/components/schemas/Bundles_price"
          },
          "total_content_price": {
            "$ref": "#/components/schemas/Bundles_total_content_price"
          },
          "virtual_prices": {
            "$ref": "#/components/schemas/Bundles_virtual_prices"
          },
          "can_be_bought": {
            "$ref": "#/components/schemas/Can_be_bought"
          },
          "content": {
            "$ref": "#/components/schemas/Bundles_client_content"
          },
          "promotions": {
            "$ref": "#/components/schemas/Catalog_item_promotions"
          },
          "limits": {
            "$ref": "#/components/schemas/Catalog_item_limits"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes-response"
          },
          "vp_rewards": {
            "$ref": "#/components/schemas/client-item-value-point-reward"
          },
          "order": {
            "$ref": "#/components/schemas/Bundles_order"
          },
          "media_list": {
            "$ref": "#/components/schemas/Bundles_media_list"
          }
        },
        "description": "The specified bundle."
      },
      "value-cart_is_free": {
        "type": "boolean",
        "example": false,
        "default": false,
        "description": "If `true`, a cart is free."
      },
      "Cart-Payment_client-attributes": {
        "type": "array",
        "description": "List of attributes and their values corresponding to the item. Can be used for catalog filtering.",
        "example": {
          "value": {
            "external_id": "genre",
            "name": "Жанр",
            "values": [
              {
                "external_id": "genre_e3364991f92e751689a68b96598a5a5a84010b85",
                "value": "Casual"
              },
              {
                "external_id": "genre_eba07bfd0f982940773cba3744d97264dd58acd7",
                "value": "Strategy"
              },
              {
                "external_id": "genre_b8d0c6d8f0524c2b2d79ebb93aa3cd0e8b5199a8",
                "value": "Mobile"
              }
            ]
          }
        },
        "default": [],
        "items": {
          "type": "object",
          "properties": {
            "external_id": {
              "$ref": "#/components/schemas/admin-attribute-external_id"
            },
            "name": {
              "type": "string",
              "description": "Name of attribute.",
              "example": "Genre"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "$ref": "#/components/schemas/value-external_id"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of attribute.",
                    "example": "Strategy"
                  }
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_inventory_options": {
        "type": "object",
        "description": "Defines the inventory item options.",
        "properties": {
          "consumable": {
            "type": "object",
            "nullable": true,
            "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
            "properties": {
              "usages_count": {
                "type": "integer",
                "example": 1,
                "nullable": true,
                "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
              }
            }
          },
          "expiration_period": {
            "type": "object",
            "nullable": true,
            "description": "Defines the expiration properties if this is a expired item, or `null` if this is a non-expired item.",
            "properties": {
              "type": {
                "type": "string",
                "example": "day",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month",
                  "year"
                ],
                "description": "Defines type of item expiration."
              },
              "value": {
                "type": "integer",
                "example": 1,
                "description": "Defines value for an expiration period."
              }
            }
          }
        }
      },
      "Catalog_cart_promotions": {
        "type": "array",
        "description": "Applied promotions for the entire cart. The array is returned in the following cases:\n\n* A promotion affects the total cart amount, such as a promo code with the **Discount on purchase setting**.\n\n* A promotion adds bonus items to the cart.\n\nIf no order-level promotions are applied, an empty array is returned.\n",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "date_start": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "date_end": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "discount": {
              "type": "object",
              "properties": {
                "percent": {
                  "type": "string",
                  "nullable": true
                },
                "value": {
                  "type": "string",
                  "nullable": true
                }
              },
              "nullable": true
            },
            "bonus": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "description": "Bonus item type.",
                    "enum": [
                      "virtual_good",
                      "virtual_currency",
                      "bundle",
                      "physical_good",
                      "game_key",
                      "nft"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Bonus item name. Not available for `physical_good` bonus item type."
                  },
                  "image_url": {
                    "type": "string",
                    "description": "Bonus item image URL. Not available for `physical_good` bonus item type."
                  },
                  "bundle_type": {
                    "type": "string",
                    "description": "Bonus bundle item type. Available only for `bundle` bonus item type.",
                    "enum": [
                      "standard",
                      "virtual_currency_package"
                    ]
                  }
                }
              }
            },
            "limits": {
              "type": "object",
              "properties": {
                "per_user": {
                  "type": "object",
                  "properties": {
                    "available": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Cart-Payment_settings_ui": {
        "description": "Interface settings.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "theme": {
            "description": "Payment UI theme. Can be `63295a9a2e47fab76f7708e1` for the light theme (default) or `63295aab2e47fab76f7708e3` for the dark theme. You can also [create a custom theme](https://developers.xsolla.com/doc/pay-station/features/ui-theme-customization/#pay_station_ui_theme_customization_in_token) and pass its ID in this parameter.\n",
            "type": "string",
            "default": "63295a9a2e47fab76f7708e1",
            "enum": [
              "63295a9a2e47fab76f7708e1",
              "63295aab2e47fab76f7708e3"
            ]
          },
          "desktop": {
            "type": "object",
            "additionalProperties": false,
            "description": "Interface settings for the desktop version.",
            "properties": {
              "header": {
                "type": "object",
                "additionalProperties": false,
                "description": "Header settings.",
                "properties": {
                  "is_visible": {
                    "type": "boolean",
                    "description": "Whether to show the header in the payment UI."
                  },
                  "visible_logo": {
                    "type": "boolean",
                    "description": "If `true`, the logo is displayed in the header. To upload the image, open your project in [Publisher Account](https://publisher.xsolla.com/) and go to the <b>Pay Station > Settings section</b>."
                  },
                  "visible_name": {
                    "type": "boolean",
                    "description": "Whether to show the project name in the header."
                  },
                  "visible_purchase": {
                    "type": "boolean",
                    "description": "Whether to show the purchase description (`purchase.description.value`) in the header. `true` by default.",
                    "default": true
                  },
                  "type": {
                    "type": "string",
                    "description": "How to show the header. Can be `compact` (hides project name and user ID) or `normal` (default).",
                    "default": "normal",
                    "enum": [
                      "compact",
                      "normal"
                    ]
                  },
                  "close_button": {
                    "type": "boolean",
                    "description": "Whether to show a **Close** button in desktop payment UI. The button closes the payment UI and redirects the user to the URL specified in the `settings.return_url` parameter. `false` by default.\n",
                    "default": false
                  }
                }
              }
            }
          },
          "mode": {
            "type": "string",
            "enum": [
              "user_account"
            ],
            "description": "Interface mode in payment UI. Can be `user_account` only. The header contains only the account navigation menu, and the user cannot select a product or make a payment. This mode is only available on the desktop.\n"
          },
          "user_account": {
            "type": "object",
            "additionalProperties": false,
            "description": "User account details.",
            "properties": {
              "payment_accounts": {
                "type": "object",
                "additionalProperties": false,
                "description": "**My payment accounts** submenu.\n",
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to show the submenu. `false` by default."
                  }
                },
                "required": [
                  "enable"
                ]
              },
              "info": {
                "type": "object",
                "additionalProperties": false,
                "description": "Page **My account**.\n",
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to show the submenu. `false` by default."
                  },
                  "order": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Position of the submenu in the menu."
                  }
                },
                "required": [
                  "enable",
                  "order"
                ]
              },
              "subscriptions": {
                "type": "object",
                "additionalProperties": false,
                "description": "**Manage subscriptions** submenu.\n",
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to show the submenu. `false` by default."
                  },
                  "order": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Position of the submenu in the menu."
                  }
                },
                "required": [
                  "enable",
                  "order"
                ]
              }
            }
          },
          "header": {
            "type": "object",
            "properties": {
              "visible_virtual_currency_balance": {
                "type": "boolean",
                "additionalProperties": false,
                "description": "Whether or not this element can be hidden on Payment UI.",
                "default": true
              }
            }
          },
          "mobile": {
            "type": "object",
            "properties": {
              "header": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "close_button": {
                    "type": "boolean",
                    "description": "Whether to show a **Close** button in mobile payment UI. The button closes the payment UI and redirects the user to the URL specified in the `settings.return_url` parameter.",
                    "default": false
                  }
                }
              }
            }
          },
          "is_prevent_external_link_open": {
            "type": "boolean",
            "description": "Whether or not redirecting links to an external resource is disabled. When clicking an external link, the `external-link-open` event is sent via the `postMessage` mechanism. The address for the redirected link is passed in the `url` parameter.",
            "default": false
          },
          "is_payment_methods_list_mode": {
            "type": "boolean",
            "description": "Whether the list of payment methods available in the user’s country is displayed when opening the payment UI. If `false` (default), the payment method passed in the `settings.payment_method` parameter or the method selected by the [PayRank algorithm](https://developers.xsolla.com/solutions/payments/payment-ui-management/top-payment-methods-management/) is displayed.",
            "default": false
          },
          "is_independent_windows": {
            "type": "boolean",
            "description": "Whether to redirect users from the embedded launcher’s browser (WebView) to their default browser to make a purchase.",
            "default": false
          },
          "currency_format": {
            "type": "string",
            "description": "Set to `code` to display a three-letter [ISO 4217](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/) currency code in the payment UI. The currency symbol is displayed instead of the three-letter currency code by default."
          },
          "is_show_close_widget_warning": {
            "type": "boolean",
            "description": "Whether to show a warning about processing the transaction when hovering over the **×** icon before closing the payment page. If `false` is passed, or the parameter is not passed, the warning is not displayed.",
            "default": true
          },
          "layout": {
            "type": "string",
            "description": "Location of the main elements of the payment UI. You can open the payment UI inside your game and/or swap the columns with information about an order and payment methods. Refer to the [customization instructions](https://developers.xsolla.com/doc/pay-station/features/ui-theme-customization/#pay_station_ui_theme_customization_layout) for detailed information.",
            "enum": [
              "embed",
              "column_reverse",
              "embed_column_reverse"
            ]
          },
          "is_three_ds_independent_windows": {
            "type": "boolean",
            "description": "Whether the 3-D Secure verification opens in a new browser window. If your setup enforces a Content Security Policy (CSP), set to `true`.",
            "default": false
          },
          "is_cart_open_by_default": {
            "type": "boolean",
            "description": "The display of the list of items in the cart when opening the mobile version of the payment UI. If `true`, the list is displayed in an extended view. If `false` (default) or the parameters is not passed, the list is displayed in a collapsed view.",
            "default": false
          }
        }
      },
      "Cart-Payment_settings_payment_method": {
        "type": "integer",
        "description": "Payment method ID. It determines the display of currency in the payment interface, as some payment methods may only support certain currencies.",
        "minimum": 1
      },
      "Cart-Payment_settings_return_url": {
        "type": "string",
        "format": "uri",
        "description": "Page to redirect the user to after payment. Parameters `user_id`, `foreigninvoice`, `invoice_id` and `status` will be automatically added to the link.",
        "maxLength": 1000
      },
      "Cart-Payment_redirect_policy": {
        "type": "object",
        "properties": {
          "redirect_conditions": {
            "description": "Payment status triggering user redirect to the return URL.",
            "type": "string",
            "example": "none",
            "enum": [
              "none",
              "successful",
              "successful_or_canceled",
              "any"
            ]
          },
          "delay": {
            "description": "Delay after which the user will be automatically redirected to the return URL.",
            "type": "integer",
            "example": 0
          },
          "status_for_manual_redirection": {
            "description": "Payment status triggering the display of a button clicking which redirects the user to the return URL.",
            "type": "string",
            "example": "none",
            "enum": [
              "none",
              "vc",
              "successful",
              "successful_or_canceled",
              "any"
            ]
          },
          "redirect_button_caption": {
            "description": "Localized redirect button captions.",
            "type": "string",
            "example": "Text button"
          }
        }
      },
      "Cart-Payment_settings_sandbox": {
        "type": "boolean",
        "description": "Set to `true` to test out the payment process. In this case, use https://sandbox-secure.xsolla.com to access the test payment UI.",
        "default": false
      },
      "Cart-Payment_admin-user-request-body": {
        "type": "object",
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "object",
            "properties": {
              "value": {
                "description": "User ID. For testing, you can pass any value. To accept real payments, you need to use the user ID value from your system. This ID is passed in the [User validation](https://developers.xsolla.com/webhooks/operation/user-validation/) webhook.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255
              }
            }
          },
          "name": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "description": "User screen name."
              }
            }
          },
          "email": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "minLength": 3,
                "maxLength": 255,
                "format": "email",
                "description": "User email. Must be valid according to the RFC 822 protocol."
              }
            }
          },
          "country": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Two-letter uppercase country code per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Is required if an IP address is not passed in the `X-User-Ip` header. Check the documentation for detailed information about [countries supported by Xsolla](https://developers.xsolla.com/doc/shop-builder/references/supported-countries/). <br>Example: `country=US`",
                "example": "US"
              },
              "allow_modify": {
                "type": "boolean",
                "description": "Whether or not user can change the country in payment UI.",
                "default": false,
                "example": false
              }
            }
          },
          "age": {
            "type": "integer",
            "description": "User age."
          },
          "phone": {
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "string",
                "description": "User phone number."
              },
              "allow_modify": {
                "type": "boolean",
                "description": "Whether or not user can change the phone in the payment UI. If `phone.value` is passed in the token, the value is `false` by default.",
                "default": false,
                "example": false
              },
              "hidden": {
                "type": "boolean",
                "default": true,
                "example": false
              }
            }
          },
          "tracking_id": {
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "string",
                "minLength": 32,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{32}$",
                "description": "Unique tracking ID (used in marketing campaigns)."
              }
            }
          },
          "steam_id": {
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "string",
                "minLength": 17,
                "maxLength": 17,
                "pattern": "^\\d{17}$",
                "description": "Steam ID."
              }
            }
          },
          "is_legal": {
            "type": "boolean",
            "description": "Whether the user is a legal entity."
          },
          "legal": {
            "type": "object",
            "description": "Object with legal entity details. Object and all its parameters are required if `user.is_legal` is `true`.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Full legal name."
              },
              "address": {
                "type": "string",
                "description": "Full legal address."
              },
              "vat_id": {
                "type": "string",
                "description": "Individual taxpayer identifier."
              },
              "country": {
                "type": "string",
                "description": "Country of incorporation. Two-letter uppercase country code per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) is used."
              }
            }
          }
        }
      },
      "Cart_admin_payment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores.",
                  "example": "t-shirt"
                },
                "quantity": {
                  "type": "number",
                  "minimum": 1,
                  "example": 2,
                  "description": "Quantity of the item."
                }
              },
              "required": [
                "sku",
                "quantity"
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "items"
        ]
      },
      "Cart-Payment_settings_currency": {
        "type": "string",
        "description": "Preferred payment currency. Three-letter currency code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
      },
      "Cart-Payment_settings_locale": {
        "type": "string",
        "description": "Interface language. Two-letter lowercase [language code](https://developers.xsolla.com/doc/pay-station/features/localization/)."
      },
      "Cart-Payment_settings_external_id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "Transaction external ID."
      },
      "Cart-Payment_custom_parameters": {
        "description": "Your custom parameters represented as a valid JSON set of key-value pairs.<br>\nYou can pass additional parameters through this field to configure anti-fraud filters. [See Pay Station documentation](https://developers.xsolla.com/doc/pay-station/features/antifraud/).",
        "type": "object",
        "minProperties": 1,
        "maxProperties": 200,
        "nullable": true,
        "additionalProperties": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "type": "array"
            },
            {
              "type": "object"
            }
          ]
        },
        "example": {
          "custom_parameters": {
            "string_param": "example",
            "bool_param": true,
            "int_param": 100,
            "null_param": null
          }
        }
      },
      "Cart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "country": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "US",
            "description": "Two-letter uppercase country code per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Check the documentation for detailed information about [countries supported by Xsolla](https://developers.xsolla.com/doc/shop-builder/references/supported-countries/). <br>Example: `country=US`"
          },
          "currency": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "example": "USD",
            "description": "The item price currency displayed in the cart. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores.",
                  "example": "t-shirt"
                },
                "quantity": {
                  "type": "number",
                  "minimum": 1,
                  "example": 2,
                  "description": "Quantity of the item."
                }
              },
              "required": [
                "sku",
                "quantity"
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "items"
        ]
      },
      "sku": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[a-zA-Z0-9_\\-–.]*$",
        "example": "booster_mega_1",
        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
      },
      "item_type": {
        "type": "string",
        "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`unit`."
      },
      "unit_type": {
        "type": "string",
        "example": "game",
        "description": "Type of unit: `game`."
      },
      "drm_name": {
        "type": "string",
        "example": "Steam",
        "description": "Game key DRM name."
      },
      "drm_sku": {
        "type": "string",
        "example": "steam",
        "description": "DRM unique ID."
      },
      "is_enabled": {
        "type": "boolean",
        "example": true
      },
      "Upsell-model": {
        "type": "object",
        "description": "Upsell type.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "fixed_list"
            ],
            "example": true
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "items": {
            "type": "array",
            "example": [
              "game_sku"
            ],
            "default": null,
            "description": "Array of items SKU.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "is_enabled",
          "type",
          "items"
        ]
      },
      "Upsell-model-not-fixed-list": {
        "type": "object",
        "description": "Upsell type.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "most_sellable",
              "only_promotions"
            ],
            "example": true
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "items": {
            "type": "array",
            "example": [
              null
            ],
            "default": null,
            "description": "Empty array of items SKU.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "is_enabled",
          "type"
        ]
      },
      "Upsell-422-invalid-request": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-1102]: Unprocessable entity. The property `is_enabled` is required"
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          }
        }
      },
      "Virtual-Items-Currency_admin-groups-response": {
        "type": "array",
        "example": [
          {
            "external_id": "horror",
            "name": {
              "en": "Horror"
            }
          }
        ],
        "default": [],
        "description": "Groups the item belongs to.",
        "items": {
          "type": "object",
          "properties": {
            "external_id": {
              "type": "string",
              "example": "horror"
            },
            "name": {
              "type": "object",
              "description": "Name of item. Should contain key/value pairs\nwhere key is a locale with \"^[a-z]{2}\" format, value is string.\n",
              "example": {
                "en": "Horror",
                "de": "Horror"
              },
              "default": {
                "en": "Horror"
              },
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_client-attributes": {
        "type": "array",
        "description": "List of attributes and their values corresponding to the item. Can be used for catalog filtering.",
        "example": {
          "value": {
            "external_id": "genre",
            "name": "Жанр",
            "values": [
              {
                "external_id": "genre_e3364991f92e751689a68b96598a5a5a84010b85",
                "value": "Casual"
              },
              {
                "external_id": "genre_eba07bfd0f982940773cba3744d97264dd58acd7",
                "value": "Strategy"
              },
              {
                "external_id": "genre_b8d0c6d8f0524c2b2d79ebb93aa3cd0e8b5199a8",
                "value": "Mobile"
              }
            ]
          }
        },
        "default": [],
        "items": {
          "type": "object",
          "properties": {
            "external_id": {
              "$ref": "#/components/schemas/admin-attribute-external_id"
            },
            "name": {
              "type": "object",
              "description": "Name of attribute.",
              "example": "Genre",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              }
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "$ref": "#/components/schemas/value-external_id"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of attribute.",
                    "example": "Strategy"
                  }
                }
              }
            }
          }
        }
      },
      "Upsell_item": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "example": "big_rocket",
            "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
          },
          "name": {
            "type": "string",
            "example": "Big Rocket",
            "description": "Item name."
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-response"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_client-attributes"
          },
          "type": {
            "type": "string",
            "example": "virtual_good",
            "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`."
          },
          "description": {
            "type": "string",
            "example": "Big Rocket - description",
            "description": "Item description."
          },
          "image_url": {
            "type": "string",
            "example": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
            "description": "Image URL."
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "price": {
            "type": "object",
            "description": "Item prices.",
            "properties": {
              "amount": {
                "type": "string",
                "example": "100.99",
                "description": "Discounted item price."
              },
              "amount_without_discount": {
                "type": "string",
                "example": "100.99",
                "description": "Item price."
              },
              "currency": {
                "type": "string",
                "example": "USD",
                "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
              }
            },
            "nullable": true
          },
          "virtual_prices": {
            "type": "array",
            "description": "Virtual prices.",
            "items": {
              "type": "object",
              "description": "Virtual price.",
              "properties": {
                "amount": {
                  "type": "integer",
                  "example": 100,
                  "description": "Discounted item price in virtual currency."
                },
                "amount_without_discount": {
                  "type": "integer",
                  "example": 200,
                  "description": "Item price."
                },
                "sku": {
                  "type": "string",
                  "example": "vc_test",
                  "description": "Virtual currency item SKU."
                },
                "is_default": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether price is default for item."
                },
                "image_url": {
                  "type": "string",
                  "example": "http://image.png",
                  "description": "Image of virtual currency."
                },
                "name": {
                  "type": "string",
                  "example": "SHOTGUN FOR TRUE RAIDERS",
                  "description": "Virtual currency name."
                },
                "type": {
                  "type": "string",
                  "example": "virtual_currency",
                  "description": "Virtual currency type."
                },
                "description": {
                  "type": "string",
                  "example": "Big Rocket - description",
                  "description": "Virtual currency description."
                }
              }
            }
          },
          "can_be_bought": {
            "$ref": "#/components/schemas/Can_be_bought"
          },
          "inventory_options": {
            "type": "object",
            "description": "Defines the inventory item options.",
            "properties": {
              "consumable": {
                "type": "object",
                "nullable": true,
                "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
                "properties": {
                  "usages_count": {
                    "type": "integer",
                    "example": 1,
                    "nullable": true,
                    "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
                  }
                }
              },
              "expiration_period": {
                "type": "object",
                "nullable": true,
                "description": "Defines the expiration properties if this is a expired item, or `null` if this is a non-expired item.",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "day",
                    "enum": [
                      "minute",
                      "hour",
                      "day",
                      "week",
                      "month",
                      "year"
                    ],
                    "description": "Defines type of item expiration."
                  },
                  "value": {
                    "type": "integer",
                    "example": 1,
                    "description": "Defines value for an expiration period."
                  }
                }
              }
            }
          },
          "virtual_item_type": {
            "type": "string",
            "example": "non-consumable",
            "description": "Type of virtual item.",
            "x-enumDescriptions": {
              "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
              "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
              "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
            },
            "enum": [
              "consumable",
              "non_consumable",
              "non_renewing_subscription"
            ]
          },
          "promotions": {
            "$ref": "#/components/schemas/Catalog_item_promotions"
          },
          "limits": {
            "$ref": "#/components/schemas/Catalog_item_limits"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods-response"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes-response"
          },
          "vp_rewards": {
            "$ref": "#/components/schemas/client-item-value-point-reward"
          }
        }
      },
      "Upsell_item-list": {
        "type": "object",
        "properties": {
          "has_more": {
            "$ref": "#/components/schemas/Pagination_has-more"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Upsell_item"
            }
          }
        }
      },
      "Game-Keys_schemas-client-attributes": {
        "type": "array",
        "description": "List of attributes and their values corresponding to the item. Can be used for catalog filtering.",
        "example": {
          "value": {
            "external_id": "genre",
            "name": "Жанр",
            "values": [
              {
                "external_id": "genre_e3364991f92e751689a68b96598a5a5a84010b85",
                "value": "Casual"
              },
              {
                "external_id": "genre_eba07bfd0f982940773cba3744d97264dd58acd7",
                "value": "Strategy"
              },
              {
                "external_id": "genre_b8d0c6d8f0524c2b2d79ebb93aa3cd0e8b5199a8",
                "value": "Mobile"
              }
            ]
          }
        },
        "default": [],
        "items": {
          "type": "object",
          "properties": {
            "external_id": {
              "$ref": "#/components/schemas/admin-attribute-external_id"
            },
            "name": {
              "type": "string",
              "description": "Name of attribute.",
              "example": "Genre"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "$ref": "#/components/schemas/value-external_id"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of attribute.",
                    "example": "Strategy"
                  }
                }
              }
            }
          }
        }
      },
      "Game-Keys_admin-attributes": {
        "type": "array",
        "description": "List of attributes.",
        "items": {
          "$ref": "#/components/schemas/attribute"
        }
      },
      "Game-Keys_regions": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            }
          }
        }
      },
      "Game-Keys_admin-post-put-attributes": {
        "type": "array",
        "maxItems": 20,
        "description": "List of attributes.\n<div class=\"notice\"><strong>Attention.</strong> You <strong>can't specify more than 20 attributes</strong> for the item. Any attempts to exceed the limit result in an error.</div>\n",
        "items": {
          "$ref": "#/components/schemas/admin-post-put-attribute-item"
        }
      },
      "Game-Keys_422-invalid-request": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-1102]: Unprocessable Entity. The property `property_name` is required"
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          }
        }
      },
      "Pagination_total-items-count": {
        "type": "integer",
        "example": 10,
        "description": "Total number of items in the system."
      },
      "Game-Keys_client_name": {
        "type": "string",
        "example": "The Greatest Game in the World",
        "description": "Game package name."
      },
      "Game-Keys_description": {
        "type": "string",
        "example": "Description of the greatest game in the world.",
        "description": "Game package description."
      },
      "Game-Keys_project_id": {
        "type": "integer",
        "example": 44056,
        "description": "Project ID. You can find this parameter in your [Publisher Account](https://publisher.xsolla.com/) next to the name of the project."
      },
      "Game-Keys_game_sku": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[a-zA-Z0-9_\\-–.]*$",
        "example": "theGreatestGameSku",
        "description": "Unique key package ID."
      },
      "Game-Keys_drm_sku": {
        "type": "string",
        "example": "steam",
        "description": "Unique DRM ID.",
        "enum": [
          "steam",
          "playstation",
          "xbox",
          "uplay",
          "origin",
          "drmfree",
          "gog",
          "epicgames",
          "nintendo_eshop",
          "discord_game_store",
          "oculus",
          "rockstar",
          "viveport",
          "stadia"
        ]
      },
      "Game-Keys_image_url": {
        "type": "string",
        "example": "https://none",
        "description": "Image URL."
      },
      "Game-Keys_admin-attribute-external_id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[a-zA-Z0-9-_]+$",
        "example": "attribute_1",
        "description": "Unique attribute ID. The `external_id` may contain only lowercase and uppercase Latin alphanumeric characters, dashes, and underscores."
      },
      "Game-Keys_value-external_id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[-_.\\d\\w]+$",
        "example": "attribute_value",
        "description": "Unique value ID for an attribute. The `external_id` may only contain lowercase Latin alphanumeric characters, dashes, and underscores."
      },
      "Game-Keys_client-attributes": {
        "type": "array",
        "description": "List of attributes and their values corresponding to the Game.\n\n<div class=\"notice\"><strong>Attention.</strong> This part of response is available only if you send the `additional_fields[]=attributes` query parameter.</div>\n",
        "example": {
          "value": {
            "external_id": "genre",
            "name": "Жанр",
            "values": [
              {
                "external_id": "genre_e3364991f92e751689a68b96598a5a5a84010b85",
                "value": "Casual"
              },
              {
                "external_id": "genre_eba07bfd0f982940773cba3744d97264dd58acd7",
                "value": "Strategy"
              },
              {
                "external_id": "genre_b8d0c6d8f0524c2b2d79ebb93aa3cd0e8b5199a8",
                "value": "Mobile"
              }
            ]
          }
        },
        "default": [],
        "items": {
          "type": "object",
          "properties": {
            "external_id": {
              "$ref": "#/components/schemas/Game-Keys_admin-attribute-external_id"
            },
            "name": {
              "type": "string",
              "description": "Name of attribute.",
              "example": "Genre"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "$ref": "#/components/schemas/Game-Keys_value-external_id"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of attribute.",
                    "example": "Strategy"
                  }
                }
              }
            }
          }
        }
      },
      "Game-Keys_entitlement_item": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Game-Keys_client_name"
          },
          "description": {
            "$ref": "#/components/schemas/Game-Keys_description"
          },
          "project_id": {
            "$ref": "#/components/schemas/Game-Keys_project_id"
          },
          "game_sku": {
            "$ref": "#/components/schemas/Game-Keys_game_sku"
          },
          "drm": {
            "$ref": "#/components/schemas/Game-Keys_drm_sku"
          },
          "image_url": {
            "$ref": "#/components/schemas/Game-Keys_image_url"
          },
          "is_pre_order": {
            "type": "boolean",
            "example": false,
            "description": "Whether the game is in pre-order status or is not."
          },
          "attributes": {
            "$ref": "#/components/schemas/Game-Keys_client-attributes"
          }
        }
      },
      "Promotions_promotion_id": {
        "type": "integer",
        "description": "Promotion ID. Unique promotion identifier within the project.",
        "example": 1
      },
      "Promotions_coupon_date_start": {
        "type": "string",
        "nullable": true,
        "format": "date-time",
        "default": "2020-04-15T18:16:00+05:00",
        "description": "Date when your promotion will be started."
      },
      "Promotions_coupon_date_end": {
        "type": "string",
        "nullable": true,
        "format": "date-time",
        "default": "2020-04-15T18:16:00+05:00",
        "description": "Date when your promotion will be finished. Can be `null`.  If `date_end` is `null`, promotion will be unlimited by time."
      },
      "Promotions_coupon_name": {
        "type": "object",
        "description": "Name of promotion. Should contain key/value pairs\nwhere key is a locale with \"^[a-z]{2}-[A-Z]{2}$\" format, value is string.\n",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en-US": "Coupon title",
          "de-DE": "Gutscheintitel"
        },
        "default": {
          "en-US": "Coupon title",
          "de-DE": "Gutscheintitel"
        }
      },
      "Promotions_200-coupon-bonus-reward": {
        "type": "object",
        "properties": {
          "item": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "example": "game_01",
                "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
              },
              "name": {
                "type": "object",
                "example": {
                  "en": "Game name"
                },
                "description": "Item name."
              },
              "type": {
                "type": "string",
                "example": "unit",
                "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`physical_good`/`unit`."
              },
              "inventory_options": {
                "$ref": "#/components/schemas/Virtual-Items-Currency_inventory_options"
              },
              "bundle_type": {
                "type": "string",
                "description": "Bundle type. Returned if item type is a bundle.",
                "enum": [
                  "standard",
                  "virtual_currency_package"
                ]
              },
              "description": {
                "type": "string",
                "example": "Game description",
                "description": "Item description.",
                "nullable": true
              },
              "image_url": {
                "type": "string",
                "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                "description": "Image URL.",
                "nullable": true
              },
              "content": {
                "type": "array"
              },
              "unit_items": {
                "description": "If the item has the unit type, it includes all items in the unit. In the most cases the user should choose one of them as a coupon bonus.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sku": {
                      "type": "string",
                      "example": "game_01",
                      "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                    },
                    "is_free": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string",
                      "example": "game_key",
                      "description": "Type of item: `game_key`."
                    },
                    "name": {
                      "type": "string",
                      "example": "Game name",
                      "description": "Item name."
                    },
                    "drm_name": {
                      "type": "string",
                      "example": "Steam",
                      "description": "DRM name."
                    },
                    "drm_sku": {
                      "type": "string",
                      "example": "steam",
                      "description": "Unique DRM ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                    }
                  }
                }
              }
            }
          },
          "quantity": {
            "type": "number",
            "description": "Item quantity.",
            "default": 1
          }
        }
      },
      "Promotions_sku": {
        "type": "string",
        "example": "booster_mega_1",
        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
      },
      "Promotions_name": {
        "type": "object",
        "description": "Name of item. Should contain key/value pairs\nwhere key is a locale with \"^[a-z]{2}-[A-Z]{2}$\" format, value is string.\n",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en-US": "Item title",
          "de-DE": "Artikeltitel"
        },
        "default": {
          "en-US": "Item title",
          "de-DE": "Artikeltitel"
        }
      },
      "Promotions_type": {
        "type": "string",
        "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`physical_good`/`unit`."
      },
      "Promotions_redeem_code_limit": {
        "type": "integer",
        "description": "Number of redemptions per code.",
        "nullable": true,
        "example": 10,
        "default": 10
      },
      "Promotions_promotion_condition": {
        "type": "array",
        "nullable": true,
        "items": {
          "description": "The list of items for which the user received a bonus.",
          "type": "object",
          "properties": {
            "item": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/components/schemas/Promotions_sku"
                },
                "name": {
                  "$ref": "#/components/schemas/Promotions_name"
                },
                "type": {
                  "$ref": "#/components/schemas/Promotions_type"
                },
                "description": {
                  "type": "string",
                  "example": "Game description",
                  "description": "Item description.",
                  "nullable": true
                },
                "image_url": {
                  "type": "string",
                  "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                  "description": "Image URL.",
                  "nullable": true
                },
                "inventory_options": {
                  "$ref": "#/components/schemas/Virtual-Items-Currency_inventory_options"
                },
                "external_id": {
                  "type": "string",
                  "description": "Promotion external ID. Unique promotion identifier within the project.",
                  "minLength": 1,
                  "maxLength": 255,
                  "pattern": "^[-_.\\d\\w]+$"
                },
                "is_enabled": {
                  "type": "boolean"
                },
                "redeem_total_limit": {
                  "type": "integer",
                  "nullable": true
                },
                "redeem_user_limit": {
                  "type": "integer",
                  "nullable": true
                },
                "redeem_code_limit": {
                  "$ref": "#/components/schemas/Promotions_redeem_code_limit"
                }
              }
            }
          }
        }
      },
      "Promotions_coupon-is_enabled": {
        "type": "boolean",
        "default": true
      },
      "Promotions_promotion_type": {
        "type": "string",
        "description": "Promotion type.",
        "example": "item_discount"
      },
      "Promotions_promotion_discount_percent": {
        "type": "string",
        "nullable": true,
        "description": "Percent discount.\nThe price of cart will be decreased using a value calculated by using this percent and then rounded to 2 decimal places.",
        "default": "10.00",
        "example": "10.00"
      },
      "Promotions_promotion_limits_response": {
        "type": "object",
        "description": "Promotion limits.",
        "properties": {
          "per_user": {
            "type": "object",
            "nullable": true,
            "description": "Promotion limitation for a separate user.",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of items a user can purchase. You can set this number in Publisher Account or use admin endpoints for Store entities (limits object).",
                "example": 5
              }
            }
          },
          "per_item": {
            "type": "integer",
            "nullable": true,
            "description": "Global item limitation.",
            "example": 10
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/recurrent_schedule_response"
          }
        }
      },
      "Promotions_200-get-promotion-model": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Promotions_promotion_id"
          },
          "date_start": {
            "$ref": "#/components/schemas/Promotions_coupon_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/Promotions_coupon_date_end"
          },
          "name": {
            "$ref": "#/components/schemas/Promotions_coupon_name"
          },
          "bonus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotions_200-coupon-bonus-reward"
            }
          },
          "condition": {
            "$ref": "#/components/schemas/Promotions_promotion_condition"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Promotions_coupon-is_enabled"
          },
          "type": {
            "$ref": "#/components/schemas/Promotions_promotion_type"
          },
          "discount": {
            "type": "object",
            "nullable": true,
            "properties": {
              "percent": {
                "$ref": "#/components/schemas/Promotions_promotion_discount_percent"
              }
            },
            "example": {
              "discount": {
                "percent": "10.99"
              }
            }
          },
          "limits": {
            "$ref": "#/components/schemas/Promotions_promotion_limits_response"
          }
        }
      },
      "total_promotions_count": {
        "type": "integer",
        "description": "Total number of promotions."
      },
      "active_promotions_count": {
        "type": "integer",
        "description": "Number of active promotions."
      },
      "inactive_promotions_count": {
        "type": "integer",
        "description": "Number of deactivated promotions."
      },
      "Promotions_coupon-external_id": {
        "type": "string",
        "example": "coupon_external_id",
        "default": "coupon_external_id",
        "description": "Unique promotion ID. The `external_id` may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
      },
      "Promotions_coupon_bonus": {
        "nullable": true,
        "type": "array",
        "items": {
          "description": "The list of items which will be added into purchase of user as a bonus.",
          "type": "object",
          "properties": {
            "sku": {
              "type": "string",
              "description": "Item SKU.",
              "default": "elven_shield"
            },
            "quantity": {
              "type": "number",
              "description": "Item quantity.",
              "default": 1
            }
          }
        }
      },
      "Promotions_coupon-redeem_total_limit": {
        "type": "integer",
        "description": "Limits total numbers of coupons.",
        "nullable": true,
        "example": 10,
        "default": 10
      },
      "Promotions_coupon-redeem_user_limit": {
        "type": "integer",
        "description": "Limits total numbers of coupons redeemed by single user.",
        "nullable": true,
        "example": 10,
        "default": 10
      },
      "Promotions_coupon_total_limit_state": {
        "type": "object",
        "nullable": true,
        "description": "Limits for each unique coupon code.",
        "properties": {
          "available": {
            "type": "integer",
            "description": "The remaining number of times a coupon can be used.",
            "example": 3
          },
          "reserved": {
            "type": "integer",
            "description": "The reserved number of a coupon.",
            "example": 3
          },
          "used": {
            "type": "integer",
            "description": "The number of times a coupon is used.",
            "example": 5
          }
        }
      },
      "Promotions_cart_item_discount": {
        "type": "string",
        "nullable": false,
        "description": "Percent discount.\n\nThe price of cart item will be decreased using a value\ncalculated by using this percent and then rounded\nto 2 decimal places.\n",
        "default": "10.00",
        "example": "10.00"
      },
      "admin-promotions_200-get-redeemable-coupon-promotion-model": {
        "type": "object",
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/Promotions_coupon-external_id"
          },
          "date_start": {
            "$ref": "#/components/schemas/Promotions_coupon_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/Promotions_coupon_date_end"
          },
          "name": {
            "$ref": "#/components/schemas/Promotions_coupon_name"
          },
          "bonus": {
            "$ref": "#/components/schemas/Promotions_coupon_bonus"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Promotions_coupon-is_enabled"
          },
          "redeem_total_limit": {
            "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
          },
          "redeem_user_limit": {
            "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
          },
          "redeem_code_limit": {
            "$ref": "#/components/schemas/Promotions_redeem_code_limit"
          },
          "total_limit_state": {
            "$ref": "#/components/schemas/Promotions_coupon_total_limit_state"
          },
          "discount": {
            "type": "object",
            "nullable": true,
            "description": "Only for promo codes.",
            "properties": {
              "percent": {
                "type": "string",
                "nullable": true,
                "description": "Percent discount.\nThe price of cart will be decreased using a value calculated by using this percent and then rounded to 2 decimal places.",
                "default": "10.00",
                "example": "10.00"
              }
            },
            "example": {
              "discount": {
                "percent": "10.99"
              }
            }
          },
          "discounted_items": {
            "type": "array",
            "nullable": true,
            "description": "List of items that are discounted by a promo code. Only for promo codes.",
            "items": {
              "description": "Discount for particular items in the cart.",
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "description": "Item SKU.",
                  "default": "elven_shield"
                },
                "discount": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "percent": {
                      "$ref": "#/components/schemas/Promotions_cart_item_discount"
                    }
                  },
                  "required": [
                    "percent"
                  ]
                }
              },
              "required": [
                "sku",
                "discount"
              ],
              "minItems": 1
            }
          }
        }
      },
      "Promotions_selected_unit_items": {
        "type": "object",
        "description": "The reward that is selected by a user.\nObject key is an SKU of a unit, and value is an SKU of one of the items in a unit.\n",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "game_1": "game_1_steam",
          "game_2": "game_2_playstation"
        }
      },
      "Promotions_200-coupon-discount-reward": {
        "type": "object",
        "nullable": true,
        "description": "Percent discount.\nThe price of cart will be decreased using a value calculated by using this percent and then rounded to 2 decimal places.",
        "properties": {
          "percent": {
            "type": "string",
            "example": "10.00"
          }
        }
      },
      "Promotions_422_limit_error": {
        "description": "The redemption limit is reached.",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 9804
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-9804]: You have reached the coupon redemption limit."
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          }
        },
        "example": {
          "statusCode": 422,
          "errorCode": 9804,
          "errorMessage": "[0401-9804]: You have reached the coupon redemption limit."
        }
      },
      "Promotions_422_reglock_error": {
        "description": "Coupon is not available in user's region.",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 9808
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-9808]: Coupon is not available in your region."
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          }
        },
        "example": {
          "statusCode": 422,
          "errorCode": 9804,
          "errorMessage": "[0401-9804]: You have reached the coupon redemption limit."
        }
      },
      "user-attribute_conditions_response-string": {
        "type": "array",
        "title": "type = string",
        "minItems": 1,
        "maxItems": 100,
        "items": {
          "type": "object",
          "properties": {
            "attribute": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_attribute"
            },
            "type": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_type-string"
            },
            "operator": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_operator_string"
            },
            "value": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_value"
            },
            "can_be_missing": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_can_be_missing"
            }
          }
        }
      },
      "user-attribute_conditions_response-date": {
        "type": "array",
        "title": "type = date",
        "minItems": 1,
        "maxItems": 100,
        "items": {
          "type": "object",
          "properties": {
            "attribute": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_attribute"
            },
            "type": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_type-date"
            },
            "operator": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_operator"
            },
            "value": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_value"
            },
            "can_be_missing": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_can_be_missing"
            }
          }
        }
      },
      "user-attribute_conditions_response-number": {
        "type": "array",
        "title": "type = number",
        "minItems": 1,
        "maxItems": 100,
        "items": {
          "type": "object",
          "properties": {
            "attribute": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_attribute"
            },
            "type": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_type-number"
            },
            "operator": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_operator"
            },
            "value": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_value"
            },
            "can_be_missing": {
              "$ref": "#/components/schemas/user-attribute_conditions_properties_can_be_missing"
            }
          }
        }
      },
      "admin-promotions_200-get-coupon-promotion-model": {
        "type": "object",
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/Promotions_coupon-external_id"
          },
          "date_start": {
            "$ref": "#/components/schemas/Promotions_coupon_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/Promotions_coupon_date_end"
          },
          "name": {
            "$ref": "#/components/schemas/Promotions_coupon_name"
          },
          "bonus": {
            "$ref": "#/components/schemas/Promotions_coupon_bonus"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Promotions_coupon-is_enabled"
          },
          "redeem_total_limit": {
            "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
          },
          "redeem_user_limit": {
            "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
          },
          "redeem_code_limit": {
            "$ref": "#/components/schemas/Promotions_redeem_code_limit"
          },
          "total_limit_state": {
            "$ref": "#/components/schemas/Promotions_coupon_total_limit_state"
          },
          "attribute_conditions": {
            "description": "Conditions which are compared to user attribute values.\nAll conditions must be met for the action to take an effect.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions_response-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions_response-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions_response-number"
              }
            ]
          }
        }
      },
      "Promotions_coupon_code": {
        "type": "string",
        "description": "Unique case sensitive code. Contains letters and numbers.",
        "minLength": 1,
        "maxLength": 128,
        "example": "WINTER2021",
        "default": "WINTER2021",
        "pattern": "^[a-zA-Z0-9]+$"
      },
      "Promotions_coupon-generate-count": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100000,
        "example": 10
      },
      "Promotions_200-promo-code-bonus-reward": {
        "type": "object",
        "properties": {
          "item": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "example": "game_01",
                "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
              },
              "name": {
                "type": "string",
                "example": "Game name",
                "description": "Item name."
              },
              "type": {
                "type": "string",
                "example": "unit",
                "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`physical_good`/`unit`."
              },
              "description": {
                "type": "string",
                "example": "Game description",
                "description": "Item description."
              },
              "image_url": {
                "type": "string",
                "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                "description": "Image URL."
              },
              "unit_items": {
                "description": "If the item has the unit type, it includes all items in the unit. In the most cases the user should choose one of them as a promo code bonus.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sku": {
                      "type": "string",
                      "example": "game_01",
                      "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                    },
                    "type": {
                      "type": "string",
                      "example": "game_key",
                      "description": "Type of item: `game_key`."
                    },
                    "is_free": {
                      "$ref": "#/components/schemas/value-is_free"
                    },
                    "name": {
                      "type": "string",
                      "example": "Game name",
                      "description": "Item name."
                    },
                    "drm_name": {
                      "type": "string",
                      "example": "Steam",
                      "description": "DRM name."
                    },
                    "drm_sku": {
                      "type": "string",
                      "example": "steam",
                      "description": "Unique DRM ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                    }
                  }
                }
              }
            }
          },
          "quantity": {
            "type": "number",
            "description": "Item quantity.",
            "default": 1
          }
        }
      },
      "Promotions_discounted_items": {
        "type": "array",
        "nullable": true,
        "description": "List of items that are discounted by a promo code.",
        "items": {
          "description": "Discount for particular items in cart.",
          "type": "object",
          "properties": {
            "sku": {
              "type": "string",
              "description": "Item SKU.",
              "default": "elven_shield"
            },
            "discount": {
              "type": "object",
              "nullable": false,
              "properties": {
                "percent": {
                  "$ref": "#/components/schemas/Promotions_cart_item_discount"
                }
              },
              "required": [
                "percent"
              ]
            }
          },
          "required": [
            "sku",
            "discount"
          ],
          "minItems": 1
        }
      },
      "Promo_code_rewards": {
        "type": "object",
        "properties": {
          "bonus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotions_200-promo-code-bonus-reward"
            }
          },
          "discount": {
            "$ref": "#/components/schemas/Promotions_200-coupon-discount-reward"
          },
          "discounted_items": {
            "$ref": "#/components/schemas/Promotions_discounted_items"
          },
          "is_selectable": {
            "type": "boolean",
            "description": "If `true`, the user should choose the bonus before redeeming a promo code."
          }
        }
      },
      "client-attributes": {
        "type": "array",
        "description": "List of attributes and their values corresponding to the item. Can be used for catalog filtering.",
        "example": {
          "value": {
            "external_id": "genre",
            "name": "Жанр",
            "values": [
              {
                "external_id": "genre_e3364991f92e751689a68b96598a5a5a84010b85",
                "value": "Casual"
              },
              {
                "external_id": "genre_eba07bfd0f982940773cba3744d97264dd58acd7",
                "value": "Strategy"
              },
              {
                "external_id": "genre_b8d0c6d8f0524c2b2d79ebb93aa3cd0e8b5199a8",
                "value": "Mobile"
              }
            ]
          }
        },
        "default": [],
        "items": {
          "type": "object",
          "properties": {
            "external_id": {
              "$ref": "#/components/schemas/admin-attribute-external_id"
            },
            "name": {
              "type": "string",
              "description": "Name of attribute.",
              "example": "Genre"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "$ref": "#/components/schemas/value-external_id"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of attribute.",
                    "example": "Strategy"
                  }
                }
              }
            }
          }
        }
      },
      "Promotions_promocode_total_limit_state": {
        "type": "object",
        "nullable": true,
        "description": "Limits for each unique promo code.",
        "properties": {
          "available": {
            "type": "integer",
            "description": "The remaining number of times a promo code can be used.",
            "example": 3
          },
          "reserved": {
            "type": "integer",
            "description": "The reserved number of a promo code.",
            "example": 3
          },
          "used": {
            "type": "integer",
            "description": "The number of times a promo code is used.",
            "example": 5
          }
        }
      },
      "price_conditions_items": {
        "description": "Each object describes a rule the price should be.",
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "description": "Comparison operator for setting the price range for applying the promotion.",
            "enum": [
              "ge",
              "gt",
              "le",
              "lt",
              "eq",
              "ne"
            ],
            "x-enumDescriptions": {
              "ge": "Greater or equal",
              "gt": "Greater than",
              "le": "Less or equal",
              "lt": "Less than",
              "eq": "Equals",
              "ne": "Not equals"
            }
          },
          "value": {
            "type": "string",
            "description": "Value for determining the price range for applying the promotion.",
            "pattern": "^\\d+(\\.\\d{1,4})?$"
          }
        },
        "required": [
          "operator",
          "value"
        ]
      },
      "price_conditions_promocode": {
        "type": "array",
        "nullable": true,
        "description": "Array of objects with conditions that set the price range for applying the promotion to the entire cart.<br>\nThe total price of all items in the user's cart is compared with the price range specified in the condition. [Bonuses](/api/shop-builder/operation/create-promo-code/#!path=bonus&t=request) and [discounts](/api/shop-builder/operation/create-promo-code/#!path=discount&t=request) are applied to all items in the cart if the price of the cart meets the specified condition.<br>\nIf you pass this array, set the value of the [discounted_items](/api/shop-builder/operation/create-promo-code/#!path=discounted_items&t=request) array to `null`.",
        "items": {
          "$ref": "#/components/schemas/price_conditions_items"
        }
      },
      "item_price_conditions_promocode": {
        "type": "array",
        "nullable": true,
        "description": "Array of objects with conditions that set the price range for applying the promotion to certain items in the cart.<br>\nThe price of each item in the user's cart is compared with the price range specified in the condition. [Bonuses](/api/shop-builder/operation/create-promo-code/#!path=bonus&t=request) and [discounts](/api/shop-builder/operation/create-promo-code/#!path=discount&t=request) are applied only to those items in the cart whose price meets the condition.<br>\nIf you pass this array, set the value of the [discounted_items](/api/shop-builder/operation/create-promo-code/#!path=discounted_items&t=request) array to `null`.",
        "items": {
          "$ref": "#/components/schemas/price_conditions_items"
        }
      },
      "excluded_promotions": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "example": [
          12,
          789
        ],
        "description": "List of promotion IDs to exclude when applying this promotion. <br>Example: `[12, 789]`"
      },
      "Promotions_200-get-promocode-promotion-model": {
        "type": "object",
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/Promotions_coupon-external_id"
          },
          "date_start": {
            "$ref": "#/components/schemas/Promotions_coupon_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/Promotions_coupon_date_end"
          },
          "name": {
            "$ref": "#/components/schemas/Promotions_coupon_name"
          },
          "bonus": {
            "$ref": "#/components/schemas/Promotions_coupon_bonus"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Promotions_coupon-is_enabled"
          },
          "redeem_total_limit": {
            "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
          },
          "redeem_user_limit": {
            "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
          },
          "redeem_code_limit": {
            "$ref": "#/components/schemas/Promotions_redeem_code_limit"
          },
          "discount": {
            "type": "object",
            "nullable": true,
            "properties": {
              "percent": {
                "$ref": "#/components/schemas/Promotions_promotion_discount_percent"
              }
            },
            "example": {
              "discount": {
                "percent": "10.99"
              }
            }
          },
          "discounted_items": {
            "$ref": "#/components/schemas/Promotions_discounted_items"
          },
          "total_limit_state": {
            "$ref": "#/components/schemas/Promotions_promocode_total_limit_state"
          },
          "attribute_conditions": {
            "description": "Conditions which are compared to user attribute values.\nAll conditions must be met for the action to take an effect.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions_response-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions_response-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions_response-number"
              }
            ]
          },
          "price_conditions": {
            "$ref": "#/components/schemas/price_conditions_promocode"
          },
          "item_price_conditions": {
            "$ref": "#/components/schemas/item_price_conditions_promocode"
          },
          "excluded_promotions": {
            "$ref": "#/components/schemas/excluded_promotions"
          }
        }
      },
      "price_conditions_discount": {
        "type": "array",
        "nullable": true,
        "description": "Array of objects with conditions that set the price range for applying the promotion.<br> The promotion applies only to items whose price meets all the conditions in the array. If you pass this array, set the value of the [items](/api/shop-builder/operation/create-item-promotion/#!path=items&t=request) object to `null`.",
        "items": {
          "$ref": "#/components/schemas/price_conditions_items"
        }
      },
      "Promotions_promotion_limits": {
        "type": "object",
        "description": "Promotion limits.",
        "properties": {
          "per_user": {
            "type": "integer",
            "nullable": true,
            "description": "Promotion limitation for a separate user."
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/recurrent_schedule"
          }
        }
      },
      "price_conditions_bonus": {
        "type": "array",
        "nullable": true,
        "description": "Array of objects with conditions that set the price range for applying the promotion.<br> The promotion applies only to items whose price meets all the conditions in the array. If you pass this array, set the value of the [condition](/api/shop-builder/operation/create-bonus-promotion/#!path=condition&t=request) object to `null`.",
        "items": {
          "$ref": "#/components/schemas/price_conditions_items"
        }
      },
      "Promotions_200-get-bonus-promotion-model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Promotion ID. Unique promotion identifier within the project."
          },
          "date_start": {
            "type": "string",
            "format": "date-time",
            "default": "2020-04-15T18:16:00+05:00",
            "description": "Date when your promotion will be started.\n"
          },
          "date_end": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "default": "2020-04-15T18:16:00+05:00",
            "description": "Date when your promotion will be finished. Can be `null`. If `date_end` is `null`, promotion will be unlimited by time."
          },
          "name": {
            "type": "object",
            "description": "Name of promotion. Should contain key/value pairs\nwhere key is a locale with \"^[a-z]{2}-[A-Z]{2}$\" format, value is string.\n",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "en-US": "Summer season bonus",
              "de-DE": "Sommersaison Bonus"
            }
          },
          "is_enabled": {
            "type": "boolean",
            "default": true
          },
          "condition": {
            "type": "array",
            "nullable": true,
            "description": "Set of items required to be included in the purchase for applying a promotion. If this parameters is `null`, a promotion will be applied to any purchases within a project.",
            "items": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "description": "Item SKU.",
                  "default": "elven_sword"
                }
              }
            }
          },
          "bonus": {
            "type": "array",
            "nullable": true,
            "items": {
              "description": "The list of items which will be added into purchase of user as a bonus.\n",
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "description": "Item SKU.",
                  "default": "elven_shield"
                },
                "quantity": {
                  "type": "number",
                  "description": "Item quantity.",
                  "default": 1
                }
              }
            }
          },
          "attribute_conditions": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-number"
              }
            ]
          },
          "limits": {
            "$ref": "#/components/schemas/Promotions_promotion_limits_response"
          },
          "excluded_promotions": {
            "$ref": "#/components/schemas/excluded_promotions"
          },
          "price_conditions": {
            "$ref": "#/components/schemas/price_conditions_bonus"
          }
        }
      },
      "Coupon_rewards": {
        "type": "object",
        "properties": {
          "bonus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotions_200-coupon-bonus-reward"
            }
          },
          "is_selectable": {
            "type": "boolean",
            "description": "If `true`, the user should select a bonus before redeeming a coupon."
          }
        }
      },
      "Promotions_discounted_items_verify": {
        "type": "array",
        "nullable": true,
        "description": "List of items that are discounted by a promo code.",
        "items": {
          "description": "Discount for particular items.",
          "type": "object",
          "properties": {
            "sku": {
              "type": "string",
              "example": "game_01",
              "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
            },
            "name": {
              "type": "string",
              "example": "Game name",
              "description": "Item name."
            },
            "type": {
              "type": "string",
              "example": "unit",
              "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`physical_good`/`unit`."
            },
            "description": {
              "type": "string",
              "example": "Game description",
              "description": "Item description."
            },
            "image_url": {
              "type": "string",
              "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
              "description": "Image URL."
            },
            "unit_items": {
              "description": "If the item has the unit type, it includes all items in the unit. In the most cases the user should choose one of them as a promo code bonus.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sku": {
                    "type": "string",
                    "example": "game_01",
                    "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                  },
                  "type": {
                    "type": "string",
                    "example": "game_key",
                    "description": "Type of item: `game_key`."
                  },
                  "name": {
                    "type": "string",
                    "example": "Game name",
                    "description": "Item name."
                  },
                  "drm_name": {
                    "type": "string",
                    "example": "Steam",
                    "description": "DRM name."
                  },
                  "drm_sku": {
                    "type": "string",
                    "example": "steam",
                    "description": "Unique DRM ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                  }
                }
              }
            },
            "discount": {
              "type": "object",
              "nullable": false,
              "properties": {
                "percent": {
                  "$ref": "#/components/schemas/Promotions_cart_item_discount"
                }
              }
            }
          }
        }
      },
      "Promo_code_rewards_verify": {
        "type": "object",
        "properties": {
          "bonus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotions_200-promo-code-bonus-reward"
            }
          },
          "discount": {
            "$ref": "#/components/schemas/Promotions_200-coupon-discount-reward"
          },
          "discounted_items": {
            "$ref": "#/components/schemas/Promotions_discounted_items_verify"
          },
          "is_selectable": {
            "type": "boolean",
            "description": "If `true`, the user should choose the bonus before redeeming a promo code."
          }
        }
      },
      "Virtual-Items-Currency_sku": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[a-zA-Z0-9_\\-–.]*$",
        "example": "booster_mega_1",
        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
      },
      "Virtual-Items-Currency_schemas-admin-attributes": {
        "type": "array",
        "description": "List of attributes.",
        "items": {
          "$ref": "#/components/schemas/attribute"
        }
      },
      "Virtual-Items-Currency_admin-attributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Virtual-Items-Currency_schemas-admin-attributes"
          },
          {
            "description": "List of attributes."
          }
        ]
      },
      "Virtual-Items-Currency_admin-media_list": {
        "type": "array",
        "example": [
          {
            "type": "image",
            "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
          }
        ],
        "description": "Item's additional assets such as screenshots, gameplay video and so on.",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "image",
                "video"
              ],
              "example": "image",
              "description": "Type of media: `image`/`video`."
            },
            "url": {
              "type": "string",
              "example": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg",
              "description": "Resource file."
            }
          }
        }
      },
      "Virtual-Items-Currency_type": {
        "type": "string",
        "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`physical_good`/`unit`."
      },
      "Virtual-Items_admin-prices": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "amount",
            "currency"
          ],
          "properties": {
            "amount": {
              "description": "Amount.",
              "type": "number",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "currency": {
              "type": "string",
              "example": "USD",
              "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
            },
            "country_iso": {
              "type": "string",
              "description": "Two-letter uppercase country code per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Check the documentation for detailed information about [countries supported by Xsolla](https://developers.xsolla.com/doc/shop-builder/references/supported-countries/). <br>Example: `country=US`",
              "example": "US"
            },
            "is_default": {
              "type": "boolean",
              "default": false
            },
            "is_enabled": {
              "type": "boolean",
              "default": true
            }
          },
          "example": {
            "currency": "USD",
            "amount": 10.5,
            "is_default": true,
            "is_enabled": true
          }
        }
      },
      "Virtual-Items-Currency_schemas-sku": {
        "type": "string",
        "example": "bundle_1",
        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
      },
      "Virtual-Items-Currency_admin-get-vc_prices": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "sku",
            "amount"
          ],
          "properties": {
            "sku": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_schemas-sku"
            },
            "amount": {
              "description": "Amount.",
              "type": "number",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "is_default": {
              "type": "boolean",
              "default": false
            }
          },
          "example": {
            "sku": "com.xsolla.gold_1",
            "amount": 10,
            "is_default": true
          }
        }
      },
      "Virtual-Items-Currency_admin-image_url": {
        "type": "string"
      },
      "Virtual-Items-Currency_order": {
        "type": "integer",
        "example": 1,
        "description": "Defines arrangement order."
      },
      "Virtual-Items-Currency_is_enabled": {
        "type": "boolean"
      },
      "Virtual-Items-Currency_is_show_in_store": {
        "type": "boolean"
      },
      "Virtual-Items-Currency_admin-regions": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          }
        }
      },
      "Virtual-Items-Currency_admin-virtual-item": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_sku"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-attributes"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-response"
          },
          "media_list": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-media_list"
          },
          "type": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_type"
          },
          "prices": {
            "$ref": "#/components/schemas/Virtual-Items_admin-prices"
          },
          "vc_prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-get-vc_prices"
          },
          "image_url": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-image_url"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_order"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_enabled"
          },
          "is_show_in_store": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_show_in_store"
          },
          "inventory_options": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_inventory_options"
          },
          "regions": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-regions"
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit-response"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods-response"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes-response"
          }
        }
      },
      "Virtual-Items-Currency_schemas-admin-image_url": {
        "type": "string",
        "example": "https://image.example.com",
        "description": "Image URL."
      },
      "Virtual-Items-Currency_admin-groups-create": {
        "type": "array",
        "description": "Groups the item belongs to.\n<div class=\"note\"><strong>Note.</strong> The string value refers to group `external_id`.</div>",
        "items": {
          "type": "string",
          "properties": {
            "external_id": {
              "type": "string",
              "example": "accessory"
            },
            "name": {
              "type": "string",
              "example": "Accessory"
            }
          }
        }
      },
      "Virtual-Items-Currency_admin-post-put-attributes": {
        "type": "array",
        "maxItems": 20,
        "description": "List of attributes.\n<div class=\"notice\"><strong>Attention.</strong> You <strong>can't specify more than 20 attributes</strong> for the item. Any attempts to exceed the limit result in an error.</div>\n",
        "items": {
          "$ref": "#/components/schemas/admin-post-put-attribute-item"
        }
      },
      "Virtual-Items-Currency_admin-create-vc_prices": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sku": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_schemas-sku"
            },
            "amount": {
              "type": "integer"
            },
            "is_default": {
              "type": "boolean",
              "default": false
            },
            "is_enabled": {
              "type": "boolean",
              "default": false,
              "description": "The price is enabled."
            }
          },
          "required": [
            "amount",
            "currency",
            "is_default",
            "is_enabled"
          ],
          "example": {
            "sku": "com.xsolla.gold_1",
            "amount": 10,
            "is_default": true,
            "is_enabled": true
          }
        }
      },
      "Virtual-Items-Currency_is_deleted": {
        "type": "boolean"
      },
      "Virtual-Items-Currency_admin-pre_order": {
        "type": "object",
        "properties": {
          "release_date": {
            "type": "string",
            "nullable": true,
            "format": "date-time"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "release_date",
          "is_enabled"
        ]
      },
      "Virtual-Items-Currency_admin-create-virtual-item": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_schemas-admin-image_url"
          },
          "media_list": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-media_list"
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-create"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-post-put-attributes"
          },
          "prices": {
            "$ref": "#/components/schemas/Virtual-Items_admin-prices"
          },
          "vc_prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-create-vc_prices"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_enabled"
          },
          "is_deleted": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_deleted"
          },
          "is_show_in_store": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_show_in_store"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_order"
          },
          "inventory_options": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_inventory_options"
          },
          "pre_order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-pre_order"
          },
          "regions": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-regions"
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes"
          }
        }
      },
      "Virtual-Items-Currency_422-invalid-request": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-1102]: Unprocessable Entity. The property `property_name` is required"
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          },
          "errorMessageExtended": {
            "type": "array"
          }
        }
      },
      "Virtual-Items-Currency_admin-prices": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "amount",
            "currency"
          ],
          "properties": {
            "currency": {
              "type": "string",
              "example": "USD",
              "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
            },
            "amount": {
              "description": "Amount.",
              "type": "number",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "is_default": {
              "type": "boolean",
              "default": false
            },
            "is_enabled": {
              "type": "boolean",
              "default": true
            },
            "country_iso": {
              "type": "string",
              "nullable": true,
              "example": "US",
              "description": "Country where this price is available. Two-letter code per [ISO 3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)."
            }
          },
          "example": {
            "currency": "USD",
            "amount": 10.5,
            "is_default": true,
            "is_enabled": true,
            "country_iso": "US"
          }
        }
      },
      "Virtual-Items-Currency_is_hard": {
        "type": "boolean"
      },
      "Virtual-Items-Currency_admin-virtual-currency": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-response"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-attributes"
          },
          "media_list": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-media_list"
          },
          "type": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_type"
          },
          "prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-prices"
          },
          "vc_prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-get-vc_prices"
          },
          "image_url": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-image_url"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_enabled"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_order"
          },
          "is_show_in_store": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_show_in_store"
          },
          "is_hard": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_hard"
          },
          "regions": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-regions"
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit-response"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods-response"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes-response"
          }
        }
      },
      "Virtual-Items-Currency_admin-create-virtual-currency": {
        "type": "object",
        "required": [
          "sku",
          "name"
        ],
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-image_url"
          },
          "media_list": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-media_list"
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-response"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-post-put-attributes"
          },
          "prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-prices"
          },
          "vc_prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-create-vc_prices"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_enabled"
          },
          "is_deleted": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_deleted"
          },
          "is_show_in_store": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_show_in_store"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "is_hard": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_hard"
          },
          "order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_order"
          },
          "pre_order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-pre_order"
          },
          "regions": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-regions"
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes"
          }
        }
      },
      "Virtual-Items-Currency_admin-virtual-currency-package": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "type": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_type"
          },
          "image_url": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-image_url"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-attributes"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_order"
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-response"
          },
          "prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-prices"
          },
          "media_list": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-media_list"
          },
          "vc_prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-get-vc_prices"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_enabled"
          },
          "bundle_type": {
            "type": "string",
            "default": "virtual_currency_package",
            "example": "virtual_currency_package"
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/components/schemas/Virtual-Items-Currency_sku"
                },
                "name": {
                  "$ref": "#/components/schemas/name-localization-object"
                },
                "image_url": {
                  "$ref": "#/components/schemas/Virtual-Items-Currency_admin-image_url"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          },
          "is_show_in_store": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_show_in_store"
          },
          "regions": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-regions"
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit-response"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods-response"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes"
          }
        }
      },
      "Virtual-Items-Currency_admin-create-virtual-currency-package": {
        "type": "object",
        "required": [
          "sku",
          "name",
          "description",
          "content"
        ],
        "anyOf": [
          {
            "required": [
              "prices"
            ]
          },
          {
            "required": [
              "vc_prices"
            ]
          }
        ],
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_sku"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-image_url"
          },
          "media_list": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-media_list"
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-create"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-post-put-attributes"
          },
          "prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-prices"
          },
          "vc_prices": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-create-vc_prices"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_enabled"
          },
          "is_deleted": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_deleted"
          },
          "is_show_in_store": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_is_show_in_store"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_order"
          },
          "content": {
            "type": "array",
            "minLength": 1,
            "maxLength": 1,
            "description": "Virtual currency package should contain only 1 position of virtual currency.",
            "items": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/components/schemas/Virtual-Items-Currency_sku"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          },
          "pre_order": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-pre_order"
          },
          "regions": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-regions"
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes"
          }
        }
      },
      "Virtual-Items-Currency_item": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "number",
            "description": "Item ID."
          },
          "sku": {
            "type": "string",
            "example": "big_rocket",
            "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
          },
          "name": {
            "type": "object",
            "example": "Big Rocket",
            "description": "Item name.",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-response"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_client-attributes"
          },
          "type": {
            "type": "string",
            "example": "virtual_good",
            "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`."
          },
          "description": {
            "type": "object",
            "example": "Big Rocket - description",
            "description": "Item description.",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "image_url": {
            "type": "string",
            "example": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
            "description": "Image URL."
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "price": {
            "type": "object",
            "description": "Item prices.",
            "nullable": true,
            "properties": {
              "amount": {
                "type": "string",
                "example": "100.99",
                "description": "Discounted item price."
              },
              "amount_without_discount": {
                "type": "string",
                "example": "100.99",
                "description": "Item price."
              },
              "currency": {
                "type": "string",
                "example": "USD",
                "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
              }
            }
          },
          "virtual_prices": {
            "type": "array",
            "description": "Virtual prices.",
            "items": {
              "type": "object",
              "description": "Virtual price.",
              "properties": {
                "amount": {
                  "type": "integer",
                  "example": 100,
                  "description": "Discounted item price in virtual currency."
                },
                "amount_without_discount": {
                  "type": "integer",
                  "example": 200,
                  "description": "Item price."
                },
                "sku": {
                  "type": "string",
                  "example": "vc_test",
                  "description": "Virtual currency item SKU."
                },
                "is_default": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether price is default for item."
                },
                "image_url": {
                  "type": "string",
                  "example": "http://image.png",
                  "description": "Image of virtual currency."
                },
                "name": {
                  "type": "string",
                  "example": "SHOTGUN FOR TRUE RAIDERS",
                  "description": "Virtual currency name."
                },
                "type": {
                  "type": "string",
                  "example": "virtual_currency",
                  "description": "Virtual currency type."
                },
                "description": {
                  "type": "string",
                  "example": "Big Rocket - description",
                  "description": "Virtual currency description."
                }
              }
            }
          },
          "can_be_bought": {
            "$ref": "#/components/schemas/Can_be_bought"
          },
          "inventory_options": {
            "type": "object",
            "description": "Defines the inventory item options.",
            "properties": {
              "consumable": {
                "type": "object",
                "nullable": true,
                "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
                "properties": {
                  "usages_count": {
                    "type": "integer",
                    "example": 1,
                    "nullable": true,
                    "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
                  }
                }
              },
              "expiration_period": {
                "type": "object",
                "nullable": true,
                "description": "Defines the expiration properties if this is a expired item, or `null` if this is a non-expired item.",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "day",
                    "enum": [
                      "minute",
                      "hour",
                      "day",
                      "week",
                      "month",
                      "year"
                    ],
                    "description": "Defines type of item expiration."
                  },
                  "value": {
                    "type": "integer",
                    "example": 1,
                    "description": "Defines value for an expiration period."
                  }
                }
              }
            }
          },
          "virtual_item_type": {
            "type": "string",
            "example": "non-consumable",
            "description": "Type of virtual item.",
            "x-enumDescriptions": {
              "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
              "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
              "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
            },
            "enum": [
              "consumable",
              "non_consumable",
              "non_renewing_subscription"
            ]
          },
          "promotions": {
            "$ref": "#/components/schemas/Catalog_item_promotions"
          },
          "limits": {
            "$ref": "#/components/schemas/item-limit-response"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods-response"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes-response"
          },
          "vp_rewards": {
            "$ref": "#/components/schemas/client-item-value-point-reward"
          }
        }
      },
      "Virtual-Items-Currency_item-list": {
        "type": "object",
        "properties": {
          "has_more": {
            "$ref": "#/components/schemas/Pagination_has-more"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_item"
            }
          }
        }
      },
      "Virtual-Items-Currency_virtual-currency": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "integer"
          },
          "sku": {
            "type": "string",
            "example": "big_rocket",
            "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
          },
          "name": {
            "type": "string",
            "example": "Big Rocket",
            "description": "Item name."
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-response"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_client-attributes"
          },
          "type": {
            "type": "string",
            "example": "virtual_currency",
            "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`."
          },
          "description": {
            "type": "string",
            "example": "Crystals - description",
            "description": "Item description."
          },
          "image_url": {
            "type": "string",
            "example": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
            "description": "Image URL."
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "price": {
            "type": "object",
            "description": "Item prices.",
            "nullable": true,
            "properties": {
              "amount": {
                "type": "string",
                "example": "100.99",
                "description": "Discounted item price."
              },
              "amount_without_discount": {
                "type": "string",
                "example": "100.99",
                "description": "Item price."
              },
              "currency": {
                "type": "string",
                "example": "USD",
                "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
              }
            }
          },
          "virtual_prices": {
            "type": "array",
            "example": [
              {
                "amount": 100,
                "sku": "com.xsolla.crystals_1",
                "is_default": true,
                "amount_without_discount": 100,
                "image_url": "http://image.png"
              }
            ],
            "description": "Virtual prices.",
            "items": {
              "type": "object",
              "description": "Virtual price.",
              "properties": {
                "amount": {
                  "type": "integer",
                  "example": 100,
                  "description": "Discounted item price in virtual currency."
                },
                "amount_without_discount": {
                  "type": "integer",
                  "example": 200,
                  "description": "Item price."
                },
                "sku": {
                  "type": "string",
                  "example": "com.xsolla.vc_1",
                  "description": "Virtual currency item SKU."
                },
                "is_default": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether price is default for item."
                },
                "image_url": {
                  "type": "string",
                  "example": "http://image.png",
                  "description": "Image of virtual currency."
                },
                "name": {
                  "type": "string",
                  "example": "Crystals",
                  "description": "Virtual currency name."
                },
                "type": {
                  "type": "string",
                  "example": "virtual_currency",
                  "description": "Virtual currency type."
                },
                "description": {
                  "type": "string",
                  "example": "Crystals - description",
                  "description": "Virtual currency description."
                }
              }
            }
          },
          "can_be_bought": {
            "$ref": "#/components/schemas/Can_be_bought"
          },
          "inventory_options": {
            "type": "object",
            "description": "Defines the inventory item options.",
            "properties": {
              "consumable": {
                "type": "object",
                "nullable": true,
                "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
                "properties": {
                  "usages_count": {
                    "type": "integer",
                    "example": 1,
                    "nullable": true,
                    "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
                  }
                }
              },
              "expiration_period": {
                "type": "object",
                "nullable": true,
                "description": "Defines the expiration properties if this is a expired item, or `null` if this is a non-expired item.",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "day",
                    "enum": [
                      "minute",
                      "hour",
                      "day",
                      "week",
                      "month",
                      "year"
                    ],
                    "description": "Defines type of item expiration."
                  },
                  "value": {
                    "type": "integer",
                    "example": 1,
                    "description": "Defines value for an expiration period."
                  }
                }
              }
            }
          },
          "promotions": {
            "$ref": "#/components/schemas/Catalog_item_promotions"
          },
          "limits": {
            "$ref": "#/components/schemas/Catalog_item_limits"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods-response"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes-response"
          },
          "vp_rewards": {
            "type": "array"
          }
        }
      },
      "Virtual-Items-Currency_virtual-currency-list": {
        "type": "object",
        "properties": {
          "has_more": {
            "$ref": "#/components/schemas/Pagination_has-more"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_virtual-currency"
            }
          }
        }
      },
      "Virtual-Items-Currency_virtual-currency-package": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "integer"
          },
          "sku": {
            "type": "string",
            "example": "crystal-pack",
            "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
          },
          "name": {
            "type": "string",
            "example": "Crystal Pack",
            "description": "Item name."
          },
          "groups": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_admin-groups-response"
          },
          "attributes": {
            "$ref": "#/components/schemas/Virtual-Items-Currency_client-attributes"
          },
          "type": {
            "type": "string",
            "example": "bundle",
            "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`."
          },
          "bundle_type": {
            "type": "string",
            "example": "virtual_currency_package",
            "description": "Type of bundle: `standard`/`virtual_currency_package`."
          },
          "description": {
            "type": "string",
            "example": "Crystal Pack Description",
            "description": "Item description."
          },
          "image_url": {
            "type": "string",
            "example": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
            "description": "Image URL."
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "price": {
            "type": "object",
            "description": "Item prices.",
            "properties": {
              "amount": {
                "type": "string",
                "example": "100.99",
                "description": "Discounted item price."
              },
              "amount_without_discount": {
                "type": "string",
                "example": "100.99",
                "description": "Item price."
              },
              "currency": {
                "type": "string",
                "example": "USD",
                "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
              }
            }
          },
          "virtual_prices": {
            "type": "array",
            "description": "Virtual prices.",
            "items": {
              "type": "object",
              "description": "Virtual price.",
              "properties": {
                "amount": {
                  "type": "integer",
                  "example": 100,
                  "description": "Discounted item price in virtual currency."
                },
                "amount_without_discount": {
                  "type": "integer",
                  "example": 200,
                  "description": "Item price."
                },
                "sku": {
                  "type": "string",
                  "example": "vc_test",
                  "description": "Virtual currency item SKU."
                },
                "is_default": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether price is default for item."
                },
                "image_url": {
                  "type": "string",
                  "example": "http://image.png",
                  "description": "Image of virtual currency."
                },
                "name": {
                  "type": "string",
                  "example": "SHOTGUN FOR TRUE RAIDERS",
                  "description": "Virtual currency name."
                },
                "type": {
                  "type": "string",
                  "example": "virtual_currency",
                  "description": "Virtual currency type."
                },
                "description": {
                  "type": "string",
                  "example": "Big Rocket - description",
                  "description": "Virtual currency description."
                }
              }
            }
          },
          "can_be_bought": {
            "$ref": "#/components/schemas/Can_be_bought"
          },
          "content": {
            "type": "array",
            "example": [
              {
                "description": "Crystal Pack - short description",
                "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                "sku": "com.xsolla.crystal_pack_1",
                "name": "Crystal Pack",
                "type": "virtual_currency",
                "quantity": 100,
                "inventory_options": {
                  "consumable": {
                    "usages_count": 1
                  },
                  "expiration_period": null
                }
              }
            ],
            "description": "Virtual currency package content.",
            "items": {
              "type": "object",
              "description": "Virtual currency in a package.",
              "properties": {
                "item_id": {
                  "type": "integer"
                },
                "sku": {
                  "type": "string",
                  "example": "com.xsolla.big_rocket_1",
                  "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, dashes, and underscores."
                },
                "name": {
                  "type": "string",
                  "example": "Big Rocket",
                  "description": "Item name."
                },
                "type": {
                  "type": "string",
                  "example": "virtual_currency",
                  "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`."
                },
                "description": {
                  "type": "string",
                  "example": "Big Rocket - description",
                  "description": "Item description."
                },
                "image_url": {
                  "type": "string",
                  "example": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                  "description": "Image URL."
                },
                "quantity": {
                  "type": "integer",
                  "example": 250,
                  "description": "Quantity of virtual currency in package."
                },
                "limits": {
                  "$ref": "#/components/schemas/Catalog_item_limits"
                },
                "inventory_options": {
                  "type": "object",
                  "description": "Defines the inventory item options.",
                  "properties": {
                    "consumable": {
                      "type": "object",
                      "nullable": true,
                      "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
                      "properties": {
                        "usages_count": {
                          "type": "integer",
                          "example": 1,
                          "nullable": true,
                          "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
                        }
                      }
                    },
                    "expiration_period": {
                      "type": "object",
                      "nullable": true,
                      "description": "Defines the expiration properties if this is a expired item, or `null` if this is a non-expired item.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "day",
                          "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year"
                          ],
                          "description": "Defines type of expiration of an item."
                        },
                        "value": {
                          "type": "integer",
                          "example": 1,
                          "description": "Defines value for expiration period."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "promotions": {
            "$ref": "#/components/schemas/Catalog_item_promotions"
          },
          "limits": {
            "$ref": "#/components/schemas/Catalog_item_limits"
          },
          "periods": {
            "$ref": "#/components/schemas/item-periods-response"
          },
          "custom_attributes": {
            "$ref": "#/components/schemas/item-custom-attributes-response"
          },
          "vp_rewards": {
            "type": "array"
          }
        }
      },
      "Virtual-Items-Currency_virtual-currency-packages": {
        "type": "object",
        "properties": {
          "has_more": {
            "$ref": "#/components/schemas/Pagination_has-more"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_virtual-currency-package"
            }
          }
        }
      },
      "Regions_region_id": {
        "type": "integer",
        "description": "Region ID. Unique region identifier within the project.",
        "example": 42
      },
      "Regions_name": {
        "type": "object",
        "description": "Name of region. Should contain key/value pairs where key is a locale with the \"^[a-z]{2}-[A-Z]{2}$\" format, the value is string.\n",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en-US": "Asia",
          "de-DE": "Asien"
        },
        "default": {
          "en-US": "Asia",
          "de-DE": "Asien"
        }
      },
      "Regions_200-region-short-model": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Regions_region_id"
          },
          "name": {
            "$ref": "#/components/schemas/Regions_name"
          }
        }
      },
      "Regions_countries": {
        "type": "array",
        "description": "List of countries to be added in a region.\n<br>Two-letter uppercase country code per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\nCheck the documentation for detailed information about [countries supported by Xsolla](https://developers.xsolla.com/doc/shop-builder/references/supported-countries/).\n<br>Example: `[\"JP\", \"CN\", \"VN\"]`\n",
        "items": {
          "type": "string"
        }
      },
      "Regions_200-region-model": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Regions_region_id"
          },
          "name": {
            "$ref": "#/components/schemas/Regions_name"
          },
          "countries": {
            "$ref": "#/components/schemas/Regions_countries"
          }
        },
        "example": {
          "value": {
            "id": 44,
            "name": {
              "en-US": "Asia",
              "de-DE": "Asien"
            },
            "countries": [
              "JP",
              "CN",
              "VN"
            ]
          }
        }
      },
      "User-limit_user-external-id": {
        "description": "User external ID.",
        "type": "string",
        "minLength": 1,
        "pattern": "^\\S+$"
      },
      "User-limit_user": {
        "type": "object",
        "properties": {
          "user_external_id": {
            "$ref": "#/components/schemas/User-limit_user-external-id"
          }
        },
        "required": [
          "user_external_id"
        ]
      },
      "User-limit_user_flexible": {
        "type": "object",
        "properties": {
          "user_external_id": {
            "$ref": "#/components/schemas/User-limit_user-external-id"
          }
        },
        "nullable": true
      },
      "User-limit-item": {
        "type": "object",
        "properties": {
          "per_user": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "example": 10,
                "description": "The maximum number of items a user can buy."
              },
              "available": {
                "type": "integer",
                "example": 9,
                "description": "The remaining number of items available for the user to purchase."
              }
            }
          }
        }
      },
      "User-limit_available_flexible": {
        "type": "integer",
        "minimum": 0,
        "description": "Remaining number of items or promotion uses available to the user within the limit applied."
      },
      "User-limit_available": {
        "type": "integer",
        "minimum": 1,
        "description": "Remaining number of items or promotion uses available to the user within the limit applied."
      },
      "User-limit-promotion": {
        "type": "object",
        "properties": {
          "per_user": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "example": 10,
                "description": "The maximum number of times a user can use a promotion."
              },
              "available": {
                "type": "integer",
                "example": 9,
                "description": "The remaining number of times a user can use a promotion."
              }
            }
          }
        }
      },
      "User-limit-promo-code": {
        "type": "object",
        "properties": {
          "per_user": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "example": 10,
                "description": "The maximum number of times a user can use a promo code."
              },
              "available": {
                "type": "integer",
                "example": 9,
                "description": "The remaining number of times a user can use a promo code."
              }
            }
          }
        }
      },
      "Promo-code-user-limit_available_flexible": {
        "type": "integer",
        "minimum": 0,
        "description": "Remaining number of the promo code uses available to the user within the limit applied."
      },
      "Promo-code-user-limit_available": {
        "type": "integer",
        "minimum": 1,
        "description": "Remaining number of the promo code uses available to the user within the limit applied."
      },
      "User-limit-coupon": {
        "type": "object",
        "properties": {
          "per_user": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "example": 10,
                "description": "The maximum number of times a user can use a coupon."
              },
              "available": {
                "type": "integer",
                "example": 9,
                "description": "The remaining number of times a user can use a coupon."
              }
            }
          }
        }
      },
      "Coupon-user-limit_available_flexible": {
        "type": "integer",
        "minimum": 0,
        "description": "Remaining number of the coupon uses available to the user within the limit applied."
      },
      "Coupon-user-limit_available": {
        "type": "integer",
        "minimum": 1,
        "description": "Remaining number of the coupon uses available to the user within the limit applied."
      },
      "Code-limit-promo-code": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/Promotions_coupon_code"
          },
          "per_code": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "description": "The maximum number of times a promo code can be used."
              },
              "available": {
                "type": "integer",
                "description": "The remaining number of times promo code can be used."
              },
              "used": {
                "type": "integer",
                "description": "The number of times a promo code is used."
              },
              "reserved": {
                "type": "integer",
                "description": "The number of times a promo code is reserved."
              }
            }
          }
        }
      },
      "Value-points-item-model": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[a-zA-Z0-9_\\-–.]*$",
            "example": "booster_mega_1",
            "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "media_list": {
            "type": "array",
            "example": [
              {
                "type": "image",
                "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
              }
            ],
            "description": "Item's additional assets such as screenshots, gameplay video and so on.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "image",
                    "video"
                  ],
                  "example": "image",
                  "description": "Type of media: `image`/`video`."
                },
                "url": {
                  "type": "string",
                  "example": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg",
                  "description": "Resource file."
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Type of item."
          },
          "image_url": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "example": 1,
            "description": "Defines arrangement order."
          },
          "is_clan": {
            "$ref": "#/components/schemas/is_clan"
          }
        }
      },
      "media_list": {
        "type": "array",
        "example": [
          {
            "type": "image",
            "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
          }
        ],
        "description": "Item's additional assets such as screenshots, gameplay video and so on.",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "image",
                "video"
              ],
              "example": "image",
              "description": "Type of media: `image`/`video`."
            },
            "url": {
              "type": "string",
              "example": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg",
              "description": "Resource file."
            }
          }
        }
      },
      "order": {
        "type": "integer",
        "example": 1,
        "description": "Defines arrangement order."
      },
      "admin_value_points-create": {
        "properties": {
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Common_admin-image_url"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "media_list": {
            "$ref": "#/components/schemas/media_list"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "sku": {
            "$ref": "#/components/schemas/sku"
          },
          "is_clan": {
            "$ref": "#/components/schemas/is_clan"
          }
        },
        "type": "object",
        "required": [
          "sku",
          "name"
        ]
      },
      "422-rc-vp-invalid-request": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-1102]: Unprocessable Entity. The property `property_name` is required"
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          }
        }
      },
      "Value-point-item-model": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[a-zA-Z0-9_\\-–.]*$",
            "example": "booster_mega_1",
            "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "media_list": {
            "type": "array",
            "example": [
              {
                "type": "image",
                "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
              }
            ],
            "description": "Item's additional assets such as screenshots, gameplay video and so on.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "image",
                    "video"
                  ],
                  "example": "image",
                  "description": "Type of media: `image`/`video`."
                },
                "url": {
                  "type": "string",
                  "example": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg",
                  "description": "Resource file."
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Type of item."
          },
          "image_url": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "example": 1,
            "description": "Defines arrangement order."
          },
          "can_delete": {
            "type": "boolean",
            "description": "Whether a value point can be deleted. If `false`, you can not delete the value point as there are one or more reward chains in which it is used. To delete the value point, first [delete](https://developers.xsolla.com/api/shop-builder/operation/admin-delete-reward-chain/) all reward chains containing it.\n\nIf `true`, the value point is not used in any reward chain and you can [delete](https://developers.xsolla.com/api/shop-builder/operation/admin-delete-value-point/) it.\n"
          },
          "is_clan": {
            "$ref": "#/components/schemas/is_clan"
          }
        }
      },
      "admin-item-value-point-reward": {
        "type": "object",
        "properties": {
          "item_id": {
            "$ref": "#/components/schemas/item_id"
          },
          "sku": {
            "$ref": "#/components/schemas/sku"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of value points."
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/Common_admin-image_url"
          }
        }
      },
      "item-value-point-reward-set": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sku": {
              "$ref": "#/components/schemas/sku"
            },
            "amount": {
              "type": "integer",
              "description": "Amount of value points."
            }
          },
          "required": [
            "sku",
            "amount"
          ]
        }
      },
      "item-value-point-reward-set-for-patch": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sku": {
              "$ref": "#/components/schemas/sku"
            },
            "amount": {
              "type": "integer",
              "description": "Amount of value points.",
              "minimum": 0
            }
          },
          "required": [
            "sku",
            "amount"
          ],
          "maxItems": 100
        }
      },
      "image_url": {
        "type": "string",
        "example": "https://image.example.com",
        "description": "Image URL.",
        "nullable": true
      },
      "date_start": {
        "type": "string",
        "format": "date-time",
        "example": "2020-04-15T18:16:00+05:00",
        "description": "Date when your reward chain starts."
      },
      "date_end": {
        "type": "string",
        "nullable": true,
        "format": "date-time",
        "example": "2020-04-15T18:16:00+05:00",
        "description": "Date when your reward chain promotion ends. Can be `null`. If `date_end` is `null`, the reward chain will be unlimited by time."
      },
      "clan_type": {
        "type": "string",
        "description": "Clan type.",
        "enum": [
          "clan",
          "guild",
          "faction",
          "community",
          "team",
          "squad",
          "alliance",
          "association",
          "coalition",
          "union",
          "group",
          "civilizations",
          "dynasty",
          "order",
          "league",
          "brotherhood",
          "kingdom",
          "organization",
          "house",
          "empire",
          "tribe",
          "cartel",
          null
        ],
        "nullable": true
      },
      "top_contributors": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Rocket",
            "description": "User ID that is sent to Xsolla during the authorization process. The user ID is used to link the user with your Xsolla Login project and is displayed as a nickname. If you are using authorization by [user ID](https://developers.xsolla.com/solutions/web-shop/create-web-shop/set-up-authentication/?tabs=100-UserIDAuth&link=100-UserIDAuth), we recommend passing the <code>name</code> parameter in [the webhook response](https://developers.xsolla.com/webhooks/operation/user-validation-in-webshop/). This parameter contains the username that will be used as a nickname."
          },
          "contributed_amount": {
            "type": "integer",
            "example": 100,
            "description": "Amount of value points earned by the user."
          }
        },
        "nullable": true
      },
      "value-point-description": {
        "type": "string",
        "nullable": true,
        "description": "Value point description."
      },
      "value-point-long-description": {
        "type": "string",
        "nullable": true,
        "description": "Value point long description."
      },
      "interval_type_weekly": {
        "type": "string",
        "description": "Frequency of the recurrent reset of the reward chain.",
        "enum": [
          "weekly"
        ]
      },
      "reset_next_date": {
        "type": "integer",
        "description": "Calculated date and time when the reward chain will be reset next time <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">(Unix Timestamp)</a>. <br><br> For example, the reward chain is reset monthly, starting from March 1, 2024, at 01:00 Kuala Lumpur time (GMT+8). The date and time of the next reward chain reset, April 1, 2024 at 01:00 Kuala Lumpur time (GMT+8), which equals March 31, 2024 17:00 GMT+0 or `1711904400000` in the Unix Timestamp format. <br><br> Example: `1711904400000`"
      },
      "recurrent_schedule_client_side": {
        "type": "object",
        "nullable": true,
        "description": "Recurrent reset period of the reward chain.",
        "properties": {
          "interval_type": {
            "$ref": "#/components/schemas/interval_type_weekly"
          },
          "reset_next_date": {
            "$ref": "#/components/schemas/reset_next_date"
          }
        }
      },
      "popup_header-two-letter-locale": {
        "type": "object",
        "description": "Object with localizations for header of a clan reward chain tooltip popup window. Two-letter lowercase [language code](https://developers.xsolla.com/doc/pay-station/features/localization/).",
        "nullable": true,
        "properties": {
          "en": {
            "type": "string",
            "nullable": true,
            "example": "How to unlock rewards"
          },
          "ar": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "bg": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "cn": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "cs": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "de": {
            "type": "string",
            "nullable": true,
            "example": "Wie man Belohnungen freischaltet"
          },
          "es": {
            "type": "string",
            "nullable": true,
            "example": "Cómo desbloquear recompensas"
          },
          "fr": {
            "type": "string",
            "nullable": true,
            "example": "Comment débloquer des récompenses"
          },
          "he": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "it": {
            "type": "string",
            "nullable": true,
            "example": "Come sbloccare ricompense"
          },
          "ja": {
            "type": "string",
            "nullable": true,
            "example": "報酬をアンロックする方法"
          },
          "ko": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "pl": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "pt": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "ro": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "ru": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "th": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "tr": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "tw": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "vi": {
            "type": "string",
            "nullable": true,
            "example": null
          }
        }
      },
      "popup_instruction-two-letter-locale": {
        "type": "object",
        "description": "Object with localizations for instruction of a clan reward chain tooltip popup window. Two-letter lowercase [language code](https://developers.xsolla.com/doc/pay-station/features/localization/).",
        "nullable": true,
        "properties": {
          "en": {
            "type": "string",
            "nullable": true,
            "example": "You must be a clan member to get clan rewards. You join a clan when a clan member invites you to the clan, and you accept the invite. You can also create your own clan."
          },
          "ar": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "bg": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "cn": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "cs": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "de": {
            "type": "string",
            "nullable": true,
            "example": "Du musst ein Clanmitglied sein, um Clananreize zu erhalten. Du trittst einem Clan bei, wenn ein Clanmitglied dich einlädt, und du die Einladung annimmst. Du kannst auch deinen eigenen Clan erstellen."
          },
          "es": {
            "type": "string",
            "nullable": true,
            "example": "Debes ser miembro de un clan para obtener las recompensas del clan. Te unes a un clan cuando un miembro del clan te invita al clan y aceptas la invitación. También puedes crear tu propio clan."
          },
          "fr": {
            "type": "string",
            "nullable": true,
            "example": "Vous devez être membre d'un clan pour obtenir les récompenses du clan. Vous rejoignez un clan lorsque qu'un membre du clan vous invite au clan et que vous acceptez l'invitation. Vous pouvez également créer votre propre clan."
          },
          "he": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "it": {
            "type": "string",
            "nullable": true,
            "example": "Devi essere un membro del clan per ottenere le ricompense del clan. Ti unisci a un clan quando un membro del clan ti invita al clan e accetti l'invito. Puoi anche creare il tuo clan."
          },
          "ja": {
            "type": "string",
            "nullable": true,
            "example": "クランリワードを受け取るには、クランメンバーでなければなりません。 クランメンバーがあなたをクランに招待し、招待を受け入れると、クランに参加できます。 あなた自身のクランを作成することもできます。"
          },
          "ko": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "pl": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "pt": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "ro": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "ru": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "th": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "tr": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "tw": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "vi": {
            "type": "string",
            "nullable": true,
            "example": null
          }
        }
      },
      "popup_image_url": {
        "type": "string",
        "example": "https://image.example.com",
        "description": "Image for clan reward chain tooltip popup window.",
        "format": "uri",
        "nullable": true
      },
      "client-reward-chain-item-model": {
        "type": "object",
        "properties": {
          "reward_chain_id": {
            "type": "integer",
            "example": 9,
            "description": "Reward chain ID."
          },
          "name": {
            "type": "string",
            "example": "Weekly quest",
            "description": "Reward chain name."
          },
          "description": {
            "type": "string",
            "example": "Major weekly quest",
            "description": "Reward chain description.",
            "nullable": true
          },
          "long_description": {
            "type": "string",
            "example": "You can get a lot of additional items just by shopping during the week",
            "description": "Reward chain long description.",
            "nullable": true
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "date_start": {
            "$ref": "#/components/schemas/date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/date_end"
          },
          "clan_type": {
            "$ref": "#/components/schemas/clan_type"
          },
          "top_contributors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/top_contributors"
            }
          },
          "value_point": {
            "type": "object",
            "properties": {
              "sku": {
                "$ref": "#/components/schemas/value-point-sku"
              },
              "name": {
                "$ref": "#/components/schemas/value-point-name"
              },
              "image_url": {
                "$ref": "#/components/schemas/Common_admin-image_url"
              },
              "description": {
                "$ref": "#/components/schemas/value-point-description"
              },
              "long_description": {
                "$ref": "#/components/schemas/value-point-long-description"
              },
              "amount": {
                "$ref": "#/components/schemas/value-point-amount"
              },
              "is_clan": {
                "$ref": "#/components/schemas/is_clan"
              }
            }
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Reward chain step.",
              "properties": {
                "step_id": {
                  "type": "integer",
                  "example": 10,
                  "description": "Step ID."
                },
                "name": {
                  "type": "string",
                  "example": "Level 1",
                  "description": "Step name."
                },
                "is_claimed": {
                  "type": "boolean",
                  "example": false,
                  "description": "Whether the step reward is claimed."
                },
                "image_url": {
                  "$ref": "#/components/schemas/Common_admin-image_url"
                },
                "price": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "integer",
                      "example": 100,
                      "description": "The number of value points that a user claim for the step."
                    }
                  }
                },
                "reward": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "$ref": "#/components/schemas/sku"
                      },
                      "name": {
                        "type": "string",
                        "example": "Super box",
                        "description": "Item name."
                      },
                      "type": {
                        "type": "string",
                        "example": "bundle",
                        "description": "Type of item."
                      },
                      "description": {
                        "type": "string",
                        "example": "Super box with items",
                        "description": "Item description."
                      },
                      "image_url": {
                        "$ref": "#/components/schemas/Common_admin-image_url"
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 2,
                        "description": "Item quantity."
                      }
                    }
                  }
                }
              }
            }
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/recurrent_schedule_client_side"
          },
          "popup_header": {
            "$ref": "#/components/schemas/popup_header-two-letter-locale"
          },
          "popup_instruction": {
            "$ref": "#/components/schemas/popup_instruction-two-letter-locale"
          },
          "popup_image_url": {
            "$ref": "#/components/schemas/popup_image_url"
          }
        }
      },
      "offer_chain_date_start": {
        "type": "string",
        "format": "date-time",
        "example": "2020-04-15T18:16:00+05:00",
        "description": "Date when the offer chain starts."
      },
      "offer_chain_date_end": {
        "type": "string",
        "nullable": true,
        "format": "date-time",
        "example": "2020-04-15T18:16:00+05:00",
        "description": "Date when the offer chain ends. Can be `null`. If `date_end` is `null`, the offer chain will not have a time limit."
      },
      "offer_chain_step_number": {
        "type": "integer",
        "example": 2,
        "description": "Step number.",
        "nullable": false,
        "minimum": 1
      },
      "offer_chain_is_free": {
        "type": "boolean",
        "description": "Indicates whether the offer chain step is free:<ul><li>If <code>true</code>, the step must be claimed using the <a href=\"/api/shop-builder/operation/claim-user-offer-chain-step-reward\">Claim free offer chain step</a> call.</li><li>If <code>false</code>, it must be purchased using the <a href=\"/api/shop-builder/operation/order-user-offer-chain-step-reward\">Create order for paid offer chain step</a> call.</li></ul>"
      },
      "offer_chain_step_price_amount": {
        "type": "number",
        "example": 99.99,
        "description": "Step price in real currency."
      },
      "offer_chain_step_price_currency": {
        "type": "string",
        "example": "USD",
        "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
      },
      "offer_chain_step_price": {
        "type": "object",
        "nullable": true,
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/offer_chain_step_price_amount"
          },
          "currency": {
            "$ref": "#/components/schemas/offer_chain_step_price_currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "client-offer-chain-item-model": {
        "type": "object",
        "properties": {
          "item_id": {
            "$ref": "#/components/schemas/item_id"
          },
          "sku": {
            "$ref": "#/components/schemas/sku"
          },
          "type": {
            "$ref": "#/components/schemas/item_type"
          },
          "name": {
            "type": "string",
            "description": "Item name."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Item description."
          },
          "bundle_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "standard",
              "virtual_currency_package"
            ]
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "quantity": {
            "type": "integer",
            "description": "Amount of items.",
            "minimum": 1,
            "example": 1
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "content": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/client-offer-chain-item-model"
            }
          }
        }
      },
      "client-offer-chain-step-model": {
        "type": "object",
        "description": "Offer chain step.",
        "properties": {
          "step_number": {
            "$ref": "#/components/schemas/offer_chain_step_number"
          },
          "is_free": {
            "$ref": "#/components/schemas/offer_chain_is_free"
          },
          "is_claimed": {
            "type": "boolean",
            "example": false,
            "description": "Indicates whether the step reward is claimed or purchased."
          },
          "step_price": {
            "$ref": "#/components/schemas/offer_chain_step_price"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/client-offer-chain-item-model"
            }
          },
          "step_vp_rewards": {
            "type": "array",
            "nullable": true,
            "description": "An array of value points from the reward system, granted as a reward.",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "$ref": "#/components/schemas/item_id"
                },
                "sku": {
                  "$ref": "#/components/schemas/value-point-sku"
                },
                "amount": {
                  "$ref": "#/components/schemas/value-point-amount"
                },
                "name": {
                  "$ref": "#/components/schemas/value-point-name"
                },
                "image_url": {
                  "$ref": "#/components/schemas/Common_admin-image_url"
                },
                "is_clan": {
                  "$ref": "#/components/schemas/is_clan"
                }
              }
            }
          },
          "step_loyalty_rewards": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "First Loyalty Point",
                  "description": "Loyalty point name."
                },
                "sku": {
                  "type": "string",
                  "example": "0c745ef0-4243-46e1-aa90-54dee07da622",
                  "description": "Loyalty point SKU."
                },
                "description": {
                  "type": "string",
                  "example": "First Loyalty Point Desc",
                  "description": "Loyalty point description."
                },
                "image_url": {
                  "$ref": "#/components/schemas/image_url"
                },
                "amount": {
                  "type": "integer",
                  "example": 1,
                  "description": "Amount of loyalty points."
                }
              }
            }
          }
        }
      },
      "offer_chain_interval_type_weekly": {
        "type": "string",
        "description": "Frequency of the offer chain reset.",
        "enum": [
          "weekly"
        ]
      },
      "offer_chain_reset_next_date": {
        "type": "integer",
        "description": "The calculated date and time when the offer chain will be reset next time, in <a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">Unix Timestamp</a> format. <br><br> For example, the monthly offer chain reset starts on March 1, 2024, at 01:00 Kuala Lumpur time (GMT+8). The following reset occurs on April 1, 2024 at 01:00 Kuala Lumpur time (GMT+8), which corresponds to March 31, 2024 17:00 GMT+0 or `1711904400000` in the Unix Timestamp format. <br><br> Example: `1711904400000`"
      },
      "offer_chain_recurrent_schedule_client_side": {
        "type": "object",
        "nullable": true,
        "description": "Reset period of the offer chain.",
        "properties": {
          "interval_type": {
            "$ref": "#/components/schemas/offer_chain_interval_type_weekly"
          },
          "reset_next_date": {
            "$ref": "#/components/schemas/offer_chain_reset_next_date"
          }
        }
      },
      "client-offer-chain-model": {
        "type": "object",
        "description": "An offer chain.",
        "properties": {
          "id": {
            "type": "integer",
            "example": 9,
            "description": "Offer chain ID."
          },
          "name": {
            "type": "string",
            "example": "Weekly quest",
            "description": "Offer chain name."
          },
          "description": {
            "type": "string",
            "example": "Major weekly quest",
            "description": "Offer chain description.",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "date_start": {
            "$ref": "#/components/schemas/offer_chain_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/offer_chain_date_end"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/client-offer-chain-step-model"
            }
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/offer_chain_recurrent_schedule_client_side"
          },
          "next_step_number": {
            "type": "integer",
            "description": "Next offer chain step number. `null` if the offer chain is completed.",
            "example": 1,
            "nullable": true
          }
        }
      },
      "offer-chain-error-model": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 422
          },
          "errorCode": {
            "type": "integer",
            "example": 1102
          },
          "errorMessage": {
            "type": "string",
            "example": "[0401-1102]: Unprocessable Entity. The property `property_name` is required"
          },
          "transactionId": {
            "type": "string",
            "example": "x-x-x-x-transactionId-mock-x-x-x"
          },
          "errorMessageExtended": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "reward_chain_id": {
        "type": "integer",
        "example": 9,
        "description": "Unique reward chain ID."
      },
      "day_of_week": {
        "type": "integer",
        "description": "Day of the week when the reward chain is reset, where `1` is Monday and `7` is Sunday.",
        "minimum": 1,
        "maximum": 7
      },
      "time": {
        "type": "string",
        "description": "Time when the reward chain is reset in the desired time zone (rounding to hours). <br><br> For example, the set time for the reward chain reset is 01:00 for the Kuala Lumpur time zone (GMT+8). In this case, the value of the `time` parameter is `01:00:00+08:00`.",
        "pattern": "((0[0-9]|1[0-9]|2[0-3]):00:00)(\\+|-)(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])",
        "example": "01:00:00+08:00"
      },
      "displayable_reset_start_date": {
        "description": "Date and time of the first reset of the reward chain. <br><br> For example, the date and time of the first reset of the reward chain is March 1, 2024, at 01:00 Kuala Lumpur time, or `2024-03-01T01:00:00+08:00` in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format. <br><br> Example: `2024-03-01T01:00:00+08:00`",
        "type": "string",
        "format": "date-time"
      },
      "displayable_reset_next_date": {
        "description": "Calculated date and time when the reward chain will be reset next time <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">(ISO 8601)</a>. <br><br> For example, the reward chain is reset monthly, starting from March 1, 2024, at 01:00 Kuala Lumpur time. The date and time of the next reward chain reset: April 1, 2024 at 01:00 Kuala Lumpur time, which equals `2024-04-01T01:00:00+08:00` in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format. <br><br> Example: `2024-04-01T01:00:00+08:00`",
        "type": "string",
        "format": "date-time"
      },
      "interval_type_monthly": {
        "type": "string",
        "description": "Frequency of the recurrent reset of the reward chain.",
        "enum": [
          "monthly"
        ]
      },
      "day_of_month": {
        "type": "integer",
        "description": "Day of the month when the reward chain is reset. If the number of days in the month is less than the ordinal number of the specified day, then the reward chain reset occurs on the last day of the month.",
        "minimum": 1,
        "maximum": 31
      },
      "admin_recurrent_schedule": {
        "type": "object",
        "nullable": true,
        "description": "Recurrent reset period of the reward chain.",
        "oneOf": [
          {
            "type": "object",
            "title": "interval_type = weekly",
            "description": "Weekly reset of the reward chain.",
            "properties": {
              "interval_type": {
                "$ref": "#/components/schemas/interval_type_weekly"
              },
              "day_of_week": {
                "$ref": "#/components/schemas/day_of_week"
              },
              "time": {
                "$ref": "#/components/schemas/time"
              },
              "reset_next_date": {
                "$ref": "#/components/schemas/reset_next_date"
              },
              "displayable_reset_start_date": {
                "$ref": "#/components/schemas/displayable_reset_start_date"
              },
              "displayable_reset_next_date": {
                "$ref": "#/components/schemas/displayable_reset_next_date"
              }
            }
          },
          {
            "type": "object",
            "title": "interval_type = monthly",
            "description": "Monthly reset of the reward chain.",
            "properties": {
              "interval_type": {
                "$ref": "#/components/schemas/interval_type_monthly"
              },
              "day_of_month": {
                "$ref": "#/components/schemas/day_of_month"
              },
              "time": {
                "$ref": "#/components/schemas/time"
              },
              "reset_next_date": {
                "$ref": "#/components/schemas/reset_next_date"
              },
              "displayable_reset_start_date": {
                "$ref": "#/components/schemas/displayable_reset_start_date"
              },
              "displayable_reset_next_date": {
                "$ref": "#/components/schemas/displayable_reset_next_date"
              }
            }
          }
        ]
      },
      "is_always_visible": {
        "description": "Whether the reward chain is visible to all users:\n* If `true`, the chain is always displayed, regardless of the user's authentication status or attributes.\n* If `false`, the chain is displayed only if no suitable reward chain is found. For example, if the user is not authenticated or their attributes don’t match any personalized chain.\n\nApplies only in the context of personalized reward chains and is used if the `attribute_conditions` array is not passed.\n",
        "type": "boolean",
        "default": true,
        "example": true
      },
      "admin-get-reward-chain-item-basic-model": {
        "type": "object",
        "description": "A reward chain.",
        "properties": {
          "reward_chain_id": {
            "$ref": "#/components/schemas/reward_chain_id"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "date_start": {
            "$ref": "#/components/schemas/date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/date_end"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "value_point": {
            "type": "object",
            "properties": {
              "sku": {
                "$ref": "#/components/schemas/value-point-sku"
              },
              "name": {
                "$ref": "#/components/schemas/value-point-name"
              },
              "type": {
                "type": "string",
                "example": "value_point"
              },
              "image_url": {
                "$ref": "#/components/schemas/Common_admin-image_url"
              },
              "description": {
                "$ref": "#/components/schemas/value-point-description"
              },
              "long_description": {
                "$ref": "#/components/schemas/value-point-long-description"
              },
              "amount": {
                "$ref": "#/components/schemas/value-point-amount"
              },
              "is_clan": {
                "$ref": "#/components/schemas/is_clan"
              },
              "is_enabled": {
                "$ref": "#/components/schemas/is_enabled"
              },
              "media_list": {
                "$ref": "#/components/schemas/media_list"
              },
              "order": {
                "$ref": "#/components/schemas/order"
              }
            }
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/admin_recurrent_schedule"
          },
          "attribute_conditions": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-number"
              }
            ]
          },
          "is_always_visible": {
            "$ref": "#/components/schemas/is_always_visible"
          }
        }
      },
      "admin-get-reward-chain-item-clan-basic-model": {
        "allOf": [
          {
            "$ref": "#/components/schemas/admin-get-reward-chain-item-basic-model"
          },
          {
            "type": "object",
            "description": "Clan reward chain.",
            "properties": {
              "value_point": {
                "type": "object",
                "description": "A value point configured for a clan reward chain.",
                "properties": {
                  "sku": {
                    "$ref": "#/components/schemas/value-point-sku"
                  },
                  "name": {
                    "$ref": "#/components/schemas/value-point-name"
                  },
                  "type": {
                    "type": "string",
                    "example": "value_point"
                  },
                  "image_url": {
                    "$ref": "#/components/schemas/Common_admin-image_url"
                  },
                  "description": {
                    "$ref": "#/components/schemas/value-point-description"
                  },
                  "long_description": {
                    "$ref": "#/components/schemas/value-point-long-description"
                  },
                  "amount": {
                    "$ref": "#/components/schemas/value-point-amount"
                  },
                  "is_clan": {
                    "$ref": "#/components/schemas/is_clan"
                  },
                  "is_enabled": {
                    "$ref": "#/components/schemas/is_enabled"
                  },
                  "media_list": {
                    "$ref": "#/components/schemas/media_list"
                  },
                  "order": {
                    "$ref": "#/components/schemas/order"
                  }
                },
                "required": [
                  "sku"
                ]
              },
              "popup_header": {
                "$ref": "#/components/schemas/popup_header-two-letter-locale"
              },
              "popup_instruction": {
                "$ref": "#/components/schemas/popup_instruction-two-letter-locale"
              },
              "popup_image_url": {
                "$ref": "#/components/schemas/popup_image_url"
              },
              "clan_type": {
                "$ref": "#/components/schemas/clan_type"
              }
            }
          }
        ]
      },
      "step_price_amount": {
        "type": "integer",
        "example": 100,
        "description": "Step price in value points."
      },
      "reward_step_price": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/step_price_amount"
          }
        },
        "required": [
          "amount"
        ]
      },
      "reward_item_quantity": {
        "type": "integer",
        "example": 2,
        "description": "Item quantity."
      },
      "create_reward_step": {
        "type": "object",
        "description": "Reward chain step.",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "price": {
            "$ref": "#/components/schemas/reward_step_price"
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "reward": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/components/schemas/sku"
                },
                "quantity": {
                  "$ref": "#/components/schemas/reward_item_quantity"
                },
                "attribute_conditions": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-string"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-date"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-number"
                    }
                  ]
                }
              },
              "required": [
                "sku",
                "quantity"
              ]
            }
          }
        },
        "required": [
          "name",
          "price",
          "reward"
        ]
      },
      "recurrent_schedule_create_update": {
        "type": "object",
        "nullable": true,
        "description": "Recurrent reset period of the reward chain.",
        "oneOf": [
          {
            "type": "object",
            "title": "interval_type = weekly",
            "description": "Weekly type of reward chain refresh.",
            "properties": {
              "interval_type": {
                "$ref": "#/components/schemas/interval_type_weekly"
              },
              "day_of_week": {
                "$ref": "#/components/schemas/day_of_week"
              },
              "time": {
                "$ref": "#/components/schemas/time"
              }
            },
            "required": [
              "interval_type",
              "time",
              "day_of_week"
            ]
          },
          {
            "type": "object",
            "title": "interval_type = monthly",
            "description": "Monthly type of refresh of reward chain.",
            "properties": {
              "interval_type": {
                "$ref": "#/components/schemas/interval_type_monthly"
              },
              "day_of_month": {
                "$ref": "#/components/schemas/day_of_month"
              },
              "time": {
                "$ref": "#/components/schemas/time"
              }
            },
            "required": [
              "interval_type",
              "time",
              "day_of_month"
            ]
          }
        ]
      },
      "create-reward-chain-model": {
        "type": "object",
        "description": "A reward chain.",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "date_start": {
            "$ref": "#/components/schemas/date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/date_end"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "value_point": {
            "type": "object",
            "properties": {
              "sku": {
                "$ref": "#/components/schemas/sku"
              }
            },
            "required": [
              "sku"
            ]
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/create_reward_step"
            }
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/recurrent_schedule_create_update"
          },
          "attribute_conditions": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-number"
              }
            ]
          },
          "is_always_visible": {
            "$ref": "#/components/schemas/is_always_visible"
          }
        },
        "required": [
          "name",
          "value_point",
          "date_start",
          "steps",
          "is_enabled"
        ]
      },
      "create-clan-reward-chain-model": {
        "allOf": [
          {
            "$ref": "#/components/schemas/create-reward-chain-model"
          },
          {
            "type": "object",
            "description": "Clan reward chain.",
            "properties": {
              "value_point": {
                "type": "object",
                "description": "A value point configured for a clan reward chain.",
                "properties": {
                  "sku": {
                    "$ref": "#/components/schemas/sku"
                  }
                },
                "required": [
                  "sku"
                ]
              },
              "popup_header": {
                "$ref": "#/components/schemas/popup_header-two-letter-locale"
              },
              "popup_instruction": {
                "$ref": "#/components/schemas/popup_instruction-two-letter-locale"
              },
              "popup_image_url": {
                "$ref": "#/components/schemas/popup_image_url"
              },
              "clan_type": {
                "$ref": "#/components/schemas/clan_type"
              }
            },
            "required": [
              "name",
              "value_point",
              "date_start",
              "steps",
              "is_enabled",
              "popup_header",
              "popup_instruction"
            ]
          }
        ]
      },
      "step_id": {
        "type": "integer",
        "example": 10,
        "description": "Unique step ID.",
        "nullable": true
      },
      "reward_step_short": {
        "type": "object",
        "description": "Reward chain step.",
        "properties": {
          "step_id": {
            "$ref": "#/components/schemas/step_id"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "price": {
            "$ref": "#/components/schemas/reward_step_price"
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "reward": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/components/schemas/sku"
                },
                "quantity": {
                  "$ref": "#/components/schemas/reward_item_quantity"
                },
                "attribute_conditions": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-string"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-date"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-number"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "admin-get-reward-chain-item-full-model": {
        "type": "object",
        "description": "A reward chain.",
        "properties": {
          "reward_chain_id": {
            "$ref": "#/components/schemas/reward_chain_id"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "date_start": {
            "$ref": "#/components/schemas/date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/date_end"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "value_point": {
            "type": "object",
            "properties": {
              "sku": {
                "$ref": "#/components/schemas/sku"
              },
              "description": {
                "$ref": "#/components/schemas/description-localization-object"
              },
              "long_description": {
                "$ref": "#/components/schemas/long-description-localization-object"
              },
              "name": {
                "$ref": "#/components/schemas/name-localization-object"
              },
              "type": {
                "type": "string"
              },
              "is_enabled": {
                "$ref": "#/components/schemas/is_enabled"
              },
              "image_url": {
                "$ref": "#/components/schemas/image_url"
              },
              "media_list": {
                "$ref": "#/components/schemas/media_list"
              },
              "order": {
                "$ref": "#/components/schemas/order"
              },
              "is_clan": {
                "$ref": "#/components/schemas/is_clan"
              }
            }
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/reward_step_short"
            }
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/admin_recurrent_schedule"
          },
          "attribute_conditions": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-number"
              }
            ]
          },
          "is_always_visible": {
            "$ref": "#/components/schemas/is_always_visible"
          }
        }
      },
      "admin-get-reward-chain-item-clan-full-model": {
        "allOf": [
          {
            "$ref": "#/components/schemas/admin-get-reward-chain-item-full-model"
          },
          {
            "type": "object",
            "description": "Clan reward chain.",
            "properties": {
              "value_point": {
                "type": "object",
                "description": "A value point configured for a clan reward chain.",
                "properties": {
                  "sku": {
                    "$ref": "#/components/schemas/sku"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description-localization-object"
                  },
                  "long_description": {
                    "$ref": "#/components/schemas/long-description-localization-object"
                  },
                  "name": {
                    "$ref": "#/components/schemas/name-localization-object"
                  },
                  "type": {
                    "type": "string"
                  },
                  "is_enabled": {
                    "$ref": "#/components/schemas/is_enabled"
                  },
                  "image_url": {
                    "$ref": "#/components/schemas/image_url"
                  },
                  "media_list": {
                    "$ref": "#/components/schemas/media_list"
                  },
                  "order": {
                    "$ref": "#/components/schemas/order"
                  },
                  "is_clan": {
                    "$ref": "#/components/schemas/is_clan"
                  }
                },
                "required": [
                  "sku"
                ]
              },
              "popup_header": {
                "$ref": "#/components/schemas/popup_header-two-letter-locale"
              },
              "popup_instruction": {
                "$ref": "#/components/schemas/popup_instruction-two-letter-locale"
              },
              "popup_image_url": {
                "$ref": "#/components/schemas/popup_image_url"
              },
              "clan_type": {
                "$ref": "#/components/schemas/clan_type"
              },
              "top_contributors": {
                "$ref": "#/components/schemas/top_contributors"
              }
            }
          }
        ]
      },
      "modify_reward_step": {
        "type": "object",
        "description": "Reward chain step.",
        "properties": {
          "step_id": {
            "$ref": "#/components/schemas/step_id"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "price": {
            "$ref": "#/components/schemas/reward_step_price"
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "reward": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/components/schemas/sku"
                },
                "quantity": {
                  "$ref": "#/components/schemas/reward_item_quantity"
                },
                "attribute_conditions": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-string"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-date"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-number"
                    }
                  ]
                }
              },
              "required": [
                "sku",
                "quantity"
              ]
            }
          }
        },
        "required": [
          "name",
          "price",
          "reward",
          "step_id"
        ]
      },
      "update-reward-chain-model": {
        "type": "object",
        "description": "A reward chain.",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "long_description": {
            "$ref": "#/components/schemas/long-description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "date_start": {
            "$ref": "#/components/schemas/date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/date_end"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/modify_reward_step"
            }
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/recurrent_schedule_create_update"
          },
          "attribute_conditions": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/user-attribute_conditions-string"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-date"
              },
              {
                "$ref": "#/components/schemas/user-attribute_conditions-number"
              }
            ]
          },
          "is_always_visible": {
            "$ref": "#/components/schemas/is_always_visible"
          }
        },
        "required": [
          "name",
          "date_start",
          "steps",
          "is_enabled"
        ]
      },
      "update-clan-reward-chain-model": {
        "allOf": [
          {
            "$ref": "#/components/schemas/create-reward-chain-model"
          },
          {
            "type": "object",
            "description": "Clan reward chain.",
            "properties": {
              "popup_header": {
                "$ref": "#/components/schemas/popup_header-two-letter-locale"
              },
              "popup_instruction": {
                "$ref": "#/components/schemas/popup_instruction-two-letter-locale"
              },
              "popup_image_url": {
                "$ref": "#/components/schemas/popup_image_url"
              },
              "clan_type": {
                "$ref": "#/components/schemas/clan_type"
              }
            },
            "required": [
              "name",
              "date_start",
              "steps",
              "is_enabled",
              "popup_header",
              "popup_instruction"
            ]
          }
        ]
      },
      "offer_chain_id": {
        "type": "integer",
        "example": 9,
        "description": "Unique offer chain ID."
      },
      "offer_chain_day_of_week": {
        "type": "integer",
        "description": "Day of the week when the offer chain is reset, where `1` is Monday and `7` is Sunday.",
        "minimum": 1,
        "maximum": 7
      },
      "offer_chain_time": {
        "type": "string",
        "description": "The time when the offer chain is reset in the specified time zone (rounding to hours). <br><br> For example, the reset time is set to 01:00 for the Kuala Lumpur time zone (GMT+8), the value of the `time` parameter is `01:00:00+08:00`.",
        "pattern": "((0[0-9]|1[0-9]|2[0-3]):00:00)(\\+|-)(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])",
        "example": "01:00:00+08:00"
      },
      "offer_chain_displayable_reset_start_date": {
        "description": "The date and time of the first reset of the offer chain. <br><br> For example, the first reset scheduled for March 1, 2024, at 01:00 Kuala Lumpur time corresponds to `2024-03-01T01:00:00+08:00` in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format. <br><br> Example: `2024-03-01T01:00:00+08:00`",
        "type": "string",
        "format": "date-time"
      },
      "offer_chain_displayable_reset_next_date": {
        "description": "The calculated date and time when the offer chain will be reset next time per <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format. <br><br> For example, the monthly offer chain reset starts on March 1, 2024, at 01:00 Kuala Lumpur time. The following reset occurs on April 1, 2024 at 01:00 Kuala Lumpur time, which equals `2024-04-01T01:00:00+08:00` in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format. <br><br> Example: `2024-04-01T01:00:00+08:00`",
        "type": "string",
        "format": "date-time"
      },
      "offer_chain_interval_type_monthly": {
        "type": "string",
        "description": "Frequency of the offer chain reset.",
        "enum": [
          "monthly"
        ]
      },
      "offer_chain_day_of_month": {
        "type": "integer",
        "description": "The day of the month when the offer chain is reset. If a month has fewer days than the specified day, the reset will occur on the last day of the month.",
        "minimum": 1,
        "maximum": 31
      },
      "offer_chain_recurrent_schedule": {
        "type": "object",
        "nullable": true,
        "description": "Recurrent reset period of the offer chain.",
        "oneOf": [
          {
            "type": "object",
            "title": "interval_type = weekly",
            "description": "Weekly reset of the offer chain.",
            "nullable": true,
            "properties": {
              "interval_type": {
                "$ref": "#/components/schemas/offer_chain_interval_type_weekly"
              },
              "day_of_week": {
                "$ref": "#/components/schemas/offer_chain_day_of_week"
              },
              "time": {
                "$ref": "#/components/schemas/offer_chain_time"
              },
              "reset_next_date": {
                "$ref": "#/components/schemas/offer_chain_reset_next_date"
              },
              "displayable_reset_start_date": {
                "$ref": "#/components/schemas/offer_chain_displayable_reset_start_date"
              },
              "displayable_reset_next_date": {
                "$ref": "#/components/schemas/offer_chain_displayable_reset_next_date"
              }
            }
          },
          {
            "type": "object",
            "title": "interval_type = monthly",
            "description": "Monthly reset of the offer chain.",
            "properties": {
              "interval_type": {
                "$ref": "#/components/schemas/offer_chain_interval_type_monthly"
              },
              "day_of_month": {
                "$ref": "#/components/schemas/offer_chain_day_of_month"
              },
              "time": {
                "$ref": "#/components/schemas/offer_chain_time"
              },
              "reset_next_date": {
                "$ref": "#/components/schemas/offer_chain_reset_next_date"
              },
              "displayable_reset_start_date": {
                "$ref": "#/components/schemas/offer_chain_displayable_reset_start_date"
              },
              "displayable_reset_next_date": {
                "$ref": "#/components/schemas/offer_chain_displayable_reset_next_date"
              }
            }
          }
        ]
      },
      "admin-offer-chain-short-model": {
        "type": "object",
        "description": "An offer chain.",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/offer_chain_id"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "date_start": {
            "$ref": "#/components/schemas/offer_chain_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/offer_chain_date_end"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/offer_chain_recurrent_schedule"
          }
        }
      },
      "offer_chain_recurrent_schedule_create_update": {
        "type": "object",
        "nullable": true,
        "description": "Reset period of the offer chain.",
        "oneOf": [
          {
            "type": "object",
            "title": "interval_type = weekly",
            "description": "Weekly reset of the offer chain.",
            "properties": {
              "interval_type": {
                "$ref": "#/components/schemas/offer_chain_interval_type_weekly"
              },
              "day_of_week": {
                "$ref": "#/components/schemas/offer_chain_day_of_week"
              },
              "time": {
                "$ref": "#/components/schemas/offer_chain_time"
              }
            },
            "required": [
              "interval_type",
              "time",
              "day_of_week"
            ]
          },
          {
            "type": "object",
            "title": "interval_type = monthly",
            "description": "Monthly reset of the offer chain.",
            "properties": {
              "interval_type": {
                "$ref": "#/components/schemas/offer_chain_interval_type_monthly"
              },
              "day_of_month": {
                "$ref": "#/components/schemas/offer_chain_day_of_month"
              },
              "time": {
                "$ref": "#/components/schemas/offer_chain_time"
              }
            },
            "required": [
              "interval_type",
              "time",
              "day_of_month"
            ]
          }
        ]
      },
      "modify-offer-chain-item-model": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/sku"
          },
          "quantity": {
            "type": "integer",
            "description": "Reward item quantity for this chain step.",
            "minimum": 1
          },
          "order": {
            "description": "Reward order for the offer chain step.",
            "type": "integer",
            "nullable": true,
            "minimum": 0
          }
        },
        "required": [
          "sku",
          "quantity"
        ]
      },
      "create-offer-chain-step-model": {
        "type": "object",
        "properties": {
          "step_number": {
            "$ref": "#/components/schemas/offer_chain_step_number"
          },
          "is_free": {
            "$ref": "#/components/schemas/offer_chain_is_free"
          },
          "items": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/modify-offer-chain-item-model"
            }
          }
        },
        "required": [
          "step_number",
          "is_free",
          "items"
        ]
      },
      "create-offer-chain-model": {
        "type": "object",
        "description": "An offer chain.",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "date_start": {
            "$ref": "#/components/schemas/offer_chain_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/offer_chain_date_end"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/offer_chain_recurrent_schedule_create_update"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/create-offer-chain-step-model"
            }
          }
        },
        "required": [
          "name",
          "date_start",
          "steps",
          "is_enabled"
        ]
      },
      "offer_chain_step_id": {
        "type": "integer",
        "example": 10,
        "description": "Unique ID of the chain step.",
        "nullable": true,
        "minimum": 1
      },
      "admin-offer-chain-item-model": {
        "type": "object",
        "properties": {
          "item_id": {
            "$ref": "#/components/schemas/item_id"
          },
          "sku": {
            "$ref": "#/components/schemas/sku"
          },
          "type": {
            "$ref": "#/components/schemas/item_type"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "image_url": {
            "$ref": "#/components/schemas/image_url"
          },
          "is_free": {
            "$ref": "#/components/schemas/value-is_free"
          },
          "quantity": {
            "type": "integer",
            "description": "Amount of items.",
            "minimum": 1,
            "example": 1
          },
          "order": {
            "$ref": "#/components/schemas/order"
          }
        }
      },
      "admin-offer-chain-step-model": {
        "type": "object",
        "description": "Offer chain step.",
        "properties": {
          "step_id": {
            "$ref": "#/components/schemas/offer_chain_step_id"
          },
          "step_number": {
            "$ref": "#/components/schemas/offer_chain_step_number"
          },
          "is_free": {
            "$ref": "#/components/schemas/offer_chain_is_free"
          },
          "step_price": {
            "$ref": "#/components/schemas/offer_chain_step_price"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/admin-offer-chain-item-model"
            }
          }
        }
      },
      "admin-offer-chain-long-model": {
        "type": "object",
        "description": "An offer chain.",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/offer_chain_id"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "date_start": {
            "$ref": "#/components/schemas/offer_chain_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/offer_chain_date_end"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/offer_chain_recurrent_schedule"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/admin-offer-chain-step-model"
            }
          }
        }
      },
      "update_step_id": {
        "type": "integer",
        "example": 10,
        "description": "Unique chain step ID. Specify it during update to retain user progress for this step.",
        "nullable": true,
        "minimum": 1
      },
      "modify-offer-chain-step-model": {
        "type": "object",
        "properties": {
          "step_id": {
            "$ref": "#/components/schemas/update_step_id"
          },
          "step_number": {
            "$ref": "#/components/schemas/offer_chain_step_number"
          },
          "is_free": {
            "$ref": "#/components/schemas/offer_chain_is_free"
          },
          "items": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/modify-offer-chain-item-model"
            }
          }
        },
        "required": [
          "step_number",
          "is_free",
          "items"
        ]
      },
      "modify-offer-chain-model": {
        "type": "object",
        "description": "An offer chain.",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/offer_chain_id"
          },
          "name": {
            "$ref": "#/components/schemas/name-localization-object"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "description": {
            "$ref": "#/components/schemas/description-localization-object"
          },
          "date_start": {
            "$ref": "#/components/schemas/offer_chain_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/offer_chain_date_end"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/is_enabled"
          },
          "recurrent_schedule": {
            "$ref": "#/components/schemas/offer_chain_recurrent_schedule_create_update"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/modify-offer-chain-step-model"
            }
          }
        },
        "required": [
          "name",
          "date_start",
          "steps",
          "is_enabled"
        ]
      },
      "Promotions_unique_catalog_offer_items": {
        "type": "array",
        "description": "A list of items SKU that are available after using the unique catalog offer.",
        "items": {
          "$ref": "#/components/schemas/sku"
        }
      },
      "Promotions_200-get-unique-catalog-offer-promotion-model": {
        "type": "object",
        "properties": {
          "external_id": {
            "$ref": "#/components/schemas/Promotions_coupon-external_id"
          },
          "date_start": {
            "$ref": "#/components/schemas/Promotions_coupon_date_start"
          },
          "date_end": {
            "$ref": "#/components/schemas/Promotions_coupon_date_end"
          },
          "name": {
            "$ref": "#/components/schemas/Promotions_coupon_name"
          },
          "items": {
            "$ref": "#/components/schemas/Promotions_unique_catalog_offer_items"
          },
          "is_enabled": {
            "$ref": "#/components/schemas/Promotions_coupon-is_enabled"
          },
          "redeem_total_limit": {
            "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
          },
          "redeem_user_limit": {
            "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
          },
          "redeem_code_limit": {
            "$ref": "#/components/schemas/Promotions_redeem_code_limit"
          },
          "total_limit_state": {
            "$ref": "#/components/schemas/Promotions_coupon_total_limit_state"
          }
        }
      }
    },
    "responses": {
      "200-admin-get-attribute-list-response": {
        "description": "List of attributes was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with items.",
              "properties": {
                "attributes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/admin_attribute_response"
                  }
                },
                "total_count": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "total_count": 2,
                  "attributes": [
                    {
                      "external_id": "size",
                      "name": {
                        "en": "Size",
                        "de": "Größe"
                      }
                    },
                    {
                      "external_id": "genre",
                      "name": {
                        "en": "Genre",
                        "de": "Genre"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "401-invalid-basic-auth": {
        "description": "Basic authentication not passed or wrong. Make sure you used basic authentication or correct credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1020
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 401,
                  "errorCode": 1020,
                  "errorMessage": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            }
          }
        }
      },
      "201-admin-create-attribute": {
        "description": "Attribute was successfully created.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "external_id": {
                  "$ref": "#/components/schemas/admin-attribute-external_id"
                }
              }
            },
            "example": {
              "external_id": "genre"
            }
          }
        }
      },
      "422-validation-failed": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/schemas-422-invalid-request"
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `external_id` is required"
                }
              }
            }
          }
        }
      },
      "200-admin-get-attribute": {
        "description": "Specified attribute was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/admin_attribute_response"
            }
          }
        }
      },
      "404-attribute-not-found": {
        "description": "Attribute not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9901
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9901]: Attribute not found."
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 404,
                  "errorCode": 9901,
                  "errorMessage": "[0401-9901]: Attribute not found.",
                  "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "204-admin-update-attribute": {
        "description": "Attribute was successfully updated.",
        "content": {}
      },
      "201-admin-create-attribute-value": {
        "description": "Attribute value was successfully created.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "external_id": {
                  "$ref": "#/components/schemas/value-external_id"
                }
              }
            },
            "example": {
              "external_id": "rpg"
            }
          }
        }
      },
      "403-auth-header-not-sent": {
        "description": "Authorization header not sent.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 403
                },
                "errorCode": {
                  "type": "integer",
                  "example": 0
                },
                "errorMessage": {
                  "type": "string",
                  "example": "Authorization header not sent."
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 403,
                  "errorCode": 0,
                  "errorMessage": "Authorization header not sent"
                }
              }
            }
          }
        }
      },
      "422-create-update-attribute-value": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/schemas-422-invalid-request"
            },
            "examples": {
              "external_id is required": {
                "$ref": "#/components/examples/422-external-id-required"
              },
              "external_id is invalid": {
                "$ref": "#/components/examples/422-external-id-invalid"
              },
              "external_id is duplicate": {
                "$ref": "#/components/examples/422-external-id-duplicate"
              },
              "value is required": {
                "$ref": "#/components/examples/422-value-invalid"
              },
              "value properties minimum length": {
                "$ref": "#/components/examples/422-value-properties-required"
              },
              "value limit exceeded": {
                "$ref": "#/components/examples/422-value-limit-exceeded"
              }
            }
          }
        }
      },
      "404-attribute-value-not-found": {
        "description": "Attribute value not found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/404-not-found"
            },
            "examples": {
              "Attribute not found": {
                "$ref": "#/components/examples/404-attribute-not-found"
              },
              "Attribue value not found": {
                "$ref": "#/components/examples/404-attribute-value-not-found"
              }
            }
          }
        }
      },
      "Common_401-complex": {
        "description": "Authentication not passed or wrong. Make sure you used authentication or correct credentials.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1501
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1501]: Authorization failed: Authorization header not sent"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              },
              "type": "object"
            },
            "examples": {
              "Authorization header not sent": {
                "$ref": "#/components/examples/401-complex-auth-header-not-found"
              },
              "Incorrect credentials": {
                "$ref": "#/components/examples/401-complex-auth-incorrect-credentials"
              }
            }
          }
        }
      },
      "Common_422-body-validation": {
        "description": "Request validation error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/422-invalid-request"
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `name` is required",
                  "transactionId": "da145238620011eb8e24fe6913ff226a"
                }
              }
            }
          }
        }
      },
      "Bundles_200-admin-get-bundle-list": {
        "description": "The list of bundles was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with items.",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bundles_admin_bundle_response"
                  }
                }
              }
            },
            "example": {
              "items": [
                {
                  "item_id": 610316,
                  "sku": "com.xsolla.UltraSuperLootboxBundle_1",
                  "name": {
                    "en": "Ultra Super Lootbox Bundle"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Ultra Super Lootbox with items"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/779d2588a5b3cf348133fa7d5755cec8.png",
                  "long_description": {
                    "en": "Ultra Super lootbox with different items"
                  },
                  "attributes": [],
                  "is_free": false,
                  "groups": [
                    {
                      "external_id": "all",
                      "name": {
                        "en": "Equipment"
                      }
                    }
                  ],
                  "prices": [
                    {
                      "amount": "150.49",
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    }
                  ],
                  "virtual_prices": [],
                  "media_list": [],
                  "order": 1,
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "standard",
                  "content": [
                    {
                      "sku": "com.xsolla.booster_min_1",
                      "name": {
                        "en": "Xsolla Booster Mini"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Test your luck to find glorious treasures from the past in an Xsolla Booster Mini."
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5ee252b292a560930c8f7e2c791dfc6d.png",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.booster_min_2",
                      "name": {
                        "en": "Booster"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Get high-quality, competitively priced gas with Booster. Download the app for free same-day delivery. Kick the gas station habit for good."
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e76d317ee5a8d06a4b730bcf23746e9e.png",
                      "quantity": 15
                    },
                    {
                      "sku": "com.xsolla.gloves_1",
                      "name": {
                        "en": "Xsolla Gloves"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Enjoy a range of outdoor activities with gloves from EK Sporting Goods."
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/93a7ee3ae284b677d3dc1f2e989731cb.png",
                      "quantity": 3
                    },
                    {
                      "sku": "com.xsolla.boots_1",
                      "name": {
                        "en": "Xsolla Boots"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Stylishly protect your toes with the accent of Xsolla"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/6e33d40df3cdac152dac9ac3d1f5986e.png",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.gun_max",
                      "name": {
                        "en": "Xsolla Gun"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "The M134 Minigun is a 7.62×51mm NATO, six-barrel rotary machine gun with a high rate of fire (2,000 to 6,000 rounds per minute)"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/3093eeb39d5ec7def3af6396607a30ba.png",
                      "quantity": 10
                    },
                    {
                      "sku": "com.xsolla.minigun_2",
                      "name": {
                        "en": "Empire Minigun"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Just hold down the trigger and pray to the Empire"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/dabfa4567cd2d82e0562d4b0f448b436.png",
                      "quantity": 3
                    }
                  ],
                  "limits": {
                    "per_user": {
                      "total": 10
                    },
                    "per_item": {
                      "total": 500,
                      "available": 455,
                      "reserved": 5,
                      "sold": 40
                    },
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677639600,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-03-01T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": [
                    {
                      "date_from": "2020-08-11T10:00:00+03:00",
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ],
                  "custom_attributes": {
                    "type": "lootbox",
                    "purchased": 0
                  }
                },
                {
                  "item_id": 610317,
                  "sku": "com.xsolla.EmpireBundle_1",
                  "name": {
                    "en": "Empire bundle"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Empire bundle with items"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/685b21f9d9dca4aa0c953e8816b4eb4b.png",
                  "long_description": {
                    "en": "Empire bundle with some goods"
                  },
                  "attributes": [],
                  "is_free": false,
                  "groups": [
                    {
                      "external_id": "all",
                      "name": {
                        "en": "Equipment"
                      }
                    }
                  ],
                  "prices": [],
                  "virtual_prices": [
                    {
                      "sku": "com.xsolla.crystal_1",
                      "name": {
                        "en": "Crystals",
                        "ru": "Crystals"
                      },
                      "type": "virtual_currency",
                      "description": {
                        "en": "Main in-game currency"
                      },
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                      "amount": "150",
                      "is_default": true
                    }
                  ],
                  "media_list": [],
                  "order": 1,
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "standard",
                  "content": [
                    {
                      "sku": "com.xsolla.keys_2",
                      "name": {
                        "en": "Empire Key"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Opens ONE Empire lootbox of any kind"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c2f8536f08a9949964e4fa2e01a7cb8.png",
                      "quantity": 5
                    },
                    {
                      "sku": "com.xsolla.booster_mega_2",
                      "name": {
                        "en": "Empire Booster Mega"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Take it, take it all! All of the Empires riches in one Mega Booster."
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/55e908cb9670301ac8f89a6382433a27.png",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.booster_min_2",
                      "name": {
                        "en": "Empire Booster Mini"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Test your luck to find glorious treasures from Empire's past"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5bcecec17400a0d8c72dd265ff730b07.png",
                      "quantity": 3
                    }
                  ],
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": []
                }
              ]
            }
          }
        }
      },
      "Bundles_401-invalid-basic-auth": {
        "description": "Basic authentication not passed or wrong. Make sure you used basic authentication or correct credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1020
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 401,
                  "errorCode": 1020,
                  "errorMessage": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            }
          }
        }
      },
      "Bundles_201-admin-create-bundle": {
        "description": "Bundle was successfully created.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/components/schemas/Bundles_sku"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "sku": "com.xsolla.kg_1"
                }
              }
            }
          }
        }
      },
      "Bundles_422-invalid-request": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Bundles_422-invalid-request"
            },
            "examples": {
              "The property `sku` is required": {
                "$ref": "#/components/examples/422-property-sku-is-required"
              },
              "Numbers of attribute values per item exceeded": {
                "$ref": "#/components/examples/422-numbers-of-attribute-values-per-item-exceeded"
              },
              "Numbers of attributes per item exceeded": {
                "$ref": "#/components/examples/422-numbers-of-attributes-per-item-exceeded"
              },
              "Value limit exceeded": {
                "$ref": "#/components/examples/422-value-limit-exceeded"
              },
              "Custom attributes JSON can’t exceed 500 characters": {
                "$ref": "#/components/examples/422-custom-attributes-size-exceeded"
              }
            }
          }
        }
      },
      "Bundles_200-admin-get-bundle-list-in-group": {
        "description": "The list of bundles was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with items.",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bundles_admin_bundle_response"
                  }
                }
              }
            },
            "example": {
              "items": [
                {
                  "item_id": 610316,
                  "sku": "com.xsolla.UltraSuperLootboxBundle_1",
                  "name": {
                    "en": "Ultra Super Lootbox Bundle"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Ultra Super Lootbox with items"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/779d2588a5b3cf348133fa7d5755cec8.png",
                  "long_description": {
                    "en": "Ultra Super lootbox with different items"
                  },
                  "attributes": [],
                  "is_free": false,
                  "groups": [
                    {
                      "external_id": "all",
                      "name": {
                        "en": "Equipment"
                      }
                    }
                  ],
                  "prices": [
                    {
                      "amount": "150.49",
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    }
                  ],
                  "virtual_prices": [],
                  "media_list": [],
                  "order": 1,
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "standard",
                  "content": [
                    {
                      "sku": "com.xsolla.booster_min_1",
                      "name": {
                        "en": "Xsolla Booster Mini"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Test your luck to find glorious treasures from the past in an Xsolla Booster Mini."
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5ee252b292a560930c8f7e2c791dfc6d.png",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.booster_min_2",
                      "name": {
                        "en": "Booster"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Get high-quality, competitively priced gas with Booster. Download the app for free same-day delivery. Kick the gas station habit for good."
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e76d317ee5a8d06a4b730bcf23746e9e.png",
                      "quantity": 15
                    },
                    {
                      "sku": "com.xsolla.gloves_1",
                      "name": {
                        "en": "Xsolla Gloves"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Enjoy a range of outdoor activities with gloves from EK Sporting Goods."
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/93a7ee3ae284b677d3dc1f2e989731cb.png",
                      "quantity": 3
                    },
                    {
                      "sku": "com.xsolla.boots_1",
                      "name": {
                        "en": "Xsolla Boots"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Stylishly protect your toes with the accent of Xsolla"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/6e33d40df3cdac152dac9ac3d1f5986e.png",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.gun_max",
                      "name": {
                        "en": "Xsolla Gun"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "The M134 Minigun is a 7.62×51mm NATO, six-barrel rotary machine gun with a high rate of fire (2,000 to 6,000 rounds per minute)"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/3093eeb39d5ec7def3af6396607a30ba.png",
                      "quantity": 10
                    },
                    {
                      "sku": "com.xsolla.minigun_2",
                      "name": {
                        "en": "Empire Minigun"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Just hold down the trigger and pray to the Empire"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/dabfa4567cd2d82e0562d4b0f448b436.png",
                      "quantity": 3
                    }
                  ],
                  "limits": {
                    "per_user": {
                      "total": 10
                    },
                    "per_item": {
                      "total": 500,
                      "available": 455,
                      "reserved": 5,
                      "sold": 40
                    },
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "weekly",
                        "day_of_week": 2,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-03-07T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": [
                    {
                      "date_from": "2020-08-11T10:00:00+03:00",
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ],
                  "custom_attributes": {
                    "type": "lootbox",
                    "purchased": 0
                  }
                },
                {
                  "item_id": 610317,
                  "sku": "com.xsolla.EmpireBundle_1",
                  "name": {
                    "en": "Empire bundle"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Empire bundle with items"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/685b21f9d9dca4aa0c953e8816b4eb4b.png",
                  "long_description": {
                    "en": "Empire bundle with some goods"
                  },
                  "attributes": [],
                  "is_free": false,
                  "groups": [
                    {
                      "external_id": "all",
                      "name": {
                        "en": "Equipment"
                      }
                    }
                  ],
                  "prices": [],
                  "virtual_prices": [
                    {
                      "sku": "com.xsolla.crystal_1",
                      "name": {
                        "en": "Crystals",
                        "ru": "Crystals"
                      },
                      "type": "virtual_currency",
                      "description": {
                        "en": "Main in-game currency"
                      },
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                      "amount": "150",
                      "is_default": true
                    }
                  ],
                  "media_list": [],
                  "order": 1,
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "standard",
                  "content": [
                    {
                      "sku": "com.xsolla.keys_2",
                      "name": {
                        "en": "Empire Key"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Opens ONE Empire lootbox of any kind"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c2f8536f08a9949964e4fa2e01a7cb8.png",
                      "quantity": 5
                    },
                    {
                      "sku": "com.xsolla.booster_mega_2",
                      "name": {
                        "en": "Empire Booster Mega"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Take it, take it all! All of the Empires riches in one Mega Booster."
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/55e908cb9670301ac8f89a6382433a27.png",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.booster_min_2",
                      "name": {
                        "en": "Empire Booster Mini"
                      },
                      "type": "virtual_good",
                      "description": {
                        "en": "Test your luck to find glorious treasures from Empire's past"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5bcecec17400a0d8c72dd265ff730b07.png",
                      "quantity": 3
                    }
                  ],
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": []
                }
              ]
            }
          }
        }
      },
      "Bundles_200-admin-get-bundle": {
        "description": "The specified bundle was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Bundles_admin_bundle_response"
            },
            "example": {
              "item_id": 610316,
              "sku": "com.xsolla.EmpireBundle_1",
              "name": {
                "en": "Empire bundle"
              },
              "type": "bundle",
              "description": {
                "en": "Empire bundle with items"
              },
              "image_url": "https://cdn.xsolla.net/img/misc/images/685b21f9d9dca4aa0c953e8816b4eb4b.png",
              "long_description": {
                "en": "Empire bundle with some goods"
              },
              "attributes": [],
              "is_free": false,
              "groups": [
                {
                  "external_id": "all",
                  "name": {
                    "en": "Equipment"
                  }
                }
              ],
              "prices": [],
              "virtual_prices": [
                {
                  "sku": "com.xsolla.crystal_1",
                  "name": {
                    "en": "Crystals",
                    "ru": "Crystals"
                  },
                  "type": "virtual_currency",
                  "description": {
                    "en": "Main in-game currency"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                  "amount": "150",
                  "is_default": true
                }
              ],
              "media_list": [],
              "order": 1,
              "is_enabled": true,
              "is_show_in_store": true,
              "regions": [],
              "bundle_type": "standard",
              "content": [
                {
                  "sku": "com.xsolla.keys_2",
                  "name": {
                    "en": "Empire Key"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Opens ONE Empire lootbox of any kind"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5c2f8536f08a9949964e4fa2e01a7cb8.png",
                  "quantity": 5
                },
                {
                  "sku": "com.xsolla.booster_mega_2",
                  "name": {
                    "en": "Empire Booster Mega"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Take it, take it all! All of the Empires riches in one Mega Booster."
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/55e908cb9670301ac8f89a6382433a27.png",
                  "quantity": 1
                },
                {
                  "sku": "com.xsolla.booster_min_2",
                  "name": {
                    "en": "Empire Booster Mini"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Test your luck to find glorious treasures from Empire's past"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5bcecec17400a0d8c72dd265ff730b07.png",
                  "quantity": 3
                }
              ],
              "limits": {
                "per_user": {
                  "total": 10
                },
                "per_item": null,
                "recurrent_schedule": null
              },
              "periods": [
                {
                  "date_from": "2020-08-11T10:00:00+03:00",
                  "date_until": "2020-08-11T20:00:00+03:00"
                }
              ],
              "custom_attributes": {
                "type": "lootbox",
                "purchased": 0
              }
            }
          }
        }
      },
      "Bundles_204-admin-update-bundle": {
        "description": "Bundle was successfully updated.",
        "content": {}
      },
      "Bundles_204-admin-delete-bundle": {
        "description": "Bundle was successfully deleted.",
        "content": {}
      },
      "Bundles_204-admin-show-bundle": {
        "description": "Bundle was successfully displayed.",
        "content": {}
      },
      "Bundles_204-admin-hide-bundle": {
        "description": "Bundle was successfully hidden.",
        "content": {}
      },
      "Bundles_200-get-bundle-list": {
        "description": "The list of bundles was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with items.",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bundles_client_bundle"
                  }
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Bundles_200-get-bundle-list"
              }
            }
          }
        }
      },
      "Cart-Payment_200-get-cart-json-model": {
        "description": "The cart with items was successfully returned.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cart_id": {
                  "type": "string",
                  "example": "cart_id",
                  "description": "Cart ID."
                },
                "price": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "amount": {
                      "type": "string",
                      "default": "50.0000000000000000"
                    },
                    "amount_without_discount": {
                      "type": "string",
                      "default": "100.0000000000000000"
                    },
                    "currency": {
                      "type": "string",
                      "default": "USD"
                    }
                  },
                  "example": {
                    "amount": "6150.0000000000000000",
                    "amount_without_discount": "6150.0000000000000000",
                    "currency": "USD"
                  },
                  "description": "Cart price."
                },
                "is_free": {
                  "$ref": "#/components/schemas/value-cart_is_free"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Cart-Payment_client-attributes"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "inventory_options": {
                        "$ref": "#/components/schemas/Virtual-Items-Currency_inventory_options"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "price": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "amount": {
                            "type": "string"
                          },
                          "amount_without_discount": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "amount": "6150.0000000000000000",
                          "amount_without_discount": "6150.0000000000000000",
                          "currency": "USD"
                        },
                        "description": "Item price."
                      },
                      "virtual_item_type": {
                        "type": "string",
                        "description": "Type of item."
                      },
                      "virtual_prices": {
                        "$ref": "#/components/schemas/Bundles_virtual_prices"
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "is_bonus": {
                        "type": "boolean"
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "can_be_bought": {
                        "$ref": "#/components/schemas/Can_be_bought"
                      },
                      "vp_rewards": {
                        "$ref": "#/components/schemas/client-item-value-point-reward"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Catalog_item_limits"
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods"
                      }
                    }
                  }
                },
                "promotions": {
                  "$ref": "#/components/schemas/Catalog_cart_promotions"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "cart_id": "cart_id",
                  "is_free": false,
                  "items": [
                    {
                      "attributes": [],
                      "description": "Take it, take it all! All of Xsollas riches in one Mega Booster.",
                      "groups": [
                        {
                          "external_id": "powerups",
                          "name": "Power Ups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "is_free": false,
                      "is_bonus": false,
                      "name": "Xsolla Booster Mega",
                      "price": {
                        "amount": "50.0000000000000000",
                        "amount_without_discount": "100.0000000000000000",
                        "currency": "USD"
                      },
                      "quantity": 123,
                      "sku": "com.xsolla.booster_mega_1",
                      "type": "virtual_good",
                      "virtual_item_type": "consumable",
                      "virtual_prices": [],
                      "promotions": [],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    }
                  ],
                  "price": {
                    "amount": "6150.0000000000000000",
                    "amount_without_discount": "6150.0000000000000000",
                    "currency": "USD"
                  },
                  "promotions": [
                    {
                      "name": "Bonus promotion",
                      "date_start": "2020-04-15T16:16:00+03:00",
                      "date_end": "2026-04-15T16:16:00+03:00",
                      "discount": {
                        "percent": "50.00"
                      },
                      "bonus": [
                        {
                          "quantity": 1,
                          "name": "Xsolla Minigun",
                          "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                          "sku": "com.xsolla.minigun_1",
                          "type": "virtual_good"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Cart-Payment_200-fill-cart-json-model": {
        "description": "The cart with items was successfully returned.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cart_id": {
                  "type": "string",
                  "example": "cart_id",
                  "description": "Cart ID."
                },
                "price": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "amount": {
                      "type": "string",
                      "default": "50.0000000000000000"
                    },
                    "amount_without_discount": {
                      "type": "string",
                      "default": "100.0000000000000000"
                    },
                    "currency": {
                      "type": "string",
                      "default": "USD"
                    }
                  },
                  "example": {
                    "amount": "6150.0000000000000000",
                    "amount_without_discount": "6150.0000000000000000",
                    "currency": "USD"
                  },
                  "description": "Cart price."
                },
                "is_free": {
                  "$ref": "#/components/schemas/value-cart_is_free"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Cart-Payment_client-attributes"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "inventory_options": {
                        "$ref": "#/components/schemas/Virtual-Items-Currency_inventory_options"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "price": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "amount": {
                            "type": "string"
                          },
                          "amount_without_discount": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "amount": "6150.0000000000000000",
                          "amount_without_discount": "6150.0000000000000000",
                          "currency": "USD"
                        },
                        "description": "Item price."
                      },
                      "virtual_item_type": {
                        "type": "string",
                        "description": "Type of item."
                      },
                      "virtual_prices": {
                        "$ref": "#/components/schemas/Bundles_virtual_prices"
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "is_bonus": {
                        "type": "boolean"
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "can_be_bought": {
                        "$ref": "#/components/schemas/Can_be_bought"
                      },
                      "vp_rewards": {
                        "$ref": "#/components/schemas/client-item-value-point-reward"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Catalog_item_limits"
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods"
                      }
                    }
                  }
                },
                "promotions": {
                  "$ref": "#/components/schemas/Catalog_cart_promotions"
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "errorCode": {
                        "type": "integer"
                      },
                      "errorMessage": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "cart_id": "cart_id",
                  "is_free": false,
                  "items": [
                    {
                      "attributes": [],
                      "description": "Take it, take it all! All of Xsollas riches in one Mega Booster.",
                      "groups": [
                        {
                          "external_id": "powerups",
                          "name": "Power Ups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "is_free": false,
                      "is_bonus": false,
                      "name": "Xsolla Booster Mega",
                      "price": {
                        "amount": "50.0000000000000000",
                        "amount_without_discount": "100.0000000000000000",
                        "currency": "USD"
                      },
                      "quantity": 123,
                      "sku": "com.xsolla.booster_mega_1",
                      "type": "virtual_good",
                      "virtual_item_type": "consumable",
                      "virtual_prices": [],
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    }
                  ],
                  "warnings": [
                    {
                      "sku": "com.xsolla.booster_mega_21",
                      "quantity": 1,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with Project Id = 44056 and Sku = booster_mega_2 not found"
                    }
                  ],
                  "price": {
                    "amount": "6150.0000000000000000",
                    "amount_without_discount": "6150.0000000000000000",
                    "currency": "USD"
                  },
                  "promotions": [
                    {
                      "name": "Bonus promotion",
                      "date_start": "2020-04-15T16:16:00+03:00",
                      "date_end": "2026-04-15T16:16:00+03:00",
                      "discount": {
                        "percent": "50.00"
                      },
                      "bonus": [
                        {
                          "quantity": 1,
                          "name": "Xsolla Minigun",
                          "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                          "sku": "com.xsolla.minigun_1",
                          "type": "virtual_good"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Cart-Payment_404-item": {
        "description": "The item was not found. Make sure the `project_id` and the `item_sku` are correct.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-4001]: Item with Project Id = 44056 and Sku = booster_mega_12222 not found"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Cart-Payment_422-non-negative-quantity": {
        "description": "Item quantity must be non-negative integer.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorMessage": {
                  "type": "string",
                  "example": "Item quantity must be non-negative integer."
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1102
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Item quantity must be non-negative integer",
                  "statusCode": 422
                }
              }
            }
          }
        }
      },
      "Cart-Payment_422-can-put-only-virtual-good-to-cart": {
        "description": "This type of item cannot be put to the cart. Select another type of item.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1421
                },
                "errorMessage": {
                  "type": "string",
                  "example": "This type of item cannot be put to the cart. Select another type of item."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1421,
                  "errorMessage": "Only Virtual Good Supported"
                }
              }
            }
          }
        }
      },
      "Cart-Payment_200-order-created": {
        "description": "Order was successfully created.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "integer",
                  "description": "Order ID."
                },
                "token": {
                  "type": "string",
                  "description": "Payment token."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "order_id": 641,
                  "token": "f4puMEFFDZcx9nv5HoNHIkPe9qghvBQo"
                }
              }
            }
          }
        }
      },
      "Cart-Payment_422-invalid-cart": {
        "description": "Invalid cart. Check that cart exists, not empty, and all items in it are not free.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "integer",
                  "example": 1401
                },
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1401]: Invalid cart"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "errorCode": 1401,
                  "statusCode": 422,
                  "errorMessage": "[0401-1401]: Invalid cart"
                }
              }
            }
          }
        }
      },
      "Cart-Payment_404-create-order-with-item-not-found-errors": {
        "description": "Item or coupon not found. Make sure the used data is correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer"
                },
                "errorCode": {
                  "type": "integer"
                },
                "errorMessage": {
                  "type": "string"
                },
                "transactionId": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "item not found": {
                "$ref": "#/components/examples/404-item-by-sku-not-found"
              },
              "coupon not found": {
                "$ref": "#/components/examples/404-coupon-not-found"
              }
            }
          }
        }
      },
      "Cart-Payment_422-create-order-with-item-invalid": {
        "description": "Invalid error.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "integer",
                  "example": 1411
                },
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1411]: Invalid item"
                }
              }
            },
            "examples": {
              "invalid item": {
                "value": {
                  "errorCode": 1411,
                  "statusCode": 422,
                  "errorMessage": "[0401-1411]: Invalid item"
                }
              },
              "code expired": {
                "value": {
                  "errorCode": 9810,
                  "statusCode": 422,
                  "errorMessage": "[0401-9810]: Sorry, this code is expired."
                }
              },
              "code redemption limit": {
                "value": {
                  "errorCode": 9804,
                  "statusCode": 422,
                  "errorMessage": "[0401-9804]: You have reached the coupon redemption limit."
                }
              },
              "regionally restricted": {
                "value": {
                  "errorCode": 9808,
                  "statusCode": 422,
                  "errorMessage": "[0401-9808]: Coupon is not available in your region."
                }
              }
            }
          }
        }
      },
      "Cart-Free_200-order-created": {
        "description": "Free order was successfully created.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "order_id": 641
                }
              }
            }
          }
        }
      },
      "Cart-Payment_422-invalid-item": {
        "description": "Invalid item. Check that item exists, not turned off, deleted, and not free.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "integer",
                  "example": 1411
                },
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1411]: Invalid item"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "errorCode": 1411,
                  "statusCode": 422,
                  "errorMessage": "[0401-1411]: Invalid item"
                }
              }
            }
          }
        }
      },
      "Cart-Payment_200-get-order": {
        "description": "Successful order request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "integer",
                  "example": 1,
                  "default": "Order ID.",
                  "description": "Order ID."
                },
                "status": {
                  "type": "string",
                  "example": "paid",
                  "description": "Order status: `new`/`paid`/`done`/`canceled`."
                },
                "content": {
                  "type": "object",
                  "description": "Order details.",
                  "properties": {
                    "price": {
                      "type": "object",
                      "description": "Order price.",
                      "properties": {
                        "amount": {
                          "type": "string",
                          "example": "30",
                          "description": "Order discount price."
                        },
                        "amount_without_discount": {
                          "type": "string",
                          "example": "30",
                          "description": "Order price."
                        },
                        "currency": {
                          "type": "string",
                          "example": "USD",
                          "description": "Order price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                        }
                      }
                    },
                    "virtual_price": {
                      "type": "object",
                      "description": "Order price in virtual currency.",
                      "properties": {
                        "amount": {
                          "type": "string",
                          "example": "100",
                          "description": "Order discount price."
                        },
                        "amount_without_discount": {
                          "type": "string",
                          "example": "150",
                          "description": "Order price."
                        },
                        "currency": {
                          "type": "string",
                          "example": "test_vc",
                          "description": "Virtual currency SKU used in order."
                        }
                      }
                    },
                    "is_free": {
                      "type": "boolean",
                      "example": false,
                      "description": "If `true`, the order is free."
                    },
                    "items": {
                      "type": "array",
                      "example": [
                        {
                          "sku": "com.xsolla.item_1",
                          "quantity": 1,
                          "is_free": false,
                          "price": {
                            "amount": "30",
                            "amount_without_discount": "30",
                            "currency": "USD"
                          }
                        }
                      ],
                      "description": "Items list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sku": {
                            "type": "string",
                            "example": "some_sku",
                            "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 1,
                            "description": "Item quantity."
                          },
                          "is_free": {
                            "$ref": "#/components/schemas/value-is_free"
                          },
                          "price": {
                            "type": "object",
                            "description": "Item price.",
                            "properties": {
                              "amount": {
                                "type": "string",
                                "example": "30",
                                "description": "Discounted item price."
                              },
                              "amount_without_discount": {
                                "type": "string",
                                "example": "30",
                                "description": "Item price."
                              },
                              "currency": {
                                "type": "string",
                                "example": "USD",
                                "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "order_id": 1,
                  "status": "paid",
                  "content": {
                    "price": {
                      "amount": "30",
                      "amount_without_discount": "30",
                      "currency": "USD"
                    },
                    "is_free": false,
                    "items": [
                      {
                        "sku": "com.xsolla.item_1",
                        "quantity": 1,
                        "is_free": false,
                        "price": {
                          "amount": "30",
                          "amount_without_discount": "30",
                          "currency": "USD"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "Cart-Payment_404-get-order": {
        "description": "Order not found. Make sure the `project_id` and the `order_id` are correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9001]: Order not found"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 404,
                  "errorCode": 9001,
                  "errorMessage": "[0401-9001]: Order not found"
                }
              }
            }
          }
        }
      },
      "200-admin-order-search": {
        "description": "Order list was successfully retrieved.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "description": "Orders list.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "order_id": {
                        "type": "integer",
                        "example": 1,
                        "description": "Order ID."
                      },
                      "project_id": {
                        "type": "integer",
                        "example": 44056,
                        "description": "Project ID. You can find this parameter in your [Publisher Account](https://publisher.xsolla.com/) next to the name of the project."
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "new",
                          "paid",
                          "done",
                          "canceled",
                          "expired"
                        ],
                        "example": "paid",
                        "description": "Order status."
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-08-11T10:00:00+03:00",
                        "description": "Order creation date or date-time code per [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)."
                      },
                      "mode": {
                        "type": "string",
                        "enum": [
                          "default",
                          "sandbox"
                        ],
                        "example": "default",
                        "description": "Order creation mode."
                      },
                      "is_free": {
                        "type": "boolean",
                        "example": false,
                        "description": "Whether the order is free."
                      },
                      "invoice_id": {
                        "type": "string",
                        "description": "Invoice ID."
                      },
                      "price": {
                        "type": "object",
                        "nullable": true,
                        "description": "Order price.",
                        "properties": {
                          "amount": {
                            "type": "string",
                            "example": "30",
                            "description": "Final order price."
                          },
                          "amount_without_discount": {
                            "type": "string",
                            "example": "30",
                            "description": "Order price without discounts."
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD",
                            "description": "SKU of virtual currency or three-letter code of real currency per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
                          },
                          "is_virtual_currency": {
                            "type": "boolean",
                            "example": false,
                            "description": "Whether the currency is virtual."
                          }
                        }
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "07e653a2b15011e6818f005056a54369",
                            "description": "User ID passed when creating the order."
                          },
                          "country": {
                            "type": "string",
                            "description": "Two-letter uppercase country code per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Check the documentation for detailed information about [countries supported by Xsolla](https://developers.xsolla.com/doc/shop-builder/references/supported-countries/).",
                            "example": "US"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@xsolla.com",
                            "description": "User email formatted according to the [RFC 822](https://www.w3.org/Protocols/rfc822/#z8) protocol."
                          },
                          "region_id": {
                            "type": "integer",
                            "nullable": true,
                            "example": 12,
                            "description": "User's region ID. It is returned if regional sales restrictions are set up. The user's country, passed when creating the order, is matched with the list of countries specified when [creating the region](https://developers.xsolla.com/api/shop-builder/operation/admin-create-region/). Refer to the [documentation](https://developers.xsolla.com/doc/shop-builder/features/regional-restrictions/) for more information about regional sales restrictions."
                          }
                        }
                      },
                      "items": {
                        "type": "array",
                        "description": "Items list.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "order_item_id": {
                              "type": "integer",
                              "description": "Item ID in the order. It is generated by Xsolla during the order creation."
                            },
                            "item_id": {
                              "type": "integer",
                              "example": 1,
                              "description": "Item ID. It is generated by Xsolla when creating an item."
                            },
                            "sku": {
                              "type": "string",
                              "example": "elven_shield",
                              "description": "Item ID specified during its creation. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                            },
                            "type": {
                              "type": "string",
                              "example": "virtual_good",
                              "description": "Type of item.",
                              "enum": [
                                "virtual_good",
                                "virtual_currency",
                                "bundle",
                                "game_key",
                                "physical_good",
                                "value_point"
                              ]
                            },
                            "quantity": {
                              "type": "integer",
                              "example": 1,
                              "description": "Item quantity."
                            },
                            "is_free": {
                              "type": "boolean",
                              "example": false,
                              "default": false,
                              "description": "Whether the item is free."
                            },
                            "is_bonus": {
                              "type": "boolean",
                              "example": false,
                              "description": "Whether the item is a bonus."
                            },
                            "region_id": {
                              "type": "integer",
                              "description": "ID of the region where the item is available. Refer to the [documentation](https://developers.xsolla.com/doc/shop-builder/features/regional-restrictions/) for more information about regional sales restrictions.",
                              "nullable": true
                            },
                            "tax_category": {
                              "type": "string",
                              "example": "DG00002",
                              "description": "Tax category."
                            },
                            "price": {
                              "type": "object",
                              "nullable": true,
                              "description": "Item price.",
                              "properties": {
                                "amount": {
                                  "type": "string",
                                  "example": "30",
                                  "description": "Discounted item price."
                                },
                                "amount_without_discount": {
                                  "type": "string",
                                  "example": "30",
                                  "description": "Item price without discounts."
                                },
                                "currency": {
                                  "type": "string",
                                  "example": "USD",
                                  "description": "SKU of virtual currency or three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
                                },
                                "is_virtual_currency": {
                                  "type": "boolean",
                                  "example": false,
                                  "description": "Whether the currency is virtual."
                                }
                              }
                            },
                            "description": {
                              "type": "object",
                              "nullable": true,
                              "description": "Object with information about the item.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Item name."
                                },
                                "image_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Item image URL."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Item description."
                                }
                              }
                            }
                          }
                        }
                      },
                      "promotions": {
                        "type": "array",
                        "nullable": true,
                        "description": "Promotions list applied to order.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "promotion_id": {
                              "type": "integer",
                              "example": 111425,
                              "description": "Promotion ID within the project."
                            }
                          }
                        }
                      },
                      "coupons": {
                        "type": "array",
                        "nullable": true,
                        "description": "Coupons list applied to order.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "coupon_id": {
                              "type": "integer",
                              "description": "Coupon ID, generated by Xsolla when creating a promotion with a coupon."
                            },
                            "sku": {
                              "type": "string",
                              "description": "Coupon SKU, generated by Xsolla when creating a promotion with a coupon."
                            },
                            "code": {
                              "type": "string",
                              "description": "Used coupon code. Unique case-sensitive code. Contains letters and numbers."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "unique_catalog_offer",
                                "coupon",
                                "promocode"
                              ],
                              "description": "Type of coupon."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "total_items_count": {
                  "type": "integer",
                  "example": 1,
                  "description": "The total number of orders for the specified period of time."
                },
                "has_more": {
                  "type": "boolean",
                  "example": true,
                  "description": "Whether there are any additional pages."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "orders": [
                    {
                      "order_id": 100511,
                      "project_id": 101,
                      "status": "done",
                      "date_created": "2018-01-08T15:32:06+03:00",
                      "mode": "default",
                      "user": {
                        "id": "07e653a2b15011e6818f005056a54369",
                        "country": "US",
                        "email": "user@xsolla.com",
                        "region_id": 1
                      },
                      "is_free": true,
                      "items": [
                        {
                          "order_item_id": 29,
                          "item_id": 1005111,
                          "sku": "com.xsolla.1005111",
                          "type": "virtual_good",
                          "quantity": 1,
                          "is_free": true,
                          "is_bonus": false,
                          "region_id": 1,
                          "tax_category": "DG00001",
                          "description": {
                            "name": "bla",
                            "image_url": "http://example.com/image.jpg",
                            "description": "yes"
                          }
                        },
                        {
                          "order_item_id": 30,
                          "item_id": 1005112,
                          "sku": "com.xsolla.1005112",
                          "type": "value_point",
                          "quantity": 3,
                          "is_free": true,
                          "is_bonus": true,
                          "region_id": 1,
                          "tax_category": "DG00001",
                          "description": null
                        }
                      ]
                    },
                    {
                      "order_id": 100510,
                      "project_id": 101,
                      "status": "paid",
                      "date_created": "2018-01-07T15:32:06+03:00",
                      "mode": "default",
                      "user": {
                        "id": "07e653a2b15011e6818f005056a54369",
                        "country": "US",
                        "email": "user@xsolla.com",
                        "region_id": null
                      },
                      "is_free": false,
                      "items": [
                        {
                          "order_item_id": 27,
                          "item_id": 1005101,
                          "sku": "com.xsolla.1005101",
                          "type": "game_key",
                          "quantity": 1,
                          "is_free": false,
                          "is_bonus": false,
                          "region_id": null,
                          "tax_category": "DG00001",
                          "description": null,
                          "price": {
                            "amount": "67.3400",
                            "amount_without_discount": "67.3400",
                            "currency": "USD",
                            "is_virtual_currency": false
                          }
                        },
                        {
                          "order_item_id": 28,
                          "item_id": 1005102,
                          "sku": "com.xsolla.1005102",
                          "type": "value_point",
                          "quantity": 2,
                          "is_free": true,
                          "is_bonus": true,
                          "region_id": null,
                          "tax_category": "DG00001",
                          "description": null
                        }
                      ],
                      "price": {
                        "amount": "67.3400",
                        "amount_without_discount": "72.3400",
                        "currency": "USD",
                        "is_virtual_currency": false
                      },
                      "invoice_id": "100510",
                      "promotions": [
                        {
                          "promotion_id": 1005101
                        }
                      ],
                      "coupons": [
                        {
                          "coupon_id": 100510,
                          "sku": "com.xsolla.100510",
                          "code": "OPQRSTUVWX",
                          "type": "promocode"
                        }
                      ]
                    },
                    {
                      "order_id": 100505,
                      "project_id": 101,
                      "status": "paid",
                      "date_created": "2018-01-02T15:32:06+03:00",
                      "mode": "default",
                      "user": {
                        "id": "07e653a2b15011e6818f005056a54369",
                        "country": "US",
                        "email": "user@xsolla.com",
                        "region_id": null
                      },
                      "is_free": false,
                      "items": [
                        {
                          "order_item_id": 17,
                          "item_id": 1005051,
                          "sku": "com.xsolla.1005051",
                          "type": "virtual_good",
                          "quantity": 1,
                          "is_free": true,
                          "is_bonus": true,
                          "region_id": null,
                          "tax_category": "DG00001",
                          "description": null
                        },
                        {
                          "order_item_id": 18,
                          "item_id": 1005052,
                          "sku": "com.xsolla.1005052",
                          "type": "value_point",
                          "quantity": 3,
                          "is_free": true,
                          "is_bonus": true,
                          "region_id": null,
                          "tax_category": "DG00001",
                          "description": null
                        }
                      ],
                      "price": {
                        "amount": "78.2300",
                        "amount_without_discount": "78.2300",
                        "currency": "popugi",
                        "is_virtual_currency": true
                      }
                    }
                  ],
                  "total_items_count": 11,
                  "has_more": true
                }
              }
            }
          }
        }
      },
      "Cart-Payment_201-admin-create-payment-token": {
        "description": "Successfully created payment token and order.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Payment token."
                },
                "order_id": {
                  "type": "integer",
                  "example": 1,
                  "description": "Order ID."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "token": "huooAqbXBSJxB8Q4dYBqJp4ybiInqsPb",
                  "order_id": 12345
                }
              }
            }
          }
        }
      },
      "Cart-Payment_401-invalid-basic-auth": {
        "description": "Basic authentication not passed or wrong. Make sure you used basic authentication or correct credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1020
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 401,
                  "errorCode": 1020,
                  "errorMessage": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            }
          }
        }
      },
      "Cart-Payment_422-admin-create-payment-token": {
        "description": "Request body and creating cart validation error.\n- Invalid cart, created from passed items. Checks that the cart is not empty and that all items are not free.\n- Invalid request body.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/422-invalid-request"
            },
            "examples": {
              "Invalid request body": {
                "value": {
                  "errorCode": 1102,
                  "statusCode": 422,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `name` is required",
                  "transactionId": "da145238620011eb8e24fe6913ff226a"
                }
              },
              "Item is free": {
                "value": {
                  "errorCode": 1421,
                  "statusCode": 422,
                  "errorMessage": "[0401-1421]: Item is free",
                  "transactionId": "da145238620011eb8e24fe6913ff226a"
                }
              },
              "Invalid cart": {
                "value": {
                  "errorCode": 1401,
                  "statusCode": 422,
                  "errorMessage": "[0401-1401]: Invalid cart",
                  "transactionId": "da145238620011eb8e24fe6913ff226a"
                }
              },
              "Empty cart": {
                "value": {
                  "errorCode": 1417,
                  "statusCode": 422,
                  "errorMessage": "[0401-1417]: Empty cart! Cart shouldn't be empty!",
                  "transactionId": "da145238620011eb8e24fe6913ff226a"
                }
              },
              "User country not provided": {
                "value": {
                  "errorCode": 1102,
                  "statusCode": 422,
                  "errorMessage": "[0401-1102]: The parameter user.country.value or the header X-User-Ip must be specified",
                  "transactionId": "da145238620011eb8e24fe6913ff226a"
                }
              }
            }
          }
        }
      },
      "Cart-Payment_200-admin-fill-cart-json-model": {
        "description": "The cart with items was successfully returned.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cart_id": {
                  "type": "string",
                  "example": "cart_id",
                  "description": "Cart ID. Pass it to query for buy page or payment API endpoints."
                },
                "price": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "amount_without_discount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  },
                  "description": "Cart price."
                },
                "is_free": {
                  "$ref": "#/components/schemas/value-cart_is_free"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Cart-Payment_client-attributes"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "is_bonus": {
                        "type": "boolean"
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "can_be_bought": {
                        "$ref": "#/components/schemas/Can_be_bought"
                      },
                      "vp_rewards": {
                        "$ref": "#/components/schemas/client-item-value-point-reward"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Catalog_item_limits"
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods"
                      },
                      "price": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "amount": {
                            "type": "string"
                          },
                          "amount_without_discount": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          }
                        },
                        "description": "Item price."
                      },
                      "virtual_prices": {
                        "$ref": "#/components/schemas/Bundles_virtual_prices"
                      }
                    }
                  }
                },
                "promotions": {
                  "$ref": "#/components/schemas/Catalog_cart_promotions"
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "errorCode": {
                        "type": "integer"
                      },
                      "errorMessage": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "cart_id": "cart_id",
                  "is_free": false,
                  "items": [
                    {
                      "attributes": [],
                      "description": "The cup of tea",
                      "groups": [
                        {
                          "external_id": "cups",
                          "name": "Cups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "is_free": false,
                      "is_bonus": false,
                      "name": "Cup",
                      "price": {
                        "amount": "5.99",
                        "amount_without_discount": "5.99",
                        "currency": "USD"
                      },
                      "quantity": 2,
                      "sku": "com.xsolla.cup01",
                      "type": "physical_good",
                      "virtual_prices": [],
                      "promotions": [],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    },
                    {
                      "attributes": [],
                      "description": "Wonderful white T-shirt",
                      "groups": [],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "is_free": false,
                      "is_bonus": false,
                      "name": "White T-shirt",
                      "price": {
                        "amount": "3.99",
                        "amount_without_discount": "4.99",
                        "currency": "USD"
                      },
                      "quantity": 1,
                      "sku": "com.xsolla.t-shirt01",
                      "type": "physical_good",
                      "virtual_prices": [],
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    },
                    {
                      "attributes": [],
                      "description": "Wonderful white T-shirt",
                      "groups": [
                        {
                          "external_id": "clothes",
                          "name": "Clothes"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "is_free": true,
                      "is_bonus": false,
                      "name": "Cat's cup",
                      "price": null,
                      "quantity": 1,
                      "sku": "com.xsolla.cup01",
                      "type": "physical_good",
                      "virtual_prices": [],
                      "promotions": [],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    }
                  ],
                  "warnings": [
                    {
                      "sku": "com.xsolla.hat01",
                      "quantity": 1,
                      "errorCode": 4001,
                      "errorMessage": "[0401-4001]: Item with Project Id = 44056 and Sku = hut01 not found"
                    }
                  ],
                  "price": {
                    "amount": "15.97",
                    "amount_without_discount": "22.96",
                    "currency": "USD"
                  },
                  "promotions": [
                    {
                      "name": "Bonus promotion",
                      "date_start": "2020-04-15T16:16:00+03:00",
                      "date_end": "2026-04-15T16:16:00+03:00",
                      "discount": {
                        "percent": "50.00"
                      },
                      "bonus": [
                        {
                          "quantity": 1,
                          "name": "Xsolla Minigun",
                          "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                          "sku": "com.xsolla.minigun_1",
                          "type": "virtual_good"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Cart-Payment_404-user": {
        "description": "The user was not found. Make sure the `x-user-for` or `x-user-id` token is correct.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 5008
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-5008]: Could not find User"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Common_401-invalid-basic-auth": {
        "description": "Basic authentication not passed or wrong. Make sure you used basic authentication or correct credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1020
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 401,
                  "errorCode": 1020,
                  "errorMessage": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            }
          }
        }
      },
      "Promotions_401-invalid-client-auth": {
        "description": "Authentication not passed or wrong.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1501
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1501]: Authorization failed: Provide authorization"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 401,
                  "errorCode": 1501,
                  "errorMessage": "[0401-1501]: Authorization failed: Provide authorization"
                }
              }
            }
          }
        }
      },
      "Upsell-404-item-not-found": {
        "description": "Item not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-4001]: Items weren't found: sku1, sku2"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 404,
                  "errorCode": 9901,
                  "errorMessage": "[0401-4001]: Items weren't found: sku1, sku2"
                }
              }
            }
          }
        }
      },
      "Upsell-422-invalid-request": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Upsell-422-invalid-request"
            }
          }
        }
      },
      "Upsell-200-get-client-list": {
        "description": "The list of upsell items was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Upsell_item-list"
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": true,
                  "items": [
                    {
                      "sku": "com.xsolla.big_rocket_1",
                      "name": "Big Rocket",
                      "groups": [
                        {
                          "external_id": "accessory",
                          "name": {
                            "en": "accessory"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": {
                            "en": "Quantity of items in the upsell set"
                          },
                          "values": [
                            {
                              "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "5"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_good",
                      "description": "Big Rocket - description",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                      "is_free": false,
                      "price": {
                        "amount": "100.99",
                        "amount_without_discount": "100.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.vc_1",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": null,
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            },
                            {
                              "quantity": 1,
                              "sku": "com.xsolla.phys_good_1",
                              "type": "physical_good"
                            },
                            {
                              "quantity": 1,
                              "name": "Super Lootbox with items",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/9676f06265375087e607cb79c5283688.png",
                              "sku": "com.xsolla.SuperLootboxBundle_1",
                              "type": "bundle",
                              "bundle_type": "standard"
                            }
                          ]
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ],
                      "custom_attributes": {
                        "purchased": 0,
                        "attr": "value"
                      },
                      "vp_rewards": []
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_1",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "groups": [
                        {
                          "external_id": "hair",
                          "name": {
                            "en": "hair"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": {
                            "en": "Quantity of items in the upsell set"
                          },
                          "values": [
                            {
                              "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "5"
                            }
                          ]
                        },
                        {
                          "external_id": "rating",
                          "name": {
                            "en": "Items rating"
                          },
                          "values": [
                            {
                              "external_id": "rating_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "3.9"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_good",
                      "description": "description",
                      "image_url": "http://image.png",
                      "is_free": false,
                      "price": {
                        "amount": "101.0",
                        "amount_without_discount": "101.0",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.vc_2",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        },
                        {
                          "amount": 200,
                          "sku": "com.xsolla.vc_3",
                          "is_default": false,
                          "amount_without_discount": 200,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [],
                      "limits": null,
                      "periods": [
                        {
                          "date_from": "2020-08-11T20:00:00+03:00",
                          "date_until": null
                        }
                      ],
                      "vp_rewards": []
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_2",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "groups": [],
                      "attributes": [],
                      "type": "virtual_good",
                      "description": "description",
                      "image_url": "http://image.png",
                      "is_free": true,
                      "price": null,
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [],
                      "limits": null,
                      "periods": [],
                      "vp_rewards": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Game-Keys_200-get-games-catalog": {
        "description": "The list of games was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with games.",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "items": {
                  "type": "array",
                  "example": [
                    {
                      "sku": "com.xsolla.game_1",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        },
                        {
                          "external_id": "Xsolla",
                          "name": "Xsolla games"
                        }
                      ],
                      "type": "unit",
                      "unit_type": "game",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "external_id": "23fda05111c125608af8f1fa0e99db45a10ea1cc",
                              "value": "Horror"
                            }
                          ]
                        }
                      ],
                      "promotions": [],
                      "unit_items": [
                        {
                          "sku": "com.xsolla.game_key_01",
                          "type": "game_key",
                          "is_free": false,
                          "price": {
                            "amount": "30.5",
                            "amount_without_discount": "30.5",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "drm_name": "Steam",
                          "drm_sku": "steam_key_1",
                          "has_keys": true,
                          "is_pre_order": true,
                          "release_date": "2020-08-11T10:00:00+03:00",
                          "promotions": [],
                          "periods": [
                            {
                              "date_from": "2020-08-11T10:00:00+03:00",
                              "date_until": "2020-08-11T20:00:00+03:00"
                            }
                          ]
                        },
                        {
                          "sku": "com.xsolla.game_key_02",
                          "type": "game_key",
                          "is_free": false,
                          "price": {
                            "amount": "30.5",
                            "amount_without_discount": "30.5",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "drm_name": "Origin",
                          "drm_sku": "origin_key_1",
                          "has_keys": false,
                          "is_pre_order": false,
                          "release_date": null,
                          "promotions": [],
                          "periods": []
                        }
                      ]
                    },
                    {
                      "sku": "com.xsolla.game_2",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        }
                      ],
                      "type": "unit",
                      "unit_type": "game",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "OS",
                          "name": "OS",
                          "values": [
                            {
                              "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                              "value": "Windows"
                            }
                          ]
                        }
                      ],
                      "promotions": [],
                      "unit_items": [
                        {
                          "sku": "com.xsolla.game_key_01",
                          "type": "game_key",
                          "is_free": false,
                          "price": {
                            "amount": "30.5",
                            "amount_without_discount": "30.5",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "drm_name": "Steam",
                          "drm_sku": "steam_key_2",
                          "has_keys": false,
                          "is_pre_order": false,
                          "release_date": null,
                          "promotions": [],
                          "periods": [
                            {
                              "date_from": null,
                              "date_until": "2020-08-11T20:00:00+03:00"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "example": "game_01",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "name": {
                        "type": "string",
                        "example": "Game name",
                        "description": "Item name."
                      },
                      "groups": {
                        "type": "array",
                        "example": [
                          {
                            "external_id": "all",
                            "name": "All games"
                          },
                          {
                            "external_id": "Xsolla",
                            "name": "Xsolla game"
                          }
                        ],
                        "description": "Groups the item belongs to.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string",
                              "example": "accessory"
                            },
                            "name": {
                              "type": "string",
                              "example": "Accessory"
                            }
                          }
                        }
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Game-Keys_schemas-client-attributes"
                      },
                      "type": {
                        "type": "string",
                        "example": "unit",
                        "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`physical_good`/`unit`."
                      },
                      "unit_type": {
                        "type": "string",
                        "example": "game",
                        "description": "Type of unit: `game`."
                      },
                      "description": {
                        "type": "string",
                        "example": "Game description",
                        "description": "Item description."
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                        "description": "Image URL."
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "unit_items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "sku": {
                              "type": "string",
                              "example": "game_01",
                              "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                            },
                            "type": {
                              "type": "string",
                              "example": "game_key",
                              "description": "Type of item: `game_key`."
                            },
                            "is_free": {
                              "$ref": "#/components/schemas/value-is_free"
                            },
                            "price": {
                              "type": "object",
                              "description": "Item prices.",
                              "properties": {
                                "amount": {
                                  "type": "string",
                                  "example": "2.9900",
                                  "description": "Discounted item price."
                                },
                                "amount_without_discount": {
                                  "type": "string",
                                  "example": "2.9900",
                                  "description": "Item price."
                                },
                                "currency": {
                                  "type": "string",
                                  "example": "USD",
                                  "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                                }
                              }
                            },
                            "virtual_prices": {
                              "type": "array",
                              "description": "Virtual prices.",
                              "items": {
                                "type": "object",
                                "description": "Virtual price.",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "example": 100,
                                    "description": "Discounted item price in virtual currency."
                                  },
                                  "amount_without_discount": {
                                    "type": "integer",
                                    "example": 200,
                                    "description": "Item price."
                                  },
                                  "sku": {
                                    "type": "string",
                                    "example": "vc_test",
                                    "description": "Virtual currency item SKU."
                                  },
                                  "is_default": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "Whether price is default for item."
                                  },
                                  "image_url": {
                                    "type": "string",
                                    "example": "http://image.png",
                                    "description": "Image of virtual currency."
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "SHOTGUN FOR TRUE RAIDERS",
                                    "description": "Virtual currency name."
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "virtual_currency",
                                    "description": "Virtual currency type."
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "Big Rocket - description",
                                    "description": "Virtual currency description."
                                  }
                                }
                              }
                            },
                            "can_be_bought": {
                              "$ref": "#/components/schemas/Can_be_bought"
                            },
                            "drm_name": {
                              "type": "string",
                              "example": "Steam",
                              "description": "DRM name."
                            },
                            "drm_sku": {
                              "type": "string",
                              "example": "steam",
                              "description": "Unique DRM ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                            },
                            "has_keys": {
                              "type": "boolean",
                              "example": false,
                              "description": "If `true`, the game key has keys for sale."
                            },
                            "is_pre_order": {
                              "type": "boolean",
                              "example": true,
                              "description": "If `true`, the game key is pre-order and the release date hasn't passed."
                            },
                            "release_date": {
                              "type": "string",
                              "example": "2020-08-11T10:00:00+03:00",
                              "description": "Game key release date in the ISO 8601 format.",
                              "nullable": true
                            },
                            "promotions": {
                              "$ref": "#/components/schemas/Catalog_item_promotions"
                            },
                            "periods": {
                              "$ref": "#/components/schemas/item-periods"
                            },
                            "vp_rewards": {
                              "$ref": "#/components/schemas/client-item-value-point-reward"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": false,
                  "items": [
                    {
                      "sku": "com.xsolla.game_1",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        },
                        {
                          "external_id": "Xsolla",
                          "name": "Xsolla games"
                        }
                      ],
                      "type": "unit",
                      "unit_type": "game",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "external_id": "23fda05111c125608af8f1fa0e99db45a10ea1cc",
                              "value": "Horror"
                            }
                          ]
                        }
                      ],
                      "promotions": [],
                      "unit_items": [
                        {
                          "sku": "com.xsolla.game_key_01",
                          "type": "game_key",
                          "is_free": false,
                          "price": {
                            "amount": "30.5",
                            "amount_without_discount": "30.5",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "drm_name": "Steam",
                          "drm_sku": "steam_key_1",
                          "has_keys": true,
                          "is_pre_order": true,
                          "release_date": "2020-08-11T10:00:00+03:00",
                          "periods": [
                            {
                              "date_from": "2020-08-11T10:00:00+03:00",
                              "date_until": "2020-08-11T20:00:00+03:00"
                            }
                          ],
                          "vp_rewards": [
                            {
                              "item_id": 175232,
                              "sku": "com.xsolla.value_point_1",
                              "amount": 130,
                              "name": "Value point",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                            },
                            {
                              "item_id": 186321,
                              "sku": "com.xsolla.clan_value_point_1",
                              "amount": 50,
                              "name": "Clan Reward VP 1",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                              "is_clan": true
                            }
                          ]
                        },
                        {
                          "sku": "com.xsolla.game_key_02",
                          "type": "game_key",
                          "is_free": false,
                          "price": {
                            "amount": "30.5",
                            "amount_without_discount": "30.5",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "drm_name": "Origin",
                          "drm_sku": "origin_key_1",
                          "has_keys": false,
                          "is_pre_order": false,
                          "release_date": null,
                          "periods": [],
                          "vp_rewards": []
                        }
                      ]
                    },
                    {
                      "sku": "com.xsolla.game_2",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        }
                      ],
                      "type": "unit",
                      "unit_type": "game",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "OS",
                          "name": "OS",
                          "values": [
                            {
                              "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                              "value": "Windows"
                            }
                          ]
                        }
                      ],
                      "promotions": [],
                      "unit_items": [
                        {
                          "sku": "com.xsolla.game_key_01",
                          "type": "game_key",
                          "is_free": false,
                          "price": {
                            "amount": "30.5",
                            "amount_without_discount": "30.5",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "drm_name": "Steam",
                          "drm_sku": "steam_key_1",
                          "has_keys": false,
                          "is_pre_order": false,
                          "release_date": null,
                          "periods": [
                            {
                              "date_from": "2020-08-11T20:00:00+03:00",
                              "date_until": null
                            }
                          ],
                          "vp_rewards": []
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Game-Keys_200-get-game-keys-by-group-catalog": {
        "description": "The list of game keys was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with games.",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "items": {
                  "type": "array",
                  "example": [
                    {
                      "sku": "com.xsolla.game_1",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        },
                        {
                          "external_id": "Xsolla",
                          "name": "Xsolla games"
                        }
                      ],
                      "type": "game_key",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "OS",
                          "name": "OS",
                          "values": [
                            {
                              "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                              "value": "Windows"
                            }
                          ]
                        },
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "external_id": "23fda05111c125608af8f1fa0e99db45a10ea1cc",
                              "value": "Horror"
                            }
                          ]
                        }
                      ],
                      "is_free": false,
                      "price": {
                        "amount": "30.5",
                        "amount_without_discount": "30.5",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "drm_name": "Steam",
                      "drm_sku": "steam_key_1",
                      "has_keys": true,
                      "is_pre_order": true,
                      "release_date": "2020-08-11T10:00:00+03:00",
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    },
                    {
                      "sku": "com.xsolla.game_2",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        }
                      ],
                      "type": "game_key",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "OS",
                          "name": "OS",
                          "values": [
                            {
                              "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                              "value": "Windows"
                            }
                          ]
                        },
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "external_id": "23fda05111c125608af8f1fa0e99db45a10ea1cc",
                              "value": "Horror"
                            }
                          ]
                        }
                      ],
                      "is_free": false,
                      "price": {
                        "amount": "30.5",
                        "amount_without_discount": "30.5",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "drm_name": "Steam",
                      "drm_sku": "steam_key_2",
                      "has_keys": true,
                      "is_pre_order": false,
                      "release_date": null,
                      "periods": []
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "example": "game_01",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "name": {
                        "type": "string",
                        "example": "Game name",
                        "description": "Item name."
                      },
                      "groups": {
                        "type": "array",
                        "example": [
                          {
                            "external_id": "all",
                            "name": "All games"
                          },
                          {
                            "external_id": "Xsolla",
                            "name": "Xsolla game"
                          }
                        ],
                        "description": "Groups the item belongs to.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string",
                              "example": "accessory"
                            },
                            "name": {
                              "type": "string",
                              "example": "Accessory"
                            }
                          }
                        }
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Game-Keys_schemas-client-attributes"
                      },
                      "type": {
                        "type": "string",
                        "example": "game_key",
                        "description": "Type of item: `game_key`."
                      },
                      "description": {
                        "type": "string",
                        "example": "Game description",
                        "description": "Item description."
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                        "description": "Image URL."
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "price": {
                        "type": "object",
                        "description": "Item prices.",
                        "properties": {
                          "amount": {
                            "type": "string",
                            "example": "2.9900",
                            "description": "Discounted item price."
                          },
                          "amount_without_discount": {
                            "type": "string",
                            "example": "2.9900",
                            "description": "Item price."
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD",
                            "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                          }
                        }
                      },
                      "virtual_prices": {
                        "type": "array",
                        "description": "Virtual prices.",
                        "items": {
                          "type": "object",
                          "description": "Virtual price.",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "example": 100,
                              "description": "Discounted item price in virtual currency."
                            },
                            "amount_without_discount": {
                              "type": "integer",
                              "example": 200,
                              "description": "Item price."
                            },
                            "sku": {
                              "type": "string",
                              "example": "vc_test",
                              "description": "Virtual currency item SKU."
                            },
                            "is_default": {
                              "type": "boolean",
                              "example": true,
                              "description": "Whether price is default for item."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "http://image.png",
                              "description": "Image of virtual currency."
                            },
                            "name": {
                              "type": "string",
                              "example": "SHOTGUN FOR TRUE RAIDERS",
                              "description": "Virtual currency name."
                            },
                            "type": {
                              "type": "string",
                              "example": "virtual_currency",
                              "description": "Virtual currency type."
                            },
                            "description": {
                              "type": "string",
                              "example": "Big Rocket - description",
                              "description": "Virtual currency description."
                            }
                          }
                        }
                      },
                      "drm_name": {
                        "type": "string",
                        "example": "Steam",
                        "description": "DRM name."
                      },
                      "drm_sku": {
                        "type": "string",
                        "example": "steam",
                        "description": "Unique DRM ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "has_keys": {
                        "type": "boolean",
                        "example": false,
                        "description": "If `true`, the game key has keys for sale."
                      },
                      "is_pre_order": {
                        "type": "boolean",
                        "example": true,
                        "description": "If `true`, the game key is pre-order and the release date hasn't passed."
                      },
                      "release_date": {
                        "type": "string",
                        "example": "2020-08-11T10:00:00+03:00",
                        "description": "Game key release date in the ISO 8601 format.",
                        "nullable": true
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods-response"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": true,
                  "items": [
                    {
                      "sku": "com.xsolla.game_1",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        },
                        {
                          "external_id": "Xsolla",
                          "name": "Xsolla games"
                        }
                      ],
                      "type": "game_key",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "OS",
                          "name": "OS",
                          "values": [
                            {
                              "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                              "value": "Windows"
                            }
                          ]
                        },
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "external_id": "23fda05111c125608af8f1fa0e99db45a10ea1cc",
                              "value": "Horror"
                            }
                          ]
                        }
                      ],
                      "is_free": false,
                      "price": {
                        "amount": "30.5",
                        "amount_without_discount": "30.5",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "drm_name": "Steam",
                      "drm_sku": "steam_key_1",
                      "has_keys": true,
                      "is_pre_order": true,
                      "release_date": "2020-08-11T10:00:00+03:00",
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    },
                    {
                      "sku": "com.xsolla.game_2",
                      "name": "Game name",
                      "groups": [
                        {
                          "external_id": "all",
                          "name": "All games"
                        }
                      ],
                      "type": "game_key",
                      "description": "Game description",
                      "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "attributes": [
                        {
                          "external_id": "OS",
                          "name": "OS",
                          "values": [
                            {
                              "external_id": "9d5c5efb7c0f00a00fe4e3583f1215b0050bc723",
                              "value": "Windows"
                            }
                          ]
                        },
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "external_id": "23fda05111c125608af8f1fa0e99db45a10ea1cc",
                              "value": "Horror"
                            }
                          ]
                        }
                      ],
                      "is_free": false,
                      "price": {
                        "amount": "30.5",
                        "amount_without_discount": "30.5",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "drm_name": "Steam",
                      "drm_sku": "steam_key_2",
                      "has_keys": true,
                      "is_pre_order": false,
                      "release_date": null,
                      "periods": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Game-Keys_200-get-drm-list": {
        "description": "The list of DRMs was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with games.",
              "properties": {
                "drm": {
                  "type": "array",
                  "example": [
                    {
                      "sku": "steam_key_1",
                      "name": "Steam",
                      "image": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "link": "https://support.steampowered.com",
                      "redeem_instruction_link": "https://support.steampowered.com",
                      "drm_id": 1
                    },
                    {
                      "sku": "playstation_key_1",
                      "name": "Playstation",
                      "image": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "link": null,
                      "redeem_instruction_link": "https://support.us.playstation.com",
                      "drm_id": 2
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "example": "steam",
                        "description": "Unique DRM ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "name": {
                        "type": "string",
                        "example": "Steam",
                        "description": "DRM name."
                      },
                      "image": {
                        "type": "string",
                        "example": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                        "description": "Image URL."
                      },
                      "link": {
                        "type": "string",
                        "example": "https://support.us.playstation.com",
                        "description": "Redeem link.",
                        "nullable": true
                      },
                      "redeem_instruction_link": {
                        "type": "string",
                        "example": "https://support.us.playstation.com",
                        "description": "Redeem instruction link."
                      },
                      "drm_id": {
                        "type": "number",
                        "example": 1,
                        "description": "DRM ID."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "drm": [
                    {
                      "sku": "steam_key_1",
                      "name": "Steam",
                      "image": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "link": "https://support.steampowered.com",
                      "redeem_instruction_link": "https://support.steampowered.com",
                      "drm_id": 1
                    },
                    {
                      "sku": "playstation_key_1",
                      "name": "Playstation",
                      "image": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                      "link": null,
                      "redeem_instruction_link": "https://support.us.playstation.com",
                      "drm_id": 2
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Game-Keys_200-admin-get-games-list": {
        "description": "The list of games was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with games.",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_id": {
                        "type": "integer",
                        "example": 1,
                        "description": "Internal unique item ID that is provided upon item creation."
                      },
                      "sku": {
                        "type": "string",
                        "example": "game_1",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "type": {
                        "type": "string",
                        "example": "unit",
                        "description": "Type of item. In this case it is always `unit`."
                      },
                      "name": {
                        "$ref": "#/components/schemas/name-localization-object"
                      },
                      "description": {
                        "$ref": "#/components/schemas/description-localization-object"
                      },
                      "long_description": {
                        "$ref": "#/components/schemas/long-description-localization-object"
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://image.example.com",
                        "description": "Image URL."
                      },
                      "media_list": {
                        "type": "array",
                        "example": [
                          {
                            "type": "image",
                            "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
                          }
                        ],
                        "description": "Game additional assets such as screenshots, gameplay video and so on.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "image",
                                "video"
                              ],
                              "example": "image",
                              "description": "Type of media: `image`/`video`."
                            },
                            "url": {
                              "type": "string",
                              "example": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg",
                              "description": "Resource file."
                            }
                          }
                        }
                      },
                      "is_enabled": {
                        "type": "boolean",
                        "description": "If disabled, item cannot be purchased and accessed through inventory."
                      },
                      "is_show_in_store": {
                        "type": "boolean",
                        "description": "Item is available for purchase."
                      },
                      "order": {
                        "type": "integer",
                        "example": 1,
                        "description": "Game order priority in the list."
                      },
                      "groups": {
                        "type": "array",
                        "example": [
                          {
                            "external_id": "horror",
                            "name": {
                              "en": "Horror"
                            }
                          }
                        ],
                        "description": "Groups the item belongs to.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string",
                              "example": "horror"
                            },
                            "name": {
                              "type": "object",
                              "example": {
                                "en": "Horror"
                              }
                            }
                          }
                        }
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Game-Keys_admin-attributes"
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "unit_items": {
                        "type": "array",
                        "description": "Game keys for different DRMs.",
                        "items": {
                          "type": "object",
                          "description": "Game key item. It represents game on a certain platform (steam, gog, etc.).",
                          "properties": {
                            "item_id": {
                              "type": "integer",
                              "example": 1,
                              "description": "Internal unique item ID that is provided upon item creation."
                            },
                            "sku": {
                              "type": "string",
                              "example": "game_1",
                              "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                            },
                            "type": {
                              "type": "string",
                              "example": "game_key",
                              "description": "Type of item. In this case it is always `game_key`."
                            },
                            "is_free": {
                              "$ref": "#/components/schemas/value-is_free"
                            },
                            "prices": {
                              "type": "array",
                              "description": "Prices in real currencies.",
                              "example": [
                                {
                                  "amount": 1299.99,
                                  "currency": "RUB",
                                  "is_default": true,
                                  "is_enabled": true
                                }
                              ],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "example": 1299.99
                                  },
                                  "currency": {
                                    "type": "string",
                                    "example": "RUB",
                                    "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                                  },
                                  "is_default": {
                                    "type": "boolean",
                                    "description": "Default price is used to build catalog if no price in user's currency is specified."
                                  },
                                  "is_enabled": {
                                    "type": "boolean"
                                  },
                                  "country_iso": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "US",
                                    "description": "Country where this price is available. Two-letter code per [ISO 3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)."
                                  }
                                }
                              }
                            },
                            "virtual_prices": {
                              "type": "array",
                              "example": [
                                {
                                  "sku": "com.xsolla.gold_1",
                                  "name": {
                                    "en": "Gold"
                                  },
                                  "type": "virtual_currency",
                                  "description": null,
                                  "image_url": "https://i.pinimg.com/originals/91/ae/56/91ae5683045f6dbef16b1482bade938f.png",
                                  "amount": 1000,
                                  "is_default": true
                                }
                              ],
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "sku": {
                                    "type": "string",
                                    "example": "gold",
                                    "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                                  },
                                  "name": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "example": {
                                      "en": "Gold"
                                    },
                                    "description": "Object with localizations for virtual currency's name. Keys are specified in ISO 3166-1."
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "virtual_currency",
                                    "description": "Type of item. In this case it is always `virtual_currency`."
                                  },
                                  "description": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "example": {
                                      "en": "Game 1 Example"
                                    },
                                    "description": "Object with localizations for game description. Keys are specified in ISO 3166-1.",
                                    "nullable": true
                                  },
                                  "image_url": {
                                    "type": "string",
                                    "example": "https://image.example.com",
                                    "description": "Image URL."
                                  },
                                  "amount": {
                                    "type": "number"
                                  },
                                  "is_default": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "order": {
                              "type": "integer",
                              "example": 1,
                              "description": "Game order priority in the list."
                            },
                            "is_enabled": {
                              "type": "boolean",
                              "description": "If disabled, item cannot be purchased and accessed through inventory."
                            },
                            "is_show_in_store": {
                              "type": "boolean",
                              "description": "Item is available for purchase."
                            },
                            "drm_name": {
                              "type": "string",
                              "example": "Steam",
                              "description": "Game key DRM name."
                            },
                            "drm_sku": {
                              "type": "string",
                              "example": "steam",
                              "description": "DRM unique ID."
                            },
                            "drm_image": {
                              "type": "string",
                              "example": "https://upload.wikimedia.org/wikipedia/en/4/48/Steam_Icon_2014.png",
                              "description": "Game key DRM icon.",
                              "nullable": true
                            },
                            "drm_id": {
                              "type": "integer",
                              "example": 1,
                              "description": "DRM internal unique ID."
                            },
                            "keys": {
                              "type": "object",
                              "properties": {
                                "available": {
                                  "type": "integer",
                                  "description": "Number of keys available for purchase."
                                },
                                "total": {
                                  "type": "integer",
                                  "description": "Total number of uploaded keys."
                                },
                                "used": {
                                  "type": "integer",
                                  "description": "Number of sold keys."
                                }
                              }
                            },
                            "is_sales_exist": {
                              "type": "boolean",
                              "description": "If `true`, the game key was purchased by users."
                            },
                            "pre_order": {
                              "type": "object",
                              "description": "Pre-order settings.",
                              "properties": {
                                "release_date": {
                                  "type": "string",
                                  "description": "Game key release date in the ISO 8601 format.",
                                  "nullable": true
                                },
                                "is_enabled": {
                                  "type": "boolean",
                                  "description": "If disabled, the item is not a pre-order."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Additional information for the pre-order which will be emailed.",
                                  "nullable": true
                                }
                              }
                            },
                            "regions": {
                              "$ref": "#/components/schemas/Game-Keys_regions"
                            },
                            "limits": {
                              "$ref": "#/components/schemas/item-limit-response"
                            },
                            "periods": {
                              "$ref": "#/components/schemas/item-periods-response"
                            },
                            "name": {
                              "$ref": "#/components/schemas/name-localization-object"
                            },
                            "attributes": {
                              "$ref": "#/components/schemas/Game-Keys_admin-attributes"
                            },
                            "long_description": {
                              "$ref": "#/components/schemas/long-description-localization-object"
                            },
                            "groups": {
                              "type": "array",
                              "example": [
                                {
                                  "external_id": "horror",
                                  "name": {
                                    "en": "Horror"
                                  }
                                }
                              ],
                              "description": "Groups the item belongs to.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "external_id": {
                                    "type": "string",
                                    "example": "horror"
                                  },
                                  "name": {
                                    "type": "object",
                                    "example": {
                                      "en": "Horror"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "items": [
                    {
                      "item_id": 1,
                      "sku": "com.xsolla.game_1",
                      "type": "unit",
                      "name": {
                        "en": "Game 1"
                      },
                      "description": {
                        "en": "Example game 1"
                      },
                      "long_description": {
                        "en": "Example game's long description"
                      },
                      "image_url": "https://image.example.com",
                      "media_list": [
                        {
                          "type": "image",
                          "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
                        }
                      ],
                      "order": 1,
                      "groups": [
                        {
                          "external_id": "horror",
                          "name": {
                            "en": "Horror"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "platform",
                          "name": {
                            "en-US": "Platform"
                          },
                          "values": [
                            {
                              "external_id": "platform_value_d847f9a494487f5e95ad218f7beecac646f15989",
                              "value": {
                                "en-US": "Windows, Linux",
                                "de-DE": "Windows, Linux"
                              }
                            }
                          ]
                        }
                      ],
                      "is_free": false,
                      "is_enabled": true,
                      "is_show_in_store": false,
                      "unit_items": [
                        {
                          "item_id": 3,
                          "sku": "com.xsolla.game_1_key_1",
                          "type": "game_key",
                          "is_free": false,
                          "prices": [
                            {
                              "amount": 1199.99,
                              "currency": "RUB",
                              "is_default": true,
                              "is_enabled": true,
                              "country_iso": "RU"
                            }
                          ],
                          "virtual_prices": [],
                          "order": 1,
                          "is_enabled": true,
                          "is_show_in_store": false,
                          "drm_name": "Steam",
                          "drm_sku": "steam_key_1",
                          "drm_image": "https://upload.wikimedia.org/wikipedia/en/4/48/Steam_Icon_2014.png",
                          "drm_id": 1,
                          "keys": {
                            "available": 3,
                            "total": 4,
                            "used": 1
                          },
                          "is_sales_exist": false,
                          "pre_order": {
                            "release_date": null,
                            "is_enabled": false,
                            "description": null
                          },
                          "limits": {
                            "per_user": {
                              "total": 10
                            },
                            "per_item": {
                              "total": 10000,
                              "available": 5000,
                              "reserved": 500,
                              "sold": 4500
                            },
                            "recurrent_schedule": {
                              "per_user": {
                                "interval_type": "daily",
                                "day_of_week": null,
                                "day_of_month": null,
                                "time": "11:00:00+08:00",
                                "reset_next_date": 1677553200,
                                "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                                "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                              }
                            }
                          },
                          "periods": [
                            {
                              "date_from": "2020-08-11T20:00:00+03:00",
                              "date_until": null
                            }
                          ]
                        },
                        {
                          "item_id": 4,
                          "sku": "com.xsolla.game_1_key_2",
                          "type": "game_key",
                          "name": {
                            "en": "Game 1 Key 2"
                          },
                          "groups": [],
                          "attributes": [],
                          "is_free": false,
                          "prices": [
                            {
                              "amount": 1299.99,
                              "currency": "RUB",
                              "is_default": true,
                              "is_enabled": true,
                              "country_iso": "RU"
                            }
                          ],
                          "virtual_prices": null,
                          "order": 1,
                          "is_enabled": true,
                          "is_show_in_store": false,
                          "drm_name": "Epic Games Store",
                          "drm_sku": "epicgames_key_1",
                          "drm_image": null,
                          "drm_id": 8,
                          "keys": {
                            "available": 0,
                            "total": 0,
                            "used": 0
                          },
                          "is_sales_exist": true,
                          "pre_order": {
                            "release_date": "2020-08-11T10:00:00+03:00",
                            "is_enabled": true,
                            "description": "Some description"
                          },
                          "limits": {
                            "per_user": null,
                            "per_item": null,
                            "recurrent_schedule": null
                          },
                          "periods": []
                        }
                      ]
                    },
                    {
                      "item_id": 2,
                      "sku": "com.xsolla.game_2",
                      "type": "unit",
                      "name": {
                        "en": "Game 2"
                      },
                      "description": {
                        "en": "Example game 2"
                      },
                      "long_description": {
                        "en": "Example game's long description"
                      },
                      "image_url": "https://image.example.com",
                      "media_list": [],
                      "order": 1,
                      "groups": [
                        {
                          "external_id": "horror",
                          "name": {
                            "en": "Horror"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "platform",
                          "name": {
                            "en-US": "Platform"
                          },
                          "values": [
                            {
                              "external_id": "platform_value_d847f9a494487f5e95ad218f7beecac646f15989",
                              "value": {
                                "en-US": "Windows, Linux",
                                "de-DE": "Windows, Linux"
                              }
                            }
                          ]
                        }
                      ],
                      "is_free": false,
                      "is_enabled": true,
                      "is_show_in_store": true,
                      "unit_items": [
                        {
                          "item_id": 5,
                          "sku": "com.xsolla.game_2_key_2",
                          "type": "game_key",
                          "is_free": false,
                          "prices": [],
                          "virtual_prices": [
                            {
                              "sku": "com.xsolla.gold_1",
                              "name": {
                                "en": "Gold"
                              },
                              "type": "virtual_currency",
                              "description": null,
                              "image_url": "https://i.pinimg.com/originals/91/ae/56/91ae5683045f6dbef16b1482bade938f.png",
                              "amount": 1000,
                              "is_default": true
                            }
                          ],
                          "order": 1,
                          "is_enabled": false,
                          "is_show_in_store": false,
                          "drm_name": "Epic Games Store",
                          "drm_sku": "epicgames_key_1",
                          "drm_image": null,
                          "drm_id": 8,
                          "keys": {
                            "available": 0,
                            "total": 0,
                            "used": 0
                          },
                          "is_sales_exist": true,
                          "pre_order": {
                            "release_date": null,
                            "is_enabled": false,
                            "description": null
                          },
                          "limits": {
                            "per_user": {
                              "total": 10
                            },
                            "per_item": {
                              "total": 10000,
                              "available": 5000,
                              "reserved": 500,
                              "sold": 4500
                            },
                            "recurrent_schedule": {
                              "per_user": {
                                "interval_type": "daily",
                                "day_of_week": null,
                                "day_of_month": null,
                                "time": "11:00:00+08:00",
                                "reset_next_date": 1677553200,
                                "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                                "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                              }
                            }
                          },
                          "periods": [
                            {
                              "date_from": "2020-08-11T10:00:00+03:00",
                              "date_until": "2020-08-11T20:00:00+03:00"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Game-Keys_401-invalid-basic-auth": {
        "description": "Basic authentication not passed or wrong. Make sure you used basic authentication or correct credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1020
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 401,
                  "errorCode": 1020,
                  "errorMessage": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            }
          }
        }
      },
      "Game-Keys_422-invalid-request": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Game-Keys_422-invalid-request"
            },
            "examples": {
              "The property `drm_sku` is required": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `drm_sku` is required"
                }
              },
              "Numbers of attribute values per item exceeded": {
                "$ref": "#/components/examples/422-numbers-of-attribute-values-per-item-exceeded"
              },
              "Numbers of attributes per item exceeded": {
                "$ref": "#/components/examples/422-numbers-of-attributes-per-item-exceeded"
              },
              "Value limit exceeded": {
                "$ref": "#/components/examples/422-value-limit-exceeded"
              }
            }
          }
        }
      },
      "Game-Keys_200-admin-get-game-by-sku": {
        "description": "Game was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with game information.",
              "properties": {
                "item_id": {
                  "type": "integer",
                  "example": 1,
                  "description": "Internal unique item ID that is provided upon item creation."
                },
                "sku": {
                  "type": "string",
                  "example": "game_1",
                  "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                },
                "type": {
                  "type": "string",
                  "example": "unit",
                  "description": "Type of item. In this case it is always `unit`."
                },
                "name": {
                  "$ref": "#/components/schemas/name-localization-object"
                },
                "description": {
                  "$ref": "#/components/schemas/description-localization-object"
                },
                "long_description": {
                  "$ref": "#/components/schemas/long-description-localization-object"
                },
                "image_url": {
                  "type": "string",
                  "example": "https://image.example.com",
                  "description": "Image URL."
                },
                "media_list": {
                  "type": "array",
                  "example": [
                    {
                      "type": "image",
                      "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
                    }
                  ],
                  "description": "Game additional assets such as screenshots, gameplay video and so on.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "image",
                          "video"
                        ],
                        "example": "image",
                        "description": "Type of media: `image`/`video`."
                      },
                      "url": {
                        "type": "string",
                        "example": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg",
                        "description": "Resource file."
                      }
                    }
                  }
                },
                "order": {
                  "type": "integer",
                  "example": 1,
                  "description": "Game order priority in the list."
                },
                "groups": {
                  "type": "array",
                  "example": [
                    {
                      "external_id": "horror",
                      "name": {
                        "en": "Horror"
                      }
                    }
                  ],
                  "description": "Groups the item belongs to.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "external_id": {
                        "type": "string",
                        "example": "horror"
                      },
                      "name": {
                        "type": "object",
                        "example": {
                          "en": "Horror"
                        }
                      }
                    }
                  }
                },
                "attributes": {
                  "$ref": "#/components/schemas/Game-Keys_admin-attributes"
                },
                "is_enabled": {
                  "type": "boolean"
                },
                "is_free": {
                  "$ref": "#/components/schemas/value-is_free"
                },
                "is_show_in_store": {
                  "type": "boolean"
                },
                "unit_items": {
                  "type": "array",
                  "description": "Game keys for different DRMs.",
                  "items": {
                    "type": "object",
                    "description": "Game key item. It represents game on a certain platform (steam, gog, etc.).",
                    "properties": {
                      "item_id": {
                        "type": "integer",
                        "example": 1,
                        "description": "Internal unique item ID that is provided upon item creation."
                      },
                      "sku": {
                        "type": "string",
                        "example": "game_1",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "type": {
                        "type": "string",
                        "example": "game_key",
                        "description": "Type of item. In this case it is always `game_key`."
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "prices": {
                        "type": "array",
                        "description": "Prices in real currencies.",
                        "example": [
                          {
                            "amount": 1299.99,
                            "currency": "RUB",
                            "is_default": true,
                            "is_enabled": true,
                            "country_is": "RU"
                          }
                        ],
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "example": 1299.99
                            },
                            "currency": {
                              "type": "string",
                              "example": "RUB",
                              "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                            },
                            "is_default": {
                              "type": "boolean",
                              "description": "Default price is used to build catalog if no price in user's currency is specified."
                            },
                            "is_enabled": {
                              "type": "boolean"
                            },
                            "country_iso": {
                              "type": "string",
                              "nullable": true,
                              "example": "US",
                              "description": "Country where this price is available. Two-letter code per [ISO 3166-1 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)."
                            }
                          }
                        }
                      },
                      "virtual_prices": {
                        "type": "array",
                        "example": [
                          {
                            "sku": "com.xsolla.gold_1",
                            "name": {
                              "en": "Gold"
                            },
                            "type": "virtual_currency",
                            "description": null,
                            "image_url": "https://i.pinimg.com/originals/91/ae/56/91ae5683045f6dbef16b1482bade938f.png",
                            "amount": 1000,
                            "is_default": true
                          }
                        ],
                        "items": {
                          "type": "object",
                          "properties": {
                            "sku": {
                              "type": "string",
                              "example": "gold",
                              "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                            },
                            "name": {
                              "type": "object",
                              "additionalProperties": true,
                              "example": {
                                "en": "Gold"
                              },
                              "description": "Object with localizations for virtual currency's name. Keys are specified in ISO 3166-1."
                            },
                            "type": {
                              "type": "string",
                              "example": "virtual_currency",
                              "description": "Type of item. In this case it is always `virtual_currency`."
                            },
                            "description": {
                              "type": "object",
                              "additionalProperties": true,
                              "example": {
                                "en": "Game 1 Example"
                              },
                              "description": "Object with localizations for game description. Keys are specified in ISO 3166-1."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "https://image.example.com",
                              "description": "Image URL."
                            },
                            "amount": {
                              "type": "number"
                            },
                            "is_default": {
                              "type": "boolean"
                            }
                          }
                        },
                        "nullable": true
                      },
                      "order": {
                        "type": "integer",
                        "example": 1,
                        "description": "Game order priority in the list."
                      },
                      "is_enabled": {
                        "type": "boolean",
                        "description": "If disabled, item cannot be purchased and accessed through inventory."
                      },
                      "is_show_in_store": {
                        "type": "boolean",
                        "description": "Item is available for purchase."
                      },
                      "drm_name": {
                        "type": "string",
                        "example": "Steam",
                        "description": "Game key DRM name."
                      },
                      "drm_sku": {
                        "type": "string",
                        "example": "steam",
                        "description": "DRM unique ID."
                      },
                      "drm_image": {
                        "type": "string",
                        "example": "https://upload.wikimedia.org/wikipedia/en/4/48/Steam_Icon_2014.png",
                        "description": "Game key DRM icon.",
                        "nullable": true
                      },
                      "drm_id": {
                        "type": "integer",
                        "example": 1,
                        "description": "DRM internal unique ID."
                      },
                      "keys": {
                        "type": "object",
                        "properties": {
                          "available": {
                            "type": "integer",
                            "description": "Number of keys available for purchase."
                          },
                          "total": {
                            "type": "integer",
                            "description": "Total number of uploaded keys."
                          },
                          "used": {
                            "type": "integer",
                            "description": "Number of sold keys."
                          }
                        }
                      },
                      "is_sales_exist": {
                        "type": "boolean",
                        "description": "If `true`, the game key was purchased by users."
                      },
                      "pre_order": {
                        "type": "object",
                        "description": "Pre-order settings.",
                        "properties": {
                          "release_date": {
                            "type": "string",
                            "description": "Game key release date in the ISO 8601 format.",
                            "nullable": true
                          },
                          "is_enabled": {
                            "type": "boolean",
                            "description": "If disabled, the item is not a pre-order."
                          },
                          "description": {
                            "type": "string",
                            "description": "Additional information for the pre-order which will be emailed.",
                            "nullable": true
                          }
                        }
                      },
                      "regions": {
                        "$ref": "#/components/schemas/Game-Keys_regions"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/item-limit-response"
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods-response"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "item_id": 1,
                  "sku": "com.xsolla.game_1",
                  "type": "unit",
                  "name": {
                    "en": "Game 1"
                  },
                  "description": {
                    "en": "Example game 1"
                  },
                  "long_description": {
                    "en": "Example game's long description"
                  },
                  "image_url": "https://image.example.com",
                  "media_list": [
                    {
                      "type": "image",
                      "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
                    }
                  ],
                  "order": 1,
                  "groups": [
                    {
                      "external_id": "horror",
                      "name": {
                        "en": "Horror"
                      }
                    }
                  ],
                  "attributes": [
                    {
                      "external_id": "platform",
                      "name": {
                        "en-US": "Platform"
                      },
                      "values": [
                        {
                          "external_id": "platform_value_d847f9a494487f5e95ad218f7beecac646f15989",
                          "value": {
                            "en-US": "Windows, Linux",
                            "de-DE": "Windows, Linux"
                          }
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "is_enabled": true,
                  "is_show_in_store": false,
                  "unit_items": [
                    {
                      "item_id": 3,
                      "sku": "com.xsolla.game_1_key_1",
                      "type": "game_key",
                      "is_free": false,
                      "prices": [
                        {
                          "amount": 1199.99,
                          "currency": "RUB",
                          "is_default": true,
                          "is_enabled": true,
                          "country_iso": "RU"
                        }
                      ],
                      "virtual_prices": [],
                      "order": 1,
                      "is_enabled": true,
                      "is_show_in_store": false,
                      "drm_name": "Steam",
                      "drm_sku": "steam_key_1",
                      "drm_image": "https://upload.wikimedia.org/wikipedia/en/4/48/Steam_Icon_2014.png",
                      "drm_id": 1,
                      "keys": {
                        "available": 3,
                        "total": 4,
                        "used": 1
                      },
                      "is_sales_exist": false,
                      "pre_order": {
                        "release_date": null,
                        "is_enabled": false,
                        "description": null
                      },
                      "limits": {
                        "per_user": {
                          "total": 5
                        },
                        "per_item": {
                          "total": 10000,
                          "available": 5000,
                          "reserved": 500,
                          "sold": 4500
                        },
                        "recurrent_schedule": {
                          "per_user": {
                            "interval_type": "daily",
                            "day_of_week": null,
                            "day_of_month": null,
                            "time": "11:00:00+08:00",
                            "reset_next_date": 1677553200,
                            "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                            "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                          }
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    },
                    {
                      "item_id": 4,
                      "sku": "com.xsolla.game_1_key_2",
                      "type": "game_key",
                      "is_free": false,
                      "prices": [
                        {
                          "amount": 1299.99,
                          "currency": "RUB",
                          "is_default": true,
                          "is_enabled": true,
                          "country_iso": "RU"
                        }
                      ],
                      "virtual_prices": null,
                      "order": 1,
                      "is_enabled": true,
                      "is_show_in_store": false,
                      "drm_name": "Epic Games Store",
                      "drm_sku": "epicgames_key_1",
                      "drm_image": null,
                      "drm_id": 8,
                      "keys": {
                        "available": 0,
                        "total": 0,
                        "used": 0
                      },
                      "is_sales_exist": false,
                      "pre_order": {
                        "release_date": "2020-08-11T10:00:00+03:00",
                        "is_enabled": true,
                        "description": null
                      },
                      "regions": [
                        {
                          "id": 12
                        },
                        {
                          "id": 64
                        }
                      ],
                      "limits": {
                        "per_user": null,
                        "per_item": null,
                        "recurrent_schedule": null
                      },
                      "periods": [
                        {
                          "date_from": null,
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Game-Keys_200-session-information": {
        "description": "Codes loading session information was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "session_id": {
                  "type": "string",
                  "example": "fc7105b6e8ee01339582970b37697242"
                },
                "count_uploaded": {
                  "type": "integer",
                  "example": 0
                },
                "count_total": {
                  "type": "integer",
                  "example": 100
                },
                "count_skipped": {
                  "type": "integer",
                  "example": 10
                },
                "status": {
                  "type": "string",
                  "example": "processing"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "session_id": "fc7105b6e8ee01339582970b37697242",
                  "count_uploaded": 0,
                  "count_total": 100,
                  "count_skipped": 10,
                  "status": "processing"
                }
              }
            }
          }
        }
      },
      "Game-Keys_200-get-codes": {
        "description": "Codes were successfully received.",
        "content": {
          "text/plain": {
            "schema": {
              "type": "string",
              "example": "PIN-CODE-ALL PIN-CODE-ALL-3"
            },
            "examples": {
              "response": {
                "value": "PIN-CODE-ALL PIN-CODE-ALL-3"
              }
            }
          }
        }
      },
      "Game-Keys_200-user-entitlement-list": {
        "description": "Successfully received a list of game keys owned by the user.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with game information.",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "total_items_count": {
                  "$ref": "#/components/schemas/Pagination_total-items-count"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game-Keys_entitlement_item"
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": false,
                  "total_items_count": 1,
                  "items": [
                    {
                      "name": "The Greatest Game in the World",
                      "description": "Description of the greatest game in the world.",
                      "image_url": "https://none",
                      "project_id": 30810,
                      "game_sku": "com.xsolla.key_1",
                      "drm": "drmfree",
                      "is_pre_order": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Game-Keys_403-auth-header-not-sent": {
        "description": "Authorization header not sent.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 403
                },
                "errorCode": {
                  "type": "integer",
                  "example": 0
                },
                "errorMessage": {
                  "type": "string",
                  "example": "Authorization header not sent."
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 403,
                  "errorCode": 0,
                  "errorMessage": "Authorization header not sent"
                }
              }
            }
          }
        }
      },
      "Promotions_200-get-promotions": {
        "description": "List of promotions was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "promotions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotions_200-get-promotion-model"
                  }
                },
                "total_promotions_count": {
                  "$ref": "#/components/schemas/total_promotions_count"
                },
                "active_promotions_count": {
                  "$ref": "#/components/schemas/active_promotions_count"
                },
                "inactive_promotions_count": {
                  "$ref": "#/components/schemas/inactive_promotions_count"
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-admin-promotions"
              }
            }
          }
        }
      },
      "Promotions_401-invalid-basic-auth": {
        "description": "Basic authentication not passed or wrong. Make sure you used basic authentication or correct credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1020
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 401,
                  "errorCode": 1020,
                  "errorMessage": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            }
          }
        }
      },
      "Promotions_422-activate-deactivate-promotion": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1102
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9505]: Error was occurred while promotion was being updated"
                },
                "transactionId": {
                  "type": "string",
                  "example": "da145238620011eb8e24fe6913ff226a"
                }
              }
            },
            "examples": {
              "Error was occurred": {
                "$ref": "#/components/examples/422-activate-deactivate-promotion"
              }
            }
          }
        }
      },
      "200-admin-get-redeemable-by-code": {
        "description": "Promotion was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/admin-promotions_200-get-redeemable-coupon-promotion-model"
            },
            "examples": {
              "Promo Code Response": {
                "value": {
                  "date_start": "2023-05-01T01:00:00+05:00",
                  "date_end": "2023-05-31T23:59:59+05:00",
                  "bonus": [],
                  "is_enabled": true,
                  "external_id": "falls2023",
                  "name": {
                    "ru": "Скидка по промокоду на Epic Fall Hammer",
                    "en": "Promo Code discount for Epic Fall Hammer"
                  },
                  "redeem_total_limit": 2,
                  "redeem_user_limit": 3,
                  "redeem_code_limit": null,
                  "total_limit_state": {
                    "available": 1,
                    "reserved": 1,
                    "used": 0
                  },
                  "discount": {
                    "percent": null
                  },
                  "discounted_items": [
                    {
                      "sku": "epic_fall_hammer_1",
                      "discount": {
                        "percent": "20.00"
                      }
                    }
                  ]
                }
              },
              "Coupon Response": {
                "value": {
                  "date_start": "2023-04-15T01:00:00+05:00",
                  "date_end": "2023-04-30T23:59:59+05:00",
                  "bonus": [
                    {
                      "sku": "epic_fall_hammer_1",
                      "quantity": 3
                    }
                  ],
                  "is_enabled": true,
                  "external_id": "coupon_fall_hammer_2",
                  "name": {
                    "en": "This is a Coupon code for Epic Fall Hammer",
                    "ru": "Eto kod kupona на Epic Fall Hammer"
                  },
                  "redeem_total_limit": 99,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": null
                }
              }
            }
          }
        }
      },
      "404-code-not-found": {
        "description": "Redeemable code not found. Make sure the provided code value is correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9811
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9811]: Code not found."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 404,
                  "errorCode": 9811,
                  "errorMessage": "[0401-9811]: Code not found."
                }
              }
            }
          }
        }
      },
      "405-method-not-found": {
        "description": "Incorrect redeemable code format. The code can contain only letters and numerals.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 405
                },
                "errorCode": {
                  "type": "integer",
                  "example": 0
                },
                "errorMessage": {
                  "type": "string",
                  "example": "Method is not allowed. Method must be one of: OPTIONS"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 405,
                  "errorCode": 0,
                  "errorMessage": "Method is not allowed. Method must be one of: OPTIONS"
                }
              }
            }
          }
        }
      },
      "Promotions_200-coupon-redeemed": {
        "description": "Coupon was successfully redeemed.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "price": {
                        "type": "object",
                        "description": "Item prices.",
                        "properties": {
                          "amount": {
                            "type": "string",
                            "example": "2.9900",
                            "description": "Discounted item price."
                          },
                          "amount_without_discount": {
                            "type": "string",
                            "example": "2.9900",
                            "description": "Item price."
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD",
                            "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                          }
                        },
                        "nullable": true
                      },
                      "type": {
                        "type": "string"
                      },
                      "virtual_item_type": {
                        "type": "string",
                        "example": "non-consumable",
                        "description": "Type of virtual item.",
                        "x-enumDescriptions": {
                          "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
                          "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
                          "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
                        },
                        "enum": [
                          "consumable",
                          "non_consumable",
                          "non_renewing_subscription"
                        ]
                      },
                      "virtual_prices": {
                        "type": "array"
                      },
                      "description": {
                        "type": "string"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "is_free": {
                        "type": "boolean"
                      },
                      "attributes": {
                        "type": "array"
                      },
                      "inventory_options": {
                        "$ref": "#/components/schemas/Virtual-Items-Currency_inventory_options"
                      }
                    }
                  },
                  "example": [
                    {
                      "attributes": [],
                      "description": "Take it, take it all! All of Xsolla's riches in one Mega Booster.",
                      "groups": [
                        {
                          "external_id": "powerups",
                          "name": "Power Ups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "is_free": false,
                      "name": "Xsolla Booster Mega",
                      "price": {
                        "amount": "50.0000000000000000",
                        "amount_without_discount": "100.0000000000000000",
                        "currency": "USD"
                      },
                      "quantity": 1,
                      "sku": "com.xsolla.booster_mega_1",
                      "type": "virtual_good",
                      "virtual_item_type": "consumable",
                      "virtual_prices": []
                    }
                  ]
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "items": [
                    {
                      "attributes": [],
                      "description": "Take it, take it all! All of Xsolla's riches in one Mega Booster.",
                      "groups": [
                        {
                          "external_id": "powerups",
                          "name": "Power Ups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "is_free": true,
                      "name": "Xsolla Booster Mega",
                      "price": null,
                      "quantity": 1,
                      "sku": "com.xsolla.booster_mega_1",
                      "type": "virtual_good",
                      "virtual_item_type": "consumable",
                      "virtual_prices": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Promotions_403-auth-header": {
        "description": "Authorization header not sent.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 403
                },
                "errorCode": {
                  "type": "integer",
                  "example": 0
                },
                "errorMessage": {
                  "type": "string",
                  "example": "Authorization header not sent."
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 403,
                  "errorCode": 0,
                  "errorMessage": "Authorization header not sent"
                }
              }
            }
          }
        }
      },
      "Promotions_404-coupon": {
        "description": "Enter valid coupon code.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9807]: Enter valid coupon code."
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Promotions_422-redeem-coupon": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1102
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1102]: Unprocessable Entity. The property `coupon_code` is required"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `coupon_code` is required"
                }
              }
            }
          }
        }
      },
      "Promotions_200-coupon-rewards": {
        "description": "List of coupon rewards was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "bonus": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotions_200-coupon-bonus-reward"
                  }
                },
                "is_selectable": {
                  "type": "boolean",
                  "description": "If `true`, the user should choose the bonus before redeeming a coupon."
                },
                "discount": {
                  "$ref": "#/components/schemas/Promotions_200-coupon-discount-reward"
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-get-coupon-rewards"
              }
            }
          }
        }
      },
      "Promotions_422-rewards": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Promotions_422_limit_error"
                },
                {
                  "$ref": "#/components/schemas/Promotions_422_reglock_error"
                }
              ]
            }
          }
        }
      },
      "Promotions_200-get-coupons": {
        "description": "List of coupons was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/admin-promotions_200-get-coupon-promotion-model"
                  }
                },
                "total_promotions_count": {
                  "$ref": "#/components/schemas/total_promotions_count"
                },
                "active_promotions_count": {
                  "$ref": "#/components/schemas/active_promotions_count"
                },
                "inactive_promotions_count": {
                  "$ref": "#/components/schemas/inactive_promotions_count"
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-admin-coupons"
              }
            }
          }
        }
      },
      "Promotions_422-invalid-coupon": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1102
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1102]: Unprocessable Entity. The property `external_id` is required"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `external_id` is required"
                }
              }
            }
          }
        }
      },
      "Promotions_404-admin-coupon": {
        "description": "Coupon not found. Make sure the `external_id` is correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9802]: Coupon not found"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "Promotions_422-admin-promotion-error": {
        "description": "Error occurred while receiving the promotion from the promotion service.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9502
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9502]: Error occurred while receiving the promotion from the promotion service"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Promotions_200-coupon-code-list": {
        "description": "List of codes for a coupon was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "codes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "$ref": "#/components/schemas/Promotions_coupon_code"
                      }
                    }
                  }
                },
                "total_count": {
                  "type": "number",
                  "description": "Total count of coupon codes."
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-coupon-code-list"
              }
            }
          }
        }
      },
      "Promotions_201-coupon-promocode-code-created": {
        "description": "Code was successfully created.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "$ref": "#/components/schemas/Promotions_coupon_code"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "code": "WINTER2021"
                }
              }
            }
          }
        }
      },
      "Promotions_422-coupon-promocode-same-code-exists": {
        "description": "Invalid request. The code already exists.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9803
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9803]: The code already exists."
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 9803,
                  "errorMessage": "[0401-9803]: The code already exists.",
                  "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "Promotions_404-admin-promocode": {
        "description": "Promo code not found. Make sure the `external_id` is correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9802]: Promocode not found"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "Promotions_200-promo-code-redeemed": {
        "description": "Promo code was successfully redeemed.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cart_id": {
                  "type": "string",
                  "example": "cart_id",
                  "description": "Cart ID."
                },
                "price": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "amount": {
                      "type": "string",
                      "example": "50.0000000000000000"
                    },
                    "amount_without_discount": {
                      "type": "string",
                      "example": "100.0000000000000000"
                    },
                    "currency": {
                      "type": "string",
                      "example": "USD"
                    }
                  },
                  "example": {
                    "amount": "6150.0000000000000000",
                    "amount_without_discount": "6150.0000000000000000",
                    "currency": "USD"
                  },
                  "description": "Cart price."
                },
                "is_free": {
                  "$ref": "#/components/schemas/value-is_free"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "can_be_bought": {
                        "$ref": "#/components/schemas/Can_be_bought"
                      },
                      "vp_rewards": {
                        "$ref": "#/components/schemas/client-item-value-point-reward"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Catalog_item_limits"
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods"
                      }
                    }
                  },
                  "example": [
                    {
                      "attributes": [],
                      "description": "Take it, take it all! All of Xsolla's riches in one Mega Booster.",
                      "groups": [
                        {
                          "external_id": "powerups",
                          "name": "Power Ups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "is_free": false,
                      "name": "Xsolla Booster Mega",
                      "price": {
                        "amount": "50.0000000000000000",
                        "amount_without_discount": "100.0000000000000000",
                        "currency": "USD"
                      },
                      "quantity": 123,
                      "sku": "com.xsolla.booster_mega_1",
                      "type": "virtual_good",
                      "virtual_item_type": "consumable",
                      "virtual_prices": [],
                      "promotions": {
                        "$ref": "../schemas/Catalog_item_promotions.yaml"
                      },
                      "can_be_bought": {
                        "$ref": "../schemas/Can_be_bought.yaml"
                      },
                      "vp_rewards": {
                        "$ref": "../schemas/reward-chain-client/client-item-value-point-reward.yaml"
                      },
                      "limits": {
                        "$ref": "../schemas/Catalog_item_limits.yaml"
                      },
                      "periods": {
                        "$ref": "../schemas/item-periods.yaml"
                      }
                    }
                  ]
                },
                "rewards": {
                  "$ref": "#/components/schemas/Promo_code_rewards"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "cart_id": "cart_id",
                  "is_free": false,
                  "items": [
                    {
                      "attributes": [],
                      "description": "Take it, take it all! All of Xsolla's riches in one Mega Booster.",
                      "groups": [
                        {
                          "external_id": "powerups",
                          "name": "Power Ups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "is_free": false,
                      "name": "Xsolla Booster Mega",
                      "price": {
                        "amount": "50.0000000000000000",
                        "amount_without_discount": "100.0000000000000000",
                        "currency": "USD"
                      },
                      "quantity": 123,
                      "sku": "com.xsolla.booster_mega_1",
                      "type": "virtual_good",
                      "virtual_item_type": "consumable",
                      "virtual_prices": [],
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": false
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    },
                    {
                      "attributes": [],
                      "description": "Honshu Boshin Wakizashi - Modern Tactical Samurai / Ninja Sword - Hand Forged 1060 Carbon Steel - Full Tang, Fully Functional, Battle Ready - Black TPR, Steel Guard and Pommel.",
                      "groups": [],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "is_free": true,
                      "name": "Sword Xsolla Skin",
                      "price": [],
                      "quantity": 1,
                      "sku": "com.xsolla.swords_1",
                      "type": "virtual_good",
                      "virtual_item_type": "non_consumable",
                      "virtual_prices": [],
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    }
                  ],
                  "price": {
                    "amount": "6150.0000000000000000",
                    "amount_without_discount": "12300.0000000000000000",
                    "currency": "USD"
                  },
                  "rewards": {
                    "bonus": [
                      {
                        "item": {
                          "name": "Sword Xsolla Skin",
                          "sku": "com.xsolla.swords_1",
                          "type": "virtual_good",
                          "virtual_item_type": "non_consumable",
                          "description": "Honshu Boshin Wakizashi - Modern Tactical Samurai / Ninja Sword - Hand Forged 1060 Carbon Steel - Full Tang, Fully Functional, Battle Ready - Black TPR, Steel Guard and Pommel.",
                          "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png"
                        },
                        "quantity": 1
                      }
                    ],
                    "discount": {
                      "percent": null
                    },
                    "discounted_items": [
                      {
                        "sku": "com.xsolla.booster_mega_1",
                        "discount": {
                          "percent": "50.00"
                        }
                      }
                    ],
                    "is_selectable": false
                  }
                }
              }
            }
          }
        }
      },
      "Promotions_404-promo-code": {
        "description": "Enter valid promo code.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9807]: Enter valid promo code."
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Promotions_200-promo-code-canceled": {
        "description": "Promo code is successfully canceled.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cart_id": {
                  "type": "string",
                  "example": "cart_id",
                  "description": "Cart ID."
                },
                "price": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "amount": {
                      "type": "string",
                      "default": "50.0000000000000000"
                    },
                    "amount_without_discount": {
                      "type": "string",
                      "default": "100.0000000000000000"
                    },
                    "currency": {
                      "type": "string",
                      "default": "USD"
                    }
                  },
                  "example": {
                    "amount": "6150.0000000000000000",
                    "amount_without_discount": "6150.0000000000000000",
                    "currency": "USD"
                  },
                  "description": "Cart price."
                },
                "is_free": {
                  "$ref": "#/components/schemas/value-is_free"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string"
                      },
                      "virtual_item_type": {
                        "type": "string",
                        "example": "non-consumable",
                        "description": "Type of virtual item.",
                        "x-enumDescriptions": {
                          "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
                          "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
                          "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
                        },
                        "enum": [
                          "consumable",
                          "non_consumable",
                          "non_renewing_subscription"
                        ]
                      },
                      "virtual_prices": {
                        "type": "array"
                      },
                      "description": {
                        "type": "string"
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/client-attributes"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "inventory_options": {
                        "$ref": "#/components/schemas/Virtual-Items-Currency_inventory_options"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "price": {
                        "type": "object",
                        "description": "Item prices.",
                        "properties": {
                          "amount": {
                            "type": "string",
                            "example": "2.9900",
                            "description": "Discounted item price."
                          },
                          "amount_without_discount": {
                            "type": "string",
                            "example": "2.9900",
                            "description": "Item price."
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD",
                            "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                          }
                        },
                        "nullable": true
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "can_be_bought": {
                        "$ref": "#/components/schemas/Can_be_bought"
                      },
                      "vp_rewards": {
                        "$ref": "#/components/schemas/client-item-value-point-reward"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Catalog_item_limits"
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods"
                      }
                    }
                  },
                  "example": [
                    {
                      "attributes": [],
                      "description": "Take it, take it all! All of Xsolla's riches in one Mega Booster.",
                      "groups": [
                        {
                          "external_id": "powerups",
                          "name": "Power Ups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "is_free": false,
                      "name": "Xsolla Booster Mega",
                      "price": {
                        "amount": "50.0000000000000000",
                        "amount_without_discount": "100.0000000000000000",
                        "currency": "USD"
                      },
                      "quantity": 123,
                      "sku": "com.xsolla.booster_mega_1",
                      "type": "virtual_good",
                      "virtual_item_type": "consumable",
                      "virtual_prices": [],
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "cart_id": "cart_id",
                  "is_free": false,
                  "items": [
                    {
                      "attributes": [],
                      "description": "Take it, take it all! All of Xsolla's riches in one Mega Booster.",
                      "groups": [
                        {
                          "external_id": "powerups",
                          "name": "Power Ups"
                        }
                      ],
                      "image_url": "https://cdn.xsolla.net/img/misc/images/e9f2f4a634bc96ea03b5d5ceadd7c55f.png",
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "is_free": false,
                      "name": "Xsolla Booster Mega",
                      "price": {
                        "amount": "50.0000000000000000",
                        "amount_without_discount": "100.0000000000000000",
                        "currency": "USD"
                      },
                      "quantity": 123,
                      "sku": "com.xsolla.booster_mega_1",
                      "type": "virtual_good",
                      "virtual_item_type": "consumable",
                      "virtual_prices": [],
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "can_be_bought": true,
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          },
                          "total": 5
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    }
                  ],
                  "price": {
                    "amount": "6150.0000000000000000",
                    "amount_without_discount": "6150.0000000000000000",
                    "currency": "USD"
                  }
                }
              }
            }
          }
        }
      },
      "Promotions_422-cancel-promo-code": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1102
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1102]: Unprocessable Entity. The property `id` is required"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `id` is required"
                }
              }
            }
          }
        }
      },
      "Promotions_200-promocode-rewards": {
        "description": "List of promo code rewards was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Promo_code_rewards"
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-get-promocode-rewards"
              }
            }
          }
        }
      },
      "Promotions_200-get-promocodes": {
        "description": "List of promo codes was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotions_200-get-promocode-promotion-model"
                  }
                },
                "total_promotions_count": {
                  "$ref": "#/components/schemas/total_promotions_count"
                },
                "active_promotions_count": {
                  "$ref": "#/components/schemas/active_promotions_count"
                },
                "inactive_promotions_count": {
                  "$ref": "#/components/schemas/inactive_promotions_count"
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-admin-promocodes"
              }
            }
          }
        }
      },
      "Promotions_200-promocode-code-list": {
        "description": "List of codes for a promo code was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "codes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "$ref": "#/components/schemas/Promotions_coupon_code"
                      }
                    }
                  }
                },
                "total_count": {
                  "type": "number",
                  "description": "Total number of codes for a promo code."
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-coupon-code-list"
              }
            }
          }
        }
      },
      "Promotions_200-get-item-promotions": {
        "description": "List of item promotions was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "promotions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Promotion ID. Unique promotion identifier within the project."
                      },
                      "date_start": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time",
                        "default": "2020-04-15T18:16:00+05:00",
                        "description": "Date when your promotion will be started."
                      },
                      "date_end": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time",
                        "default": "2020-04-15T18:16:00+05:00",
                        "description": "Date when your promotion will be finished. Can be `null`."
                      },
                      "is_enabled": {
                        "type": "boolean",
                        "default": true
                      },
                      "name": {
                        "type": "object",
                        "description": "Name of promotion. Should contain key/value pairs, where key is locale with format \"^[a-z]{2}-[A-Z]{2}$\", value is string.\n",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "example": {
                          "en-US": "Promotion",
                          "ru-RU": "Акция"
                        }
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "percent": {
                            "type": "string",
                            "nullable": true,
                            "description": "Percent discount.\nThe price of item will be decreased using a value which was calculated using this percent.",
                            "default": "10.00"
                          }
                        }
                      },
                      "items": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                          "description": "The list of items which will be affected by discount.",
                          "type": "object",
                          "properties": {
                            "sku": {
                              "type": "string",
                              "nullable": true,
                              "description": "Item SKU.",
                              "default": "elven_sword"
                            }
                          }
                        }
                      },
                      "attribute_conditions": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/user-attribute_conditions-string"
                          },
                          {
                            "$ref": "#/components/schemas/user-attribute_conditions-date"
                          },
                          {
                            "$ref": "#/components/schemas/user-attribute_conditions-number"
                          }
                        ]
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Promotions_promotion_limits_response"
                      },
                      "excluded_promotions": {
                        "$ref": "#/components/schemas/excluded_promotions"
                      },
                      "price_conditions": {
                        "$ref": "#/components/schemas/price_conditions_discount"
                      }
                    }
                  }
                },
                "total_promotions_count": {
                  "$ref": "#/components/schemas/total_promotions_count"
                },
                "active_promotions_count": {
                  "$ref": "#/components/schemas/active_promotions_count"
                },
                "inactive_promotions_count": {
                  "$ref": "#/components/schemas/inactive_promotions_count"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "promotions": [
                    {
                      "id": 1,
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "is_enabled": true,
                      "discount": {
                        "percent": "20.00"
                      },
                      "items": [
                        {
                          "sku": "com.xsolla.elven_sword_1"
                        }
                      ],
                      "name": {
                        "en-US": "Promotion",
                        "ru-RU": "Акция"
                      },
                      "limits": {
                        "per_user": null,
                        "per_item": null,
                        "recurrent_schedule": null
                      }
                    },
                    {
                      "id": 2,
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "is_enabled": true,
                      "discount": {
                        "percent": "10.00"
                      },
                      "items": [
                        {
                          "sku": "com.xsolla.elven_helmet_1"
                        },
                        {
                          "sku": "com.xsolla.elven_armor_1"
                        }
                      ],
                      "name": {
                        "en-US": "Promotion",
                        "ru-RU": "Акция"
                      },
                      "limits": {
                        "per_user": {
                          "total": 10
                        },
                        "per_item": null,
                        "recurrent_schedule": {
                          "per_user": {
                            "interval_type": "daily",
                            "day_of_week": null,
                            "day_of_month": null,
                            "time": "11:00:00+08:00",
                            "reset_next_date": 1677553200,
                            "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                            "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                          }
                        }
                      },
                      "excluded_promotions": [
                        1,
                        3
                      ]
                    },
                    {
                      "id": 3,
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "is_enabled": true,
                      "discount": {
                        "percent": "10.00"
                      },
                      "items": [
                        {
                          "sku": "com.xsolla.elven_helmet_2"
                        },
                        {
                          "sku": "com.xsolla.elven_armor_2"
                        }
                      ],
                      "name": {
                        "en-US": "Promotion",
                        "ru-RU": "Акция"
                      },
                      "limits": {
                        "per_user": {
                          "total": 10
                        },
                        "per_item": null,
                        "recurrent_schedule": {
                          "per_user": {
                            "interval_type": "daily",
                            "day_of_week": null,
                            "day_of_month": null,
                            "time": "11:00:00+08:00",
                            "reset_next_date": 1677553200,
                            "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                            "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                          }
                        }
                      },
                      "price_conditions": [
                        {
                          "operator": "gt",
                          "value": "10.0000"
                        },
                        {
                          "operator": "lt",
                          "value": "20.0000"
                        }
                      ]
                    },
                    {
                      "id": 4,
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "is_enabled": true,
                      "discount": {
                        "percent": "10.00"
                      },
                      "items": null,
                      "name": {
                        "en-US": "Promotion",
                        "ru-RU": "Акция"
                      },
                      "limits": {
                        "per_user": {
                          "total": 10
                        },
                        "per_item": null,
                        "recurrent_schedule": {
                          "per_user": {
                            "interval_type": "daily",
                            "day_of_week": null,
                            "day_of_month": null,
                            "time": "11:00:00+08:00",
                            "reset_next_date": 1677553200,
                            "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                            "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                          }
                        }
                      },
                      "price_conditions": [
                        {
                          "operator": "lt",
                          "value": "20.0000"
                        }
                      ]
                    }
                  ],
                  "total_promotions_count": 4,
                  "active_promotions_count": 4,
                  "inactive_promotions_count": 0
                }
              }
            }
          }
        }
      },
      "Promotions_201-create-promotion": {
        "description": "Promotion was successfully created.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "integer",
                  "description": "Promotion ID. Unique promotion identifier within the project."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "promotion_id": 2384756
                }
              }
            }
          }
        }
      },
      "Promotions_422-admin-promotion-missed-items-property": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1102
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1102]:  Unprocessable Entity. The property `items` is required"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `items` is required",
                  "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "Promotions_404-admin-promotion": {
        "description": "Promotion not found. Make sure `promotion_id` is correct.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9502
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9502]: Can not find promotion with ID = 111425 in project 59080"
                }
              },
              "type": "object"
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 404,
                  "errorCode": 9502,
                  "errorMessage": "[0401-9502]: Can not find promotion with ID = 111425 in project 59080"
                }
              }
            }
          }
        }
      },
      "Promotions_200-get-bonus-promotions": {
        "description": "List of bonus promotions was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "promotions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotions_200-get-bonus-promotion-model"
                  }
                },
                "total_promotions_count": {
                  "$ref": "#/components/schemas/total_promotions_count"
                },
                "active_promotions_count": {
                  "$ref": "#/components/schemas/active_promotions_count"
                },
                "inactive_promotions_count": {
                  "$ref": "#/components/schemas/inactive_promotions_count"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "promotions": [
                    {
                      "id": 1,
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "name": {
                        "en-US": "New Year Bonus",
                        "de-DE": "Neujahrsbonus"
                      },
                      "is_enabled": true,
                      "condition": [
                        {
                          "sku": "com.xsolla.elven_boots_1"
                        },
                        {
                          "sku": "com.xsolla.elven_knife_1"
                        }
                      ],
                      "bonus": [
                        {
                          "sku": "com.xsolla.elven_sword_1",
                          "quantity": 1
                        },
                        {
                          "sku": "com.xsolla.elven_shield_1",
                          "quantity": 2
                        },
                        {
                          "sku": "com.xsolla.elven_gloves_1",
                          "quantity": 2
                        }
                      ],
                      "limits": {
                        "per_user": null,
                        "per_item": null,
                        "recurrent_schedule": null
                      }
                    },
                    {
                      "id": 2,
                      "date_start": "2020-04-15T18:16:00+05:00",
                      "date_end": "2020-04-25T18:16:00+05:00",
                      "name": {
                        "en-US": "Summer season bonus",
                        "de-DE": "Sommersaison Bonus"
                      },
                      "is_enabled": true,
                      "condition": null,
                      "bonus": [
                        {
                          "sku": "com.xsolla.diamonds_1",
                          "quantity": 100
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "total": 10
                        },
                        "per_item": null,
                        "recurrent_schedule": {
                          "per_user": {
                            "interval_type": "daily",
                            "day_of_week": null,
                            "day_of_month": null,
                            "time": "11:00:00+08:00",
                            "reset_next_date": 1677553200,
                            "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                            "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                          }
                        }
                      },
                      "price_conditions": [
                        {
                          "operator": "gt",
                          "value": "10.0000"
                        },
                        {
                          "operator": "lt",
                          "value": "50.0000"
                        }
                      ],
                      "excluded_promotions": [
                        1
                      ]
                    }
                  ],
                  "total_promotions_count": 2,
                  "active_promotions_count": 2,
                  "inactive_promotions_count": 0
                }
              }
            }
          }
        }
      },
      "Promotions_422-admin-promotion-missed-bonus-property": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1102
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1102]:  Unprocessable Entity. The property `bonus` is required"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1102,
                  "errorMessage": "[0401-1102]: Unprocessable Entity. The property `bonus` is required",
                  "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "Promotions_200-admin-get-bonus-promotion": {
        "description": "Bonus promotion was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Promotions_200-get-bonus-promotion-model"
            },
            "examples": {
              "response": {
                "value": {
                  "id": 1,
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "is_enabled": true,
                  "condition": [
                    {
                      "sku": "com.xsolla.elven_boots_1"
                    },
                    {
                      "sku": "com.xsolla.elven_knife_1"
                    }
                  ],
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_1",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_1",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_1",
                      "quantity": 2
                    }
                  ],
                  "limits": {
                    "per_user": {
                      "total": 10
                    },
                    "per_item": null,
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                      }
                    }
                  },
                  "excluded_promotions": [
                    23,
                    45
                  ],
                  "price_conditions": [
                    {
                      "operator": "gt",
                      "value": "10.0000"
                    },
                    {
                      "operator": "lt",
                      "value": "50.0000"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Promotions_200-verify-promo-code": {
        "description": "Information about the code.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of code: `promocode`/`coupon`."
                },
                "code": {
                  "$ref": "#/components/schemas/Promotions_coupon_code"
                },
                "rewards": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Coupon_rewards"
                    },
                    {
                      "$ref": "#/components/schemas/Promo_code_rewards_verify"
                    }
                  ]
                }
              }
            },
            "examples": {
              "coupon info": {
                "value": {
                  "type": "coupon",
                  "code": "WINTER2023",
                  "rewards": {
                    "bonus": [
                      {
                        "item": {
                          "sku": "com.xsolla.game_1",
                          "name": "Game name",
                          "type": "unit",
                          "description": "Game description",
                          "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                          "unit_items": [
                            {
                              "sku": "com.xsolla.game_key_01",
                              "name": "Game name",
                              "type": "game_key",
                              "is_free": false,
                              "drm_name": "Steam",
                              "drm_sku": "steam_key_1"
                            },
                            {
                              "sku": "com.xsolla.game_key_02",
                              "name": "Game name",
                              "type": "game_key",
                              "drm_name": "Origin",
                              "drm_sku": "origin_key_1"
                            }
                          ]
                        },
                        "quantity": 1
                      },
                      {
                        "item": {
                          "sku": "com.xsolla.game_2",
                          "name": "Game name",
                          "type": "unit",
                          "description": "Game description",
                          "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                          "unit_items": [
                            {
                              "sku": "com.xsolla.game_key_01",
                              "type": "game_key",
                              "name": "Game name",
                              "drm_name": "Steam",
                              "drm_sku": "steam_key_1"
                            }
                          ]
                        },
                        "quantity": 2
                      }
                    ],
                    "is_selectable": true
                  }
                }
              },
              "promocode info": {
                "value": {
                  "type": "promocode",
                  "code": "SUMMER2023",
                  "rewards": {
                    "bonus": [
                      {
                        "item": {
                          "sku": "com.xsolla.game_2",
                          "name": "Game name",
                          "type": "unit",
                          "description": "Game description",
                          "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                          "unit_items": [
                            {
                              "sku": "com.xsolla.game_key_01",
                              "type": "game_key",
                              "name": "Game name",
                              "drm_name": "Steam",
                              "drm_sku": "steam_key_1"
                            }
                          ]
                        },
                        "quantity": 2
                      }
                    ],
                    "discount": {
                      "percent": "10.00"
                    },
                    "discounted_items": [
                      {
                        "sku": "com.xsolla.elven_sword_1",
                        "name": "Elven sword",
                        "type": "virtual_good",
                        "description": "sword",
                        "image_url": null,
                        "discount": {
                          "percent": "10.00"
                        }
                      }
                    ],
                    "is_selectable": true
                  }
                }
              }
            }
          }
        }
      },
      "Promotions_404-verify-promo-code": {
        "description": "Code not found. Make sure the `code` value is correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9811
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9811]: Code not found."
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "Promotions_422-verify-promo-code": {
        "description": "Invalid code promotion.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "integer"
                },
                "statusCode": {
                  "type": "integer"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "code redemption limit": {
                "value": {
                  "errorCode": 9804,
                  "statusCode": 422,
                  "errorMessage": "[0401-9804]: You have reached the coupon redemption limit."
                }
              },
              "regionally restricted": {
                "value": {
                  "errorCode": 9808,
                  "statusCode": 422,
                  "errorMessage": "[0401-9808]: Coupon is not available in your region."
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-admin-get-virtual-items": {
        "description": "The list of virtual items was successfully received.",
        "content": {
          "application/json": {
            "example": {
              "items": [
                {
                  "sku": "com.xsolla.armor_max_1",
                  "name": {
                    "en": "Maximum Armor Xsolla  Skin"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Suit up with flair showcasing your allegiance to Xsolla"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "long_description": {
                    "en": "The metal coverings formerly worn by soldiers or warriors to protect the body in battle."
                  },
                  "attributes": [
                    {
                      "external_id": "attr_1",
                      "name": {
                        "en-US": "OK"
                      },
                      "values": [
                        {
                          "external_id": "val1",
                          "value": {
                            "en-US": "VALUE"
                          }
                        },
                        {
                          "external_id": "val2",
                          "value": {
                            "en-US": "VALUE2"
                          }
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "order": 1,
                  "groups": [
                    {
                      "external_id": "featured",
                      "name": {
                        "en": "featured"
                      }
                    },
                    {
                      "external_id": "Xsolla",
                      "name": {
                        "en": "Xsolla"
                      }
                    },
                    {
                      "external_id": "Premium",
                      "name": {
                        "en": "Premium"
                      }
                    },
                    {
                      "external_id": "NonConsumableGroupCode",
                      "name": {
                        "en": "Non-consumable"
                      }
                    }
                  ],
                  "prices": [
                    {
                      "amount": 12.99,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    },
                    {
                      "amount": 20.99,
                      "currency": "CZK",
                      "country_iso": "CZ",
                      "is_default": false,
                      "is_enabled": true
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "inventory_options": {
                    "consumable": null,
                    "expiration_period": null
                  },
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": [],
                  "custom_attributes": {
                    "purchased": 0,
                    "attr": "value"
                  }
                },
                {
                  "sku": "com.xsolla.armor_max_2",
                  "name": {
                    "en": "Empire Maximum Armor"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Defend your Empire against Xsolla with the max armor"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/67d647ad4f4e9a905bd552b0408db8a8.png",
                  "long_description": "merchant_virtual_items_virtual_item_long_description_160310",
                  "attributes": [],
                  "is_free": false,
                  "order": 1,
                  "groups": [
                    {
                      "id": 10,
                      "external_id": "all",
                      "name": {
                        "en": "Equipment"
                      },
                      "description": {
                        "en": "Equipment"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": true
                    },
                    {
                      "id": 14,
                      "external_id": "equipment",
                      "name": {
                        "en": "Nice Equipment"
                      },
                      "description": {
                        "en": "equipment"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": false
                    },
                    {
                      "id": 17,
                      "external_id": "Empire",
                      "name": {
                        "en": "Empire"
                      },
                      "description": {
                        "en": "1"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": false
                    }
                  ],
                  "prices": [
                    {
                      "amount": 12.99,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    },
                    {
                      "amount": 20.99,
                      "currency": "CZK",
                      "country_iso": "CZ",
                      "is_default": false,
                      "is_enabled": true
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "limits": {
                    "per_user": {
                      "total": 5
                    },
                    "per_item": null,
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": [
                    {
                      "date_from": "2020-08-11T10:00:00+03:00",
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ]
                },
                {
                  "sku": "com.xsolla.armor_med_1",
                  "name": {
                    "en": "Xsolla Medium Armor"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Moderately protect yourself against the Empires barrage of attacks"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/7f6e216f8fcc3c1796162897c2b0db01.png",
                  "long_description": {
                    "en": "Armor is a security-as-a-service company that provides cloud security and compliance solutions for small businesses and enterprises."
                  },
                  "attributes": [],
                  "is_free": false,
                  "order": 1,
                  "groups": [
                    {
                      "id": 10,
                      "external_id": "all",
                      "name": {
                        "en": "Equipment"
                      },
                      "description": {
                        "en": "Equipment"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": true
                    },
                    {
                      "id": 12,
                      "external_id": "Xsolla",
                      "name": {
                        "en": "Xsolla"
                      },
                      "description": {
                        "en": "Xsolla"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": false
                    },
                    {
                      "id": 14,
                      "external_id": "equipment",
                      "name": {
                        "en": "Nice Equipment"
                      },
                      "description": {
                        "en": "equipment"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": false
                    }
                  ],
                  "prices": [
                    {
                      "amount": 4.99,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    },
                    {
                      "amount": 20.99,
                      "currency": "CZK",
                      "country_iso": "CZ",
                      "is_default": false,
                      "is_enabled": true
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": false,
                  "regions": [],
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "limits": {
                    "per_user": {
                      "total": 5
                    },
                    "per_item": null,
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": [
                    {
                      "date_from": null,
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ]
                },
                {
                  "sku": "com.xsolla.armor_med_2",
                  "name": {
                    "en": "Empire Medium Armor"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Moderately protect yourself against Xsolla's barrage of attacks"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/737b4c93205dc774f47dda1f73037734.png",
                  "long_description": "merchant_virtual_items_virtual_item_long_description_160311",
                  "attributes": [
                    {
                      "external_id": "attr_1",
                      "name": {
                        "en-US": "OK"
                      },
                      "values": [
                        {
                          "external_id": "val1",
                          "value": {
                            "en-US": "VALUE"
                          }
                        },
                        {
                          "external_id": "val2",
                          "value": {
                            "en-US": "VALUE2"
                          }
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "order": 1,
                  "groups": [
                    {
                      "id": 10,
                      "external_id": "all",
                      "name": {
                        "en": "Equipment"
                      },
                      "description": {
                        "en": "Equipment"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": true
                    },
                    {
                      "id": 14,
                      "external_id": "equipment",
                      "name": {
                        "en": "Nice Equipment"
                      },
                      "description": {
                        "en": "equipment"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": false
                    },
                    {
                      "id": 17,
                      "external_id": "Empire",
                      "name": {
                        "en": "Empire"
                      },
                      "description": {
                        "en": "1"
                      },
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "parent_group_id": null,
                      "children": [],
                      "parent_external_id": null,
                      "is_enabled": false
                    }
                  ],
                  "prices": [
                    {
                      "amount": 4.99,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    },
                    {
                      "amount": 20.99,
                      "currency": "CZK",
                      "is_default": false,
                      "is_enabled": true
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "limits": {
                    "per_user": {
                      "total": 5
                    },
                    "per_item": {
                      "total": 500,
                      "available": 455,
                      "reserved": 5,
                      "sold": 40
                    },
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": []
                }
              ]
            },
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Virtual-Items-Currency_admin-virtual-item"
                  }
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_401-invalid-basic-auth": {
        "description": "Basic authentication not passed or wrong. Make sure you used basic authentication or correct credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 401
                },
                "errorCode": {
                  "type": "integer",
                  "example": 1020
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 401,
                  "errorCode": 1020,
                  "errorMessage": "[0401-1020]: Error in Authentication method occurred"
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_201-created": {
        "description": "Virtual item was successfully created.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "value": {
                  "sku": "com.xsolla.item_1"
                }
              }
            },
            "schema": {
              "type": "object",
              "example": {
                "sku": "com.xsolla.item_1"
              },
              "properties": {
                "sku": {
                  "type": "string",
                  "example": "new-sku"
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_422-invalid-request": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_422-invalid-request"
            },
            "examples": {
              "The property `sku` is required": {
                "$ref": "#/components/examples/422-property-sku-is-required"
              },
              "Numbers of attribute values per item exceeded": {
                "$ref": "#/components/examples/422-numbers-of-attribute-values-per-item-exceeded"
              },
              "Numbers of attributes per item exceeded": {
                "$ref": "#/components/examples/422-numbers-of-attributes-per-item-exceeded"
              },
              "Value limit exceeded": {
                "$ref": "#/components/examples/422-value-limit-exceeded"
              },
              "Custom attributes JSON can’t exceed 500 characters": {
                "$ref": "#/components/examples/422-custom-attributes-size-exceeded"
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-admin-get-virtual-items-by-group": {
        "description": "The list of virtual items was successfully received.",
        "content": {
          "application/json": {
            "example": {
              "items": [
                {
                  "sku": "com.xsolla.armor_max_2",
                  "name": {
                    "en": "Empire Maximum Armor"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Defend your Empire against Xsolla with the max armor"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/67d647ad4f4e9a905bd552b0408db8a8.png",
                  "long_description": "merchant_virtual_items_virtual_item_long_description_160310",
                  "attributes": [],
                  "is_free": false,
                  "order": 1,
                  "groups": [
                    {
                      "external_id": "hair",
                      "name": {
                        "en": "Hair"
                      }
                    },
                    {
                      "external_id": "accessory",
                      "name": {
                        "en": "Accessory"
                      }
                    }
                  ],
                  "prices": [
                    {
                      "amount": 12.99,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    },
                    {
                      "amount": 20.99,
                      "currency": "CZK",
                      "country_iso": "CZ",
                      "is_default": false,
                      "is_enabled": true
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "limits": {
                    "per_user": {
                      "total": 5
                    },
                    "per_item": null,
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "monthly",
                        "day_of_week": null,
                        "day_of_month": 28,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1679972400,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-03-28T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": [
                    {
                      "date_from": "2020-08-11T10:00:00+03:00",
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ],
                  "custom_attributes": {
                    "purchased": 0,
                    "attr": "value"
                  }
                },
                {
                  "sku": "com.xsolla.armor_med_1",
                  "name": {
                    "en": "Xsolla Medium Armor"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Moderately protect yourself against the Empires barrage of attacks"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/7f6e216f8fcc3c1796162897c2b0db01.png",
                  "long_description": {
                    "en": "Armor is a security-as-a-service company that provides cloud security and compliance solutions for small businesses and enterprises."
                  },
                  "attributes": [],
                  "is_free": false,
                  "order": 1,
                  "groups": [
                    {
                      "external_id": "hair",
                      "name": {
                        "en": "Hair"
                      }
                    },
                    {
                      "external_id": "accessory",
                      "name": {
                        "en": "Accessory"
                      }
                    }
                  ],
                  "prices": [
                    {
                      "amount": 4.99,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    },
                    {
                      "amount": 20.99,
                      "currency": "CZK",
                      "country_iso": "CZ",
                      "is_default": false,
                      "is_enabled": true
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": false,
                  "regions": [],
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "limits": {
                    "per_user": {
                      "total": 5
                    },
                    "per_item": null,
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": [
                    {
                      "date_from": null,
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ]
                },
                {
                  "sku": "com.xsolla.armor_med_2",
                  "name": {
                    "en": "Empire Medium Armor"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Moderately protect yourself against Xsolla's barrage of attacks"
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/737b4c93205dc774f47dda1f73037734.png",
                  "long_description": "merchant_virtual_items_virtual_item_long_description_160311",
                  "attributes": [
                    {
                      "external_id": "attr_1",
                      "name": {
                        "en-US": "OK"
                      },
                      "values": [
                        {
                          "external_id": "val1",
                          "value": {
                            "en-US": "VALUE"
                          }
                        },
                        {
                          "external_id": "val2",
                          "value": {
                            "en-US": "VALUE2"
                          }
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "order": 1,
                  "groups": [
                    {
                      "external_id": "hair",
                      "name": {
                        "en": "Hair"
                      }
                    },
                    {
                      "external_id": "accessory",
                      "name": {
                        "en": "Accessory"
                      }
                    }
                  ],
                  "prices": [
                    {
                      "amount": 4.99,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true
                    },
                    {
                      "amount": 20.99,
                      "currency": "CZK",
                      "is_default": false,
                      "is_enabled": true
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "limits": {
                    "per_user": {
                      "total": 5
                    },
                    "per_item": {
                      "total": 500,
                      "available": 455,
                      "reserved": 5,
                      "sold": 40
                    },
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": []
                }
              ]
            },
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Virtual-Items-Currency_admin-virtual-item"
                  }
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-admin-get-item": {
        "description": "The specified virtual item was successfully received.",
        "content": {
          "application/json": {
            "example": {
              "sku": "com.xsolla.swords_1",
              "name": {
                "en": "Sword Xsolla Skin"
              },
              "type": "virtual_good",
              "description": {
                "en": "Honshu Boshin Wakizashi - Modern Tactical Samurai / Ninja Sword - Hand Forged 1060 Carbon Steel - Full Tang, Fully Functional, Battle Ready - Black TPR, Steel Guard and Pommel"
              },
              "image_url": "https://cdn.xsolla.net/img/misc/images/8ab44fe99038a56de01950ba4a971b77.png",
              "long_description": {
                "en": "Honshu Boshin Wakizashi - Modern Tactical Samurai / Ninja Sword - Hand Forged 1060 Carbon Steel - Full Tang, Fully Functional, Battle Ready - Black TPR, Steel Guard and Pommel"
              },
              "attributes": [
                {
                  "external_id": "attr_1",
                  "name": {
                    "en-US": "OK"
                  },
                  "values": [
                    {
                      "external_id": "val1",
                      "value": {
                        "en-US": "VALUE"
                      }
                    },
                    {
                      "external_id": "val2",
                      "value": {
                        "en-US": "VALUE2"
                      }
                    }
                  ]
                }
              ],
              "is_free": false,
              "order": 1,
              "groups": [
                {
                  "external_id": "accessory",
                  "name": {
                    "en": "accessory"
                  }
                },
                {
                  "external_id": "weapon",
                  "name": {
                    "en": "weapon"
                  }
                }
              ],
              "prices": [
                {
                  "amount": 4.99,
                  "currency": "USD",
                  "is_default": true,
                  "is_enabled": true,
                  "country_iso": "US"
                }
              ],
              "media_list": [],
              "vc_prices": [],
              "is_enabled": true,
              "is_show_in_store": true,
              "regions": [],
              "inventory_options": {
                "consumable": null,
                "expiration_period": null
              },
              "limits": {
                "per_user": {
                  "total": 5
                },
                "per_item": null,
                "recurrent_schedule": {
                  "per_user": {
                    "interval_type": "daily",
                    "day_of_week": null,
                    "day_of_month": null,
                    "time": "11:00:00+08:00",
                    "reset_next_date": 1677553200,
                    "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                    "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                  }
                }
              },
              "periods": [
                {
                  "date_from": "2020-08-11T10:00:00+03:00",
                  "date_until": "2020-08-11T20:00:00+03:00"
                }
              ],
              "custom_attributes": {
                "purchased": 0,
                "attr": "value"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_admin-virtual-item"
            }
          }
        }
      },
      "Virtual-Items-Currency_200-admin-get-virtual-currencies": {
        "description": "The list of virtual currencies was successfully received.",
        "content": {
          "application/json": {
            "example": {
              "items": [
                {
                  "sku": "com.xsolla.crystal_1",
                  "name": {
                    "en": "Crystals",
                    "ru": "Crystals"
                  },
                  "type": "virtual_currency",
                  "description": {
                    "en": "Main in-game currency"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                  "long_description": null,
                  "attributes": [
                    {
                      "external_id": "attr_1",
                      "name": {
                        "en-US": "OK"
                      },
                      "values": [
                        {
                          "external_id": "val1",
                          "value": {
                            "en-US": "VALUE"
                          }
                        },
                        {
                          "external_id": "val2",
                          "value": {
                            "en-US": "VALUE2"
                          }
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "order": 1,
                  "groups": [],
                  "prices": [
                    {
                      "amount": 1,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true,
                      "country_iso": "US"
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "is_hard": false,
                  "limits": {
                    "per_user": {
                      "total": 5
                    },
                    "per_item": null,
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": [
                    {
                      "date_from": "2020-08-11T10:00:00+03:00",
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ],
                  "custom_attributes": {
                    "purchased": 0,
                    "attr": "value"
                  }
                },
                {
                  "sku": "com.xsolla.gold_1",
                  "name": {
                    "en": "Gold",
                    "ru": "Gold"
                  },
                  "type": "virtual_currency",
                  "description": {
                    "en": "Money for in-store purchases"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/bc1bf2bdeca78515d5d15e545d6884be.png",
                  "long_description": null,
                  "attributes": [],
                  "is_free": false,
                  "order": 1,
                  "groups": [],
                  "prices": [
                    {
                      "amount": 1,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true,
                      "country_iso": "US"
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "is_hard": false,
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": []
                }
              ]
            },
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Virtual-Items-Currency_admin-virtual-currency"
                  }
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-admin-get-virtual-currency": {
        "description": "The specified virtual currency was successfully received.",
        "content": {
          "application/json": {
            "example": {
              "sku": "com.xsolla.crystal_1",
              "name": {
                "en": "Crystals",
                "ru": "Crystals"
              },
              "type": "virtual_currency",
              "description": {
                "en": "Main in-game currency"
              },
              "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
              "long_description": null,
              "attributes": [
                {
                  "external_id": "attr_1",
                  "name": {
                    "en-US": "OK"
                  },
                  "values": [
                    {
                      "external_id": "val1",
                      "value": {
                        "en-US": "VALUE"
                      }
                    },
                    {
                      "external_id": "val2",
                      "value": {
                        "en-US": "VALUE2"
                      }
                    }
                  ]
                }
              ],
              "is_free": false,
              "order": 1,
              "groups": [],
              "prices": [
                {
                  "amount": 1,
                  "currency": "USD",
                  "is_default": true,
                  "is_enabled": true,
                  "country_iso": "US"
                }
              ],
              "media_list": [],
              "vc_prices": [],
              "is_enabled": true,
              "is_show_in_store": true,
              "regions": [],
              "inventory_options": {
                "consumable": true,
                "expiration_period": null
              },
              "is_hard": false,
              "limits": {
                "per_user": null,
                "per_item": null,
                "recurrent_schedule": null
              },
              "periods": [],
              "custom_attributes": {
                "purchased": 0,
                "attr": "value"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_admin-virtual-currency"
            }
          }
        }
      },
      "Virtual-Items-Currency_404-item": {
        "description": "The item was not found. Make sure the `project_id` and the `item_sku` are correct.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-4001]: Item with Project Id = 44056 and Sku = booster_mega_12222 not found"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Virtual-Items-Currency_200-admin-get-virtual-currency-packages": {
        "description": "The list of virtual currency packages was successfully received.",
        "content": {
          "application/json": {
            "example": {
              "items": [
                {
                  "sku": "com.xsolla.crystal_pack_1",
                  "name": {
                    "en": "Small crystal pack"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Crystals x100"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/a8682cea328afda0bd127d59eb5b9077.png",
                  "long_description": null,
                  "attributes": [
                    {
                      "external_id": "attr_1",
                      "name": {
                        "en-US": "OK"
                      },
                      "values": [
                        {
                          "external_id": "val1",
                          "value": {
                            "en-US": "VALUE"
                          }
                        },
                        {
                          "external_id": "val2",
                          "value": {
                            "en-US": "VALUE2"
                          }
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "order": 1,
                  "groups": [],
                  "prices": [
                    {
                      "amount": 5,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true,
                      "country_iso": "US"
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "virtual_currency_package",
                  "content": [
                    {
                      "description": {
                        "en": "Main in-game currency"
                      },
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                      "sku": "com.xsolla.crystal_1",
                      "name": {
                        "en": "Crystals",
                        "ru": "Crystals"
                      },
                      "type": "virtual_currency",
                      "inventory_options": {
                        "consumable": true,
                        "expiration_period": null
                      },
                      "quantity": 100
                    }
                  ],
                  "limits": {
                    "per_user": {
                      "total": 5
                    },
                    "per_item": null,
                    "recurrent_schedule": {
                      "per_user": {
                        "interval_type": "daily",
                        "day_of_week": null,
                        "day_of_month": null,
                        "time": "11:00:00+08:00",
                        "reset_next_date": 1677553200,
                        "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                        "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                      }
                    }
                  },
                  "periods": [
                    {
                      "date_from": "2020-08-11T10:00:00+03:00",
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ],
                  "custom_attributes": {
                    "purchased": 0,
                    "attr": "value"
                  }
                },
                {
                  "sku": "com.xsolla.crystal_pack_2",
                  "name": {
                    "en": "Medium crystal pack"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Crystals x500"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/431a40dd8c99290dd761508964ddbacf.png",
                  "long_description": null,
                  "attributes": [],
                  "is_free": false,
                  "order": 1,
                  "groups": [],
                  "prices": [
                    {
                      "amount": 20,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true,
                      "country_iso": "US"
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "virtual_currency_package",
                  "content": [
                    {
                      "description": {
                        "en": "Main in-game currency"
                      },
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                      "sku": "com.xsolla.crystal_2",
                      "name": {
                        "en": "Crystals",
                        "ru": "Crystals"
                      },
                      "type": "virtual_currency",
                      "inventory_options": {
                        "consumable": true,
                        "expiration_period": null
                      },
                      "quantity": 500
                    }
                  ],
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": [
                    {
                      "date_from": null,
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ]
                },
                {
                  "sku": "com.xsolla.crystal_pack_3",
                  "name": {
                    "en": "Massive crystal pack"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Crystals x1500"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/1d67a1d2f92d69e021a97effa692dff3.png",
                  "long_description": null,
                  "attributes": [],
                  "is_free": false,
                  "order": 1,
                  "groups": [],
                  "prices": [
                    {
                      "amount": 50,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true,
                      "country_iso": "US"
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "virtual_currency_package",
                  "content": [
                    {
                      "description": {
                        "en": "Main in-game currency"
                      },
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                      "sku": "com.xsolla.crystal_3",
                      "name": {
                        "en": "Crystals",
                        "ru": "Crystals"
                      },
                      "type": "virtual_currency",
                      "inventory_options": {
                        "consumable": true,
                        "expiration_period": null
                      },
                      "quantity": 1500
                    }
                  ],
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": []
                },
                {
                  "sku": "com.xsolla.gold_pack_1",
                  "name": {
                    "en": "Small gold pack"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Gold x100"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/09984ff0a3ae6b367c9c886b31366950.png",
                  "long_description": null,
                  "attributes": [],
                  "is_free": false,
                  "order": 1,
                  "groups": [],
                  "prices": [
                    {
                      "amount": 5,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true,
                      "country_iso": "US"
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "virtual_currency_package",
                  "content": [
                    {
                      "description": {
                        "en": "Money for in-store purchases"
                      },
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/bc1bf2bdeca78515d5d15e545d6884be.png",
                      "sku": "com.xsolla.gold_1",
                      "name": {
                        "en": "Gold",
                        "ru": "Gold"
                      },
                      "type": "virtual_currency",
                      "inventory_options": {
                        "consumable": true,
                        "expiration_period": null
                      },
                      "quantity": 100
                    }
                  ],
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": []
                },
                {
                  "sku": "com.xsolla.gold_pack_2",
                  "name": {
                    "en": "Medium gold pack"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Gold x500"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/b5d8130bdaf28aa55c43a68aa3ca0ef4.png",
                  "long_description": null,
                  "attributes": [
                    {
                      "external_id": "attr_1",
                      "name": {
                        "en-US": "OK"
                      },
                      "values": [
                        {
                          "external_id": "val1",
                          "value": {
                            "en-US": "VALUE"
                          }
                        },
                        {
                          "external_id": "val2",
                          "value": {
                            "en-US": "VALUE2"
                          }
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "order": 1,
                  "groups": [],
                  "prices": [
                    {
                      "amount": 20,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true,
                      "country_iso": "US"
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "virtual_currency_package",
                  "content": [
                    {
                      "description": {
                        "en": "Money for in-store purchases"
                      },
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/bc1bf2bdeca78515d5d15e545d6884be.png",
                      "sku": "com.xsolla.gold_2",
                      "name": {
                        "en": "Gold",
                        "ru": "Gold"
                      },
                      "type": "virtual_currency",
                      "inventory_options": {
                        "consumable": true,
                        "expiration_period": null
                      },
                      "quantity": 500
                    }
                  ],
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": []
                },
                {
                  "sku": "com.xsolla.gold_pack_3",
                  "name": {
                    "en": "Large gold pack"
                  },
                  "type": "bundle",
                  "description": {
                    "en": "Gold x1500"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/dea74a3667807d5502a4acb8f4c879ca.png",
                  "long_description": null,
                  "attributes": [
                    {
                      "external_id": "attr_1",
                      "name": {
                        "en-US": "OK"
                      },
                      "values": [
                        {
                          "external_id": "val1",
                          "value": {
                            "en-US": "VALUE"
                          }
                        },
                        {
                          "external_id": "val2",
                          "value": {
                            "en-US": "VALUE2"
                          }
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "order": 1,
                  "groups": [],
                  "prices": [
                    {
                      "amount": 50,
                      "currency": "USD",
                      "is_default": true,
                      "is_enabled": true,
                      "country_iso": "US"
                    }
                  ],
                  "media_list": [],
                  "vc_prices": [],
                  "is_enabled": true,
                  "is_show_in_store": true,
                  "regions": [],
                  "bundle_type": "virtual_currency_package",
                  "content": [
                    {
                      "description": {
                        "en": "Money for in-store purchases"
                      },
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/bc1bf2bdeca78515d5d15e545d6884be.png",
                      "sku": "com.xsolla.gold_3",
                      "name": {
                        "en": "Gold",
                        "ru": "Gold"
                      },
                      "type": "virtual_currency",
                      "inventory_options": {
                        "consumable": true,
                        "expiration_period": null
                      },
                      "quantity": 1500
                    }
                  ],
                  "limits": {
                    "per_user": null,
                    "per_item": null,
                    "recurrent_schedule": null
                  },
                  "periods": []
                }
              ]
            },
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Virtual-Items-Currency_admin-virtual-currency-package"
                  }
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-admin-get-virtual-currency-package": {
        "description": "The specified virtual currency package was successfully received.",
        "content": {
          "application/json": {
            "example": {
              "sku": "com.xsolla.crystal_pack_1",
              "name": {
                "en": "Small crystal pack"
              },
              "type": "bundle",
              "description": {
                "en": "Crystals x100"
              },
              "image_url": "https://cdn3.xsolla.com/img/misc/images/a8682cea328afda0bd127d59eb5b9077.png",
              "long_description": null,
              "attributes": [
                {
                  "external_id": "attr_1",
                  "name": {
                    "en-US": "OK"
                  },
                  "values": [
                    {
                      "external_id": "val1",
                      "value": {
                        "en-US": "VALUE"
                      }
                    },
                    {
                      "external_id": "val2",
                      "value": {
                        "en-US": "VALUE2"
                      }
                    }
                  ]
                }
              ],
              "is_free": false,
              "order": 1,
              "groups": [],
              "prices": [
                {
                  "amount": 5,
                  "currency": "USD",
                  "is_default": true,
                  "is_enabled": true,
                  "country_iso": "US"
                }
              ],
              "media_list": [],
              "vc_prices": [],
              "is_enabled": true,
              "is_show_in_store": true,
              "regions": [],
              "bundle_type": "virtual_currency_package",
              "content": [
                {
                  "description": {
                    "en": "Main in-game currency"
                  },
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                  "sku": "com.xsolla.crystal_1",
                  "name": {
                    "en": "Crystals",
                    "ru": "Crystals"
                  },
                  "type": "virtual_currency",
                  "inventory_options": {
                    "consumable": true,
                    "expiration_period": null
                  },
                  "quantity": 100
                }
              ],
              "limits": {
                "per_user": null,
                "per_item": null,
                "recurrent_schedule": null
              },
              "periods": [],
              "custom_attributes": {
                "purchased": 0,
                "attr": "value"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_admin-virtual-currency-package"
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-items-list": {
        "description": "The list of virtual items was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_item-list"
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": true,
                  "items": [
                    {
                      "sku": "com.xsolla.big_rocket_1",
                      "name": {
                        "en": "Big Rocket"
                      },
                      "groups": [
                        {
                          "external_id": "accessory",
                          "name": {
                            "en": "accessory"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": {
                            "en": "Stack size"
                          },
                          "values": [
                            {
                              "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "5"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_good",
                      "description": {
                        "en": "Big Rocket - description"
                      },
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                      "is_free": false,
                      "price": {
                        "amount": "100.99",
                        "amount_without_discount": "100.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.vc_1",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": null,
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            },
                            {
                              "quantity": 1,
                              "sku": "com.xsolla.phys_good_1",
                              "type": "physical_good"
                            },
                            {
                              "quantity": 1,
                              "name": "Super Lootbox with items",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/9676f06265375087e607cb79c5283688.png",
                              "sku": "com.xsolla.SuperLootboxBundle_1",
                              "type": "bundle",
                              "bundle_type": "standard"
                            }
                          ]
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ],
                      "custom_attributes": {
                        "purchased": 0,
                        "attr": "value"
                      },
                      "vp_rewards": []
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_1",
                      "name": {
                        "en": "SHOTGUN FOR TRUE RAIDERS"
                      },
                      "groups": [
                        {
                          "external_id": "hair",
                          "name": {
                            "en": "hair"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": {
                            "en": "Stack size"
                          },
                          "values": [
                            {
                              "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "5"
                            }
                          ]
                        },
                        {
                          "external_id": "rating",
                          "name": {
                            "en": "Rating"
                          },
                          "values": [
                            {
                              "external_id": "rating_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "3.9"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_good",
                      "description": {
                        "en": "description"
                      },
                      "image_url": "http://image.png",
                      "is_free": false,
                      "price": {
                        "amount": "101.0",
                        "amount_without_discount": "101.0",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.vc_1",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        },
                        {
                          "amount": 200,
                          "sku": "com.xsolla.vc_2",
                          "is_default": false,
                          "amount_without_discount": 200,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [],
                      "limits": null,
                      "periods": [
                        {
                          "date_from": null,
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ],
                      "vp_rewards": []
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_2",
                      "name": {
                        "en": "SHOTGUN FOR TRUE RAIDERS"
                      },
                      "groups": [],
                      "attributes": [],
                      "type": "virtual_good",
                      "description": {
                        "en": "description"
                      },
                      "image_url": "http://image.png",
                      "is_free": true,
                      "price": null,
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [],
                      "limits": null,
                      "periods": [],
                      "vp_rewards": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-item-by-sku": {
        "description": "The virtual item was successfully received.",
        "content": {
          "application/json": {
            "example": {
              "item_id": 488833,
              "sku": "com.xsolla.swords_1",
              "type": "virtual_good",
              "name": {
                "en": "Sword Xsolla Skin"
              },
              "description": {
                "en": "Honshu Boshin Wakizashi - Modern Tactical Samurai / Ninja Sword - Hand Forged 1060 Carbon Steel - Full Tang, Fully Functional, Battle Ready - Black TPR, Steel Guard and Pommel"
              },
              "image_url": "https://cdn.xsolla.net/img/misc/images/8ab44fe99038a56de01950ba4a971b77.png",
              "price": {
                "amount": "4.99",
                "amount_without_discount": "4.99",
                "currency": "USD"
              },
              "virtual_prices": [],
              "can_be_bought": true,
              "promotions": [],
              "limits": {
                "per_user": {
                  "total": 5
                },
                "per_item": null,
                "recurrent_schedule": {
                  "per_user": {
                    "interval_type": "daily",
                    "day_of_week": null,
                    "day_of_month": null,
                    "time": "11:00:00+08:00",
                    "reset_next_date": 1677553200,
                    "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                    "displayable_reset_next_date": "2023-02-28T11:00:00+08:00"
                  }
                }
              },
              "periods": [
                {
                  "date_from": "2020-08-11T10:00:00+03:00",
                  "date_until": "2020-08-11T20:00:00+03:00"
                }
              ],
              "attributes": [
                {
                  "external_id": "attr_1",
                  "name": {
                    "en-US": "OK"
                  },
                  "values": [
                    {
                      "external_id": "val1",
                      "value": "VALUE"
                    },
                    {
                      "external_id": "val2",
                      "value": "VALUE2"
                    }
                  ]
                }
              ],
              "is_free": false,
              "groups": [
                {
                  "external_id": "weapons",
                  "name": {
                    "en": "weapons"
                  }
                }
              ],
              "virtual_item_type": "non_consumable",
              "vp_rewards": [],
              "inventory_options": {
                "consumable": null,
                "expiration_period": null
              },
              "custom_attributes": {
                "purchased": 0,
                "attr": "value"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_item"
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-all-items-list": {
        "description": "The list of all virtual items was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with virtual items.",
              "properties": {
                "items": {
                  "type": "array",
                  "example": [
                    {
                      "sku": "com.xsolla.big_rocket_1",
                      "name": "Big Rocket",
                      "description": "Big Rocket - description",
                      "groups": [
                        {
                          "external_id": "accessory",
                          "name": {
                            "en": "accessory"
                          }
                        }
                      ]
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_1",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "description": "description",
                      "groups": [
                        {
                          "external_id": "hair",
                          "name": {
                            "en": "Hair"
                          }
                        }
                      ]
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_2",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "description": "description",
                      "groups": []
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "example": "com.xsolla.big_rocket_1",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "name": {
                        "type": "string",
                        "example": "Big Rocket",
                        "description": "Item name."
                      },
                      "groups": {
                        "type": "array",
                        "properties": {
                          "external_id": {
                            "type": "string",
                            "example": "weapons"
                          },
                          "name": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "example": "Big Rocket - description",
                        "description": "Item description."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "items": [
                    {
                      "sku": "com.xsolla.big_rocket_1",
                      "name": "Big Rocket",
                      "groups": [
                        {
                          "external_id": "accessory",
                          "name": {
                            "en": "Accessory"
                          }
                        }
                      ],
                      "description": "Big Rocket - description"
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_1",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "groups": [
                        {
                          "external_id": "hair",
                          "name": {
                            "en": "Hair"
                          }
                        }
                      ],
                      "description": "description"
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_2",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "groups": [],
                      "description": "description"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-virtual-currency-list": {
        "description": "The list of virtual currency was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_virtual-currency-list"
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": false,
                  "items": [
                    {
                      "sku": "com.xsolla.big_rocket_1",
                      "name": "Big Rocket",
                      "groups": [
                        {
                          "external_id": "weapons",
                          "name": {
                            "en": "weapons"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": {
                            "en": "Stack size"
                          },
                          "values": [
                            {
                              "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "5"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_currency",
                      "description": "Big Rocket - short description",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                      "is_free": false,
                      "price": {
                        "amount": "100.99",
                        "amount_without_discount": "100.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.shotgun_raider_1",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "promotions": [],
                      "limits": null,
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ],
                      "custom_attributes": {
                        "purchased": 0,
                        "attr": "value"
                      },
                      "vp_rewards": []
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_2",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "groups": [
                        {
                          "external_id": "weapons",
                          "name": {
                            "en": "weapons"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": {
                            "en": "Stack size"
                          },
                          "values": [
                            {
                              "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "5"
                            }
                          ]
                        },
                        {
                          "external_id": "rating",
                          "name": {
                            "en": "Rating"
                          },
                          "values": [
                            {
                              "external_id": "rating_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "3.9"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_currency",
                      "description": "description",
                      "image_url": "http://image.png",
                      "is_free": false,
                      "price": {
                        "amount": "101.0",
                        "amount_without_discount": "101.0",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "promotions": [],
                      "limits": null,
                      "periods": [
                        {
                          "date_from": null,
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ],
                      "vp_rewards": []
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_3",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "groups": [],
                      "attributes": [],
                      "type": "virtual_currency",
                      "description": "description",
                      "image_url": "http://image.png",
                      "is_free": true,
                      "price": null,
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "promotions": [],
                      "limits": null,
                      "periods": [],
                      "vp_rewards": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-virtual-currency": {
        "description": "The virtual currency was successfully received.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "value": {
                  "item_id": 451414,
                  "sku": "com.xsolla.crystal_1",
                  "type": "virtual_currency",
                  "name": "Crystals",
                  "description": "Crystals - short description",
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                  "price": {
                    "amount": "100",
                    "amount_without_discount": "100",
                    "currency": "USD"
                  },
                  "virtual_prices": [],
                  "can_be_bought": true,
                  "promotions": [],
                  "limits": null,
                  "periods": [
                    {
                      "date_from": "2023-08-11T10:00:00+03:00",
                      "date_until": "2023-08-11T20:00:00+03:00"
                    }
                  ],
                  "attributes": [
                    {
                      "external_id": "attr1",
                      "name": {
                        "en-US": "Attribute"
                      },
                      "values": [
                        {
                          "external_id": "val1",
                          "value": "Value"
                        },
                        {
                          "external_id": "val2",
                          "value": "Value"
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "groups": [],
                  "inventory_options": {
                    "consumable": {
                      "usages_count": 1
                    },
                    "expiration_period": null
                  },
                  "custom_attributes": {
                    "purchased": 0,
                    "attr": "value"
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_virtual-currency"
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-virtual-currency-packages-list": {
        "description": "The list of virtual currency packages was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_virtual-currency-packages"
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": false,
                  "items": [
                    {
                      "sku": "com.xsolla.vc_package_1",
                      "name": "VC Name first package",
                      "groups": [],
                      "attributes": [],
                      "type": "bundle",
                      "description": "VC Short Package Description",
                      "image_url": "http://vc_package_image.png",
                      "is_free": false,
                      "price": {
                        "amount": "2.0000",
                        "amount_without_discount": "2.0000",
                        "currency": "USD"
                      },
                      "bundle_type": "virtual_currency_package",
                      "content": [
                        {
                          "description": "Big Rocket - short description",
                          "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                          "sku": "com.xsolla.big_rocket_1",
                          "name": "Big Rocket",
                          "type": "virtual_currency",
                          "quantity": 100,
                          "inventory_options": {
                            "consumable": {
                              "usages_count": 1
                            },
                            "expiration_period": null
                          }
                        }
                      ],
                      "virtual_prices": [],
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "can_be_bought": true,
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ],
                      "custom_attributes": {
                        "purchased": 0,
                        "attr": "value"
                      },
                      "vp_rewards": []
                    },
                    {
                      "sku": "com.xsolla.vc_package_3",
                      "name": "VC Name third package",
                      "groups": [],
                      "attributes": [],
                      "type": "bundle",
                      "description": "VC Short Package Description",
                      "image_url": "http://vc_package_image.png",
                      "is_free": false,
                      "price": {
                        "amount": "4.0000",
                        "amount_without_discount": "4.0000",
                        "currency": "USD"
                      },
                      "bundle_type": "virtual_currency_package",
                      "content": [
                        {
                          "description": "description",
                          "image_url": "http://image.png",
                          "sku": "com.xsolla.shotgun_raider_1",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "quantity": 200,
                          "inventory_options": {
                            "consumable": {
                              "usages_count": 1
                            },
                            "expiration_period": null
                          }
                        }
                      ],
                      "virtual_prices": [],
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "can_be_bought": true,
                      "periods": [
                        {
                          "date_from": null,
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ],
                      "vp_rewards": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-virtual-currency-package": {
        "description": "The virtual currency package was successfully received.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "value": {
                  "item_id": 488832,
                  "sku": "com.xsolla.crystal_pack_1",
                  "type": "bundle",
                  "name": "Crystal Pack",
                  "bundle_type": "virtual_currency_package",
                  "description": "Crystal Pack Short Description",
                  "image_url": "http://vc_package_image.png",
                  "price": {
                    "amount": "100",
                    "amount_without_discount": "100",
                    "currency": "USD"
                  },
                  "virtual_prices": [],
                  "can_be_bought": true,
                  "promotions": [],
                  "limits": {
                    "per_user": {
                      "total": 1,
                      "available": 1,
                      "recurrent_schedule": {
                        "interval_type": "weekly",
                        "reset_next_date": 1690732800
                      }
                    },
                    "per_item": null
                  },
                  "periods": [
                    {
                      "date_from": "2020-08-11T10:00:00+03:00",
                      "date_until": "2020-08-11T20:00:00+03:00"
                    }
                  ],
                  "attributes": [],
                  "is_free": false,
                  "groups": [],
                  "content": [
                    {
                      "item_id": 488831,
                      "sku": "com.xsolla.crystals_1",
                      "type": "virtual_currency",
                      "name": "Crystals",
                      "description": "Crystal - short description",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/da33ab6cc1d7e5899cfdc5b6b6180fad.png",
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "quantity": 10,
                      "limits": null
                    }
                  ],
                  "vp_rewards": [],
                  "custom_attributes": {
                    "purchased": 0,
                    "attr": "value"
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_virtual-currency-package"
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-items-by-group-id": {
        "description": "The list of items from the specified group was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "items": {
                  "type": "array",
                  "example": [
                    {
                      "sku": "com.xsolla.big_rocket_1",
                      "name": "Big Rocket",
                      "groups": [
                        {
                          "external_id": "weapons",
                          "name": {
                            "en": "weapons"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": "Stack size",
                          "values": [
                            {
                              "value": "5"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_good",
                      "description": "Big Rocket - description",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                      "is_free": false,
                      "price": {
                        "amount": "100.99",
                        "amount_without_discount": "100.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.vc_1",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ]
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "groups": [
                        {
                          "external_id": "weapons",
                          "name": {
                            "en": "weapons"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": "Stack size",
                          "values": [
                            {
                              "value": "5"
                            }
                          ]
                        },
                        {
                          "external_id": "rating",
                          "name": "Rating",
                          "values": [
                            {
                              "value": "3.9"
                            }
                          ]
                        },
                        {
                          "external_id": "genre",
                          "name": "Genre",
                          "values": [
                            {
                              "value": "Strategy"
                            },
                            {
                              "value": "Tactical"
                            },
                            "Turn-based"
                          ]
                        }
                      ],
                      "type": "virtual_good",
                      "description": "description",
                      "image_url": "http://image.png",
                      "is_free": false,
                      "price": {
                        "amount": "101.0",
                        "amount_without_discount": "101.0",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.vc_1",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        },
                        {
                          "amount": 200,
                          "sku": "com.xsolla.vc_2",
                          "is_default": false,
                          "amount_without_discount": 200,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [],
                      "limits": null,
                      "periods": []
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "example": "com.xsolla.big_rocket_1",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "name": {
                        "type": "string",
                        "example": "Big Rocket",
                        "description": "Item name."
                      },
                      "groups": {
                        "type": "array",
                        "example": [
                          {
                            "external_id": "accessory",
                            "name": "Accessory"
                          }
                        ],
                        "description": "Groups the item belongs to.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string",
                              "example": "accessory"
                            },
                            "name": {
                              "type": "object",
                              "example": "Accessory"
                            }
                          }
                        }
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Virtual-Items-Currency_client-attributes"
                      },
                      "type": {
                        "type": "string",
                        "example": "virtual_good",
                        "description": "Type of item: `consumable`/`expiration`/`permanent`/`lootboxes`/`physical`."
                      },
                      "description": {
                        "type": "string",
                        "example": "Big Rocket - description",
                        "description": "Item description."
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                        "description": "Image URL."
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "price": {
                        "type": "object",
                        "description": "Item prices.",
                        "properties": {
                          "amount": {
                            "type": "string",
                            "example": "100.99",
                            "description": "Discounted item price."
                          },
                          "amount_without_discount": {
                            "type": "string",
                            "example": "100.99",
                            "description": "Item price."
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD",
                            "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                          }
                        }
                      },
                      "virtual_prices": {
                        "type": "array",
                        "description": "Virtual prices.",
                        "items": {
                          "type": "object",
                          "description": "Virtual price.",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "example": 100,
                              "description": "Discounted item price in virtual currency."
                            },
                            "amount_without_discount": {
                              "type": "integer",
                              "example": 200,
                              "description": "Item price."
                            },
                            "sku": {
                              "type": "string",
                              "example": "com.xsolla.vc_1",
                              "description": "Virtual currency item SKU."
                            },
                            "is_default": {
                              "type": "boolean",
                              "example": true,
                              "description": "Whether price is default for item."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "http://image.png"
                            },
                            "name": {
                              "type": "string",
                              "example": "SHOTGUN FOR TRUE RAIDERS",
                              "description": "Virtual currency name."
                            },
                            "type": {
                              "type": "string",
                              "example": "virtual_currency",
                              "description": "Virtual currency type."
                            },
                            "description": {
                              "type": "string",
                              "example": "Big Rocket - description",
                              "description": "Virtual currency description."
                            }
                          }
                        }
                      },
                      "can_be_bought": {
                        "$ref": "#/components/schemas/Can_be_bought"
                      },
                      "inventory_options": {
                        "type": "object",
                        "description": "Defines the inventory item options.",
                        "properties": {
                          "consumable": {
                            "type": "object",
                            "nullable": true,
                            "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
                            "properties": {
                              "usages_count": {
                                "type": "integer",
                                "example": 1,
                                "nullable": true,
                                "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
                              }
                            }
                          },
                          "expiration_period": {
                            "type": "object",
                            "nullable": true,
                            "description": "Defines the expiration properties if this is a expired item, or `null` if this is a non-expired item.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "day",
                                "enum": [
                                  "minute",
                                  "hour",
                                  "day",
                                  "week",
                                  "month",
                                  "year"
                                ],
                                "description": "Defines type of expiration of an item."
                              },
                              "value": {
                                "type": "integer",
                                "example": 1,
                                "description": "Defines value for expiration period."
                              }
                            }
                          }
                        }
                      },
                      "virtual_item_type": {
                        "type": "string",
                        "example": "non_consumable",
                        "description": "Type of virtual item.",
                        "x-enumDescriptions": {
                          "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
                          "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
                          "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
                        },
                        "enum": [
                          "consumable",
                          "non_consumable",
                          "non_renewing_subscription"
                        ]
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Catalog_item_limits"
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods-response"
                      },
                      "custom_attributes": {
                        "$ref": "#/components/schemas/item-custom-attributes-response"
                      },
                      "vp_rewards": {
                        "$ref": "#/components/schemas/client-item-value-point-reward"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": false,
                  "items": [
                    {
                      "sku": "com.xsolla.big_rocket_1",
                      "name": "Big Rocket",
                      "groups": [
                        {
                          "external_id": "weapons",
                          "name": {
                            "en": "weapons"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": {
                            "en": "Stack size"
                          },
                          "values": [
                            {
                              "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "5"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_good",
                      "description": "Big Rocket - description",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                      "is_free": false,
                      "price": {
                        "amount": "100.99",
                        "amount_without_discount": "100.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.vc_1",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "periods": [
                        {
                          "date_from": "2020-08-11T10:00:00+03:00",
                          "date_until": "2020-08-11T20:00:00+03:00"
                        }
                      ],
                      "custom_attributes": {
                        "purchased": 0,
                        "attr": "value"
                      },
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ]
                    },
                    {
                      "sku": "com.xsolla.shotgun_raider_1",
                      "name": "SHOTGUN FOR TRUE RAIDERS",
                      "groups": [
                        {
                          "external_id": "weapons",
                          "name": {
                            "en": "weapons"
                          }
                        }
                      ],
                      "attributes": [
                        {
                          "external_id": "stack_size",
                          "name": {
                            "en": "Stack size"
                          },
                          "values": [
                            {
                              "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "5"
                            }
                          ]
                        },
                        {
                          "external_id": "rating",
                          "name": {
                            "en": "Rating"
                          },
                          "values": [
                            {
                              "external_id": "rating_e3364991f92e751689a68b96598a5a5a84010b85",
                              "value": "3.9"
                            }
                          ]
                        }
                      ],
                      "type": "virtual_good",
                      "description": "description",
                      "image_url": "http://image.png",
                      "is_free": false,
                      "price": {
                        "amount": "101.0",
                        "amount_without_discount": "101.0",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "amount": 100,
                          "sku": "com.xsolla.vc_1",
                          "is_default": true,
                          "amount_without_discount": 100,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        },
                        {
                          "amount": 200,
                          "sku": "com.xsolla.vc_2",
                          "is_default": false,
                          "amount_without_discount": 200,
                          "image_url": "http://image.png",
                          "name": "SHOTGUN FOR TRUE RAIDERS",
                          "type": "virtual_currency",
                          "description": "description"
                        }
                      ],
                      "can_be_bought": true,
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": {
                          "type": "day",
                          "value": 1
                        }
                      },
                      "virtual_item_type": "non_renewing_subscription",
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "periods": [],
                      "vp_rewards": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_404-item-group": {
        "description": "The group wasn’t found. Make sure that the `external_id` is correct and the group isn’t turned off or deleted.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4403
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-4403]: Item group not found"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 404,
                  "errorCode": 4403,
                  "errorMessage": "[0401-4403]: Item group not found"
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-get-items-groups": {
        "description": "The list of groups was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "groups": {
                  "type": "array",
                  "example": [
                    {
                      "external_id": "hair",
                      "name": "Hair",
                      "description": "Hair description",
                      "image_url": null,
                      "order": 1,
                      "level": 0,
                      "children": [
                        {
                          "external_id": "background",
                          "name": "Background",
                          "description": "Background description",
                          "image_url": null,
                          "order": 1,
                          "level": 1,
                          "children": [
                            {
                              "external_id": "accessory",
                              "name": "Accessory",
                              "description": "Accessory",
                              "image_url": null,
                              "order": 1,
                              "level": 2,
                              "children": [],
                              "parent_external_id": "background"
                            }
                          ],
                          "parent_external_id": "hair"
                        }
                      ],
                      "parent_external_id": null
                    },
                    {
                      "external_id": "group_external_id",
                      "name": "Super",
                      "description": "Super description",
                      "image_url": null,
                      "order": 1,
                      "level": 0,
                      "children": [],
                      "parent_external_id": null
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "external_id": {
                        "type": "string",
                        "example": "hair",
                        "description": "External group ID."
                      },
                      "name": {
                        "type": "string",
                        "example": "Hair",
                        "description": "Group name."
                      },
                      "description": {
                        "type": "string",
                        "example": "Hair description",
                        "description": "Group description."
                      },
                      "image_url": {
                        "type": "string",
                        "example": null,
                        "description": "Image URL.",
                        "nullable": true
                      },
                      "order": {
                        "type": "integer",
                        "example": 1,
                        "description": "Defines arrangement order."
                      },
                      "level": {
                        "type": "integer",
                        "example": 0,
                        "description": "Group nesting level."
                      },
                      "children": {
                        "type": "array",
                        "example": [
                          {
                            "external_id": "background",
                            "name": "Background",
                            "description": "Background description",
                            "image_url": null,
                            "order": 1,
                            "level": 1,
                            "children": [
                              {
                                "external_id": "accessory",
                                "name": "Accessory",
                                "description": "Accessory",
                                "image_url": null,
                                "order": 1,
                                "level": 2,
                                "children": [],
                                "parent_external_id": "background"
                              }
                            ],
                            "parent_external_id": "hair"
                          }
                        ],
                        "description": "Child groups.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string",
                              "example": "background",
                              "description": "External group ID."
                            },
                            "name": {
                              "type": "string",
                              "example": "Background",
                              "description": "Group name."
                            },
                            "description": {
                              "type": "string",
                              "example": "Background description",
                              "description": "Group description."
                            },
                            "image_url": {
                              "type": "string",
                              "example": null,
                              "description": "Group image URL.",
                              "nullable": true
                            },
                            "order": {
                              "type": "integer",
                              "example": 1,
                              "description": "Defines arrangement order."
                            },
                            "level": {
                              "type": "integer",
                              "example": 1,
                              "description": "Group nesting level."
                            },
                            "children": {
                              "type": "array",
                              "example": [
                                {
                                  "external_id": "accessory",
                                  "name": "Accessory",
                                  "description": "Accessory",
                                  "image_url": null,
                                  "order": 1,
                                  "level": 2,
                                  "children": [],
                                  "parent_external_id": "background"
                                }
                              ],
                              "description": "Child groups.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "external_id": {
                                    "type": "string",
                                    "example": "accessory",
                                    "description": "External group ID."
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Accessory",
                                    "description": "Group name."
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "Accessory",
                                    "description": "Group description."
                                  },
                                  "image_url": {
                                    "type": "string",
                                    "example": null,
                                    "description": "Image URL.",
                                    "nullable": true
                                  },
                                  "order": {
                                    "type": "integer",
                                    "example": 1,
                                    "description": "Defines arrangement order."
                                  },
                                  "level": {
                                    "type": "integer",
                                    "example": 2,
                                    "description": "Group nesting level."
                                  },
                                  "children": {
                                    "type": "array",
                                    "example": [],
                                    "description": "Child groups.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "parent_external_id": {
                                    "type": "string",
                                    "example": "background",
                                    "description": "Parent external group ID.",
                                    "nullable": true
                                  }
                                }
                              }
                            },
                            "parent_external_id": {
                              "type": "string",
                              "example": "hair",
                              "description": "Parent external group ID.",
                              "nullable": true
                            }
                          }
                        }
                      },
                      "parent_external_id": {
                        "type": "string",
                        "example": null,
                        "description": "Parent external group ID.",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "groups": [
                    {
                      "external_id": "accessory",
                      "name": "Accessory",
                      "description": "Accessory",
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "children": [],
                      "parent_external_id": null
                    },
                    {
                      "external_id": "background",
                      "name": "Background",
                      "description": "Background",
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "children": [],
                      "parent_external_id": null
                    },
                    {
                      "external_id": "hair",
                      "name": "Hair",
                      "description": "Hair",
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "children": [],
                      "parent_external_id": null
                    },
                    {
                      "external_id": "outfit",
                      "name": "Outfit",
                      "description": "Outfit",
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "children": [],
                      "parent_external_id": null
                    },
                    {
                      "external_id": "body",
                      "name": "Body",
                      "description": "Body",
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "children": [],
                      "parent_external_id": null
                    },
                    {
                      "external_id": "delete_group",
                      "name": "Body",
                      "description": "Body",
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "children": [],
                      "parent_external_id": null
                    },
                    {
                      "external_id": "very_cool_group",
                      "name": "Very cool group",
                      "description": "Very cool group",
                      "image_url": null,
                      "level": 0,
                      "order": 1,
                      "children": [
                        {
                          "external_id": "test_group_secure",
                          "name": "Test group secure",
                          "description": "Group description",
                          "image_url": "http://static.xsolla.com/img/xsolla-logo2.png",
                          "level": 1,
                          "order": 5,
                          "children": [],
                          "parent_external_id": "very_cool_group"
                        }
                      ],
                      "parent_external_id": null
                    },
                    {
                      "external_id": "test_group_secure",
                      "name": "Test group secure",
                      "description": "Group description",
                      "image_url": "http://static.xsolla.com/img/xsolla-logo2.png",
                      "level": 0,
                      "order": 1,
                      "children": [
                        {
                          "external_id": "test_group_split",
                          "name": "Test group secure",
                          "description": "Group description",
                          "image_url": "http://static.xsolla.com/img/xsolla-logo2.png",
                          "level": 1,
                          "order": 1,
                          "children": [],
                          "parent_external_id": "test_group_secure"
                        }
                      ],
                      "parent_external_id": null
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_200-quick-purchase": {
        "description": "Successful quick virtual purchase.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "order_id": 641
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_422-not-enough-virtual-currency": {
        "description": "Not enough virtual currency.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "integer",
                  "example": 5006
                },
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-5006]: Not enough virtual currency"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "errorCode": 5006,
                  "statusCode": 422,
                  "errorMessage": "[0401-5006]: Not enough virtual currency"
                }
              }
            }
          }
        }
      },
      "sellable_items_200-get-items-list": {
        "description": "The list of sellable items was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with sellable items.",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "items": {
                  "type": "array",
                  "example": [
                    {
                      "item_id": 259765,
                      "sku": "com.xsolla.gold_1",
                      "type": "virtual_currency",
                      "name": "Gold",
                      "description": "",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                      "price": {
                        "amount": "1.00",
                        "amount_without_discount": "1.00",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ]
                    },
                    {
                      "item_id": 259766,
                      "sku": "com.xsolla.silver_1",
                      "type": "virtual_currency",
                      "name": "Silver",
                      "description": "",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                      "price": {
                        "amount": "0.50",
                        "amount_without_discount": "0.50",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "limits": null,
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259767,
                      "sku": "com.xsolla.bronze_1",
                      "type": "virtual_currency",
                      "name": "Bronze",
                      "description": "",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                      "price": {
                        "amount": "0.10",
                        "amount_without_discount": "0.10",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "limits": null,
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259768,
                      "sku": "com.xsolla.gold_chest_1",
                      "type": "bundle",
                      "name": "Chest of gold",
                      "bundle_type": "virtual_currency_package",
                      "description": "Chest of gold",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/61b8d0785093017ce1f50ebed55c42a9.png",
                      "price": {
                        "amount": "7.99",
                        "amount_without_discount": "7.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "content": [
                        {
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_1",
                          "type": "virtual_currency",
                          "name": "Gold",
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "inventory_options": {
                            "consumable": {
                              "usages_count": 1
                            },
                            "expiration_period": null
                          },
                          "quantity": 10
                        }
                      ],
                      "limits": null,
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259769,
                      "sku": "com.xsolla.silver_chest_1",
                      "type": "bundle",
                      "name": "Chest of silver",
                      "bundle_type": "virtual_currency_package",
                      "description": "Chest of silver",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/f0b59a3370404e8881107249051b70bd.png",
                      "price": {
                        "amount": "19.99",
                        "amount_without_discount": "19.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "content": [
                        {
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_1",
                          "type": "virtual_currency",
                          "name": "Silver",
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "inventory_options": {
                            "consumable": {
                              "usages_count": 1
                            },
                            "expiration_period": null
                          },
                          "quantity": 50
                        }
                      ],
                      "limits": null,
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259770,
                      "sku": "com.xsolla.bronze_chest_1",
                      "type": "bundle",
                      "name": "Chest of bronze",
                      "bundle_type": "virtual_currency_package",
                      "description": "Chest of bronze",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/b32eb5b1f4f0c202ea6ac4e21c2eae18.png",
                      "price": {
                        "amount": "5.99",
                        "amount_without_discount": "5.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "content": [
                        {
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_2",
                          "type": "virtual_currency",
                          "name": "Bronze",
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "inventory_options": {
                            "consumable": {
                              "usages_count": 1
                            },
                            "expiration_period": null
                          },
                          "quantity": 100
                        }
                      ],
                      "limits": null,
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259771,
                      "sku": "com.xsolla.sword_1",
                      "type": "virtual_good",
                      "name": "Sword",
                      "description": "Sword",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/a558727a420cad609556e4449b9ecb12.png",
                      "price": {
                        "amount": "1.99",
                        "amount_without_discount": "1.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_2",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_2",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 5,
                          "amount_without_discount": 5,
                          "calculated_price": {
                            "amount": "5.00",
                            "amount_without_discount": "5.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_2",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 50,
                          "amount_without_discount": 50,
                          "calculated_price": {
                            "amount": "50.00",
                            "amount_without_discount": "50.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "swords",
                          "name": "Swords"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "limits": null,
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259772,
                      "sku": "com.xsolla.saber_1",
                      "type": "virtual_good",
                      "name": "Saber",
                      "description": "Saber",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/edd914d60301d77b94926478d253fcb6.png",
                      "price": {
                        "amount": "3.99",
                        "amount_without_discount": "3.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_3",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 3,
                          "amount_without_discount": 3,
                          "calculated_price": {
                            "amount": "3.00",
                            "amount_without_discount": "3.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_3",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 7,
                          "amount_without_discount": 7,
                          "calculated_price": {
                            "amount": "7.00",
                            "amount_without_discount": "7.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_3",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 70,
                          "amount_without_discount": 70,
                          "calculated_price": {
                            "amount": "70.00",
                            "amount_without_discount": "70.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "swords",
                          "name": "Swords"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "limits": null,
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259773,
                      "sku": "com.xsolla.bow_1",
                      "type": "virtual_good",
                      "name": "Bow",
                      "description": "Bow",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/3bb3b0a5254ad15134c891108898363f.png",
                      "price": {
                        "amount": "4.99",
                        "amount_without_discount": "4.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_4",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 5,
                          "amount_without_discount": 5,
                          "calculated_price": {
                            "amount": "5.00",
                            "amount_without_discount": "5.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_4",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 10,
                          "amount_without_discount": 10,
                          "calculated_price": {
                            "amount": "10.00",
                            "amount_without_discount": "10.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_4",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 100,
                          "amount_without_discount": 100,
                          "calculated_price": {
                            "amount": "100.00",
                            "amount_without_discount": "100.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "bows",
                          "name": "Bows"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "limits": null,
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259774,
                      "sku": "com.xsolla.electric_shield_1",
                      "type": "virtual_good",
                      "name": "Electric shield",
                      "description": "Electric shield",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                      "price": {
                        "amount": "9.99",
                        "amount_without_discount": "9.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_5",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 10,
                          "amount_without_discount": 10,
                          "calculated_price": {
                            "amount": "10.00",
                            "amount_without_discount": "10.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_5",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_5",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 200,
                          "amount_without_discount": 200,
                          "calculated_price": {
                            "amount": "200.00",
                            "amount_without_discount": "200.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259775,
                      "sku": "com.xsolla.royal_shield_1",
                      "type": "virtual_good",
                      "name": "Royal shield",
                      "description": "Royal shield",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/ed417975312a52efeeab8b039ff25cb1.png",
                      "price": {
                        "amount": "19.99",
                        "amount_without_discount": "19.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_6",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_6",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_6",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 400,
                          "amount_without_discount": 400,
                          "calculated_price": {
                            "amount": "400.00",
                            "amount_without_discount": "400.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259776,
                      "sku": "com.xsolla.ancient_helmet_1",
                      "type": "virtual_good",
                      "name": "Ancient helmet",
                      "description": "Ancient helmet",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/e70e16d9626f435e519fc8e1cc1e7176.png",
                      "price": {
                        "amount": "1.99",
                        "amount_without_discount": "1.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_7",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_7",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 4,
                          "amount_without_discount": 4,
                          "calculated_price": {
                            "amount": "4.00",
                            "amount_without_discount": "4.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_7",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259777,
                      "sku": "com.xsolla.wooden_helmet_1",
                      "type": "virtual_good",
                      "name": "Wooden helmet",
                      "description": "Wooden helmet",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/40d2812e52ad9d988ac20fc842fc66f0.png",
                      "price": {
                        "amount": "0.99",
                        "amount_without_discount": "0.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_8",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 1,
                          "amount_without_discount": 1,
                          "calculated_price": {
                            "amount": "1.00",
                            "amount_without_discount": "1.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_8",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_8",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259778,
                      "sku": "com.xsolla.armor_chest_1",
                      "type": "bundle",
                      "name": "Chest of armor",
                      "bundle_type": "standard",
                      "description": "Chest of armour",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/5212202f9b8c9dbd254652d6cbeba03e.png",
                      "price": {
                        "amount": "19.99",
                        "amount_without_discount": "19.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_9",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_9",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_9",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 400,
                          "amount_without_discount": 400,
                          "calculated_price": {
                            "amount": "400.00",
                            "amount_without_discount": "400.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "total_content_price": {
                        "amount": "11.98",
                        "amount_without_discount": "11.98",
                        "currency": "USD"
                      },
                      "content": [
                        {
                          "item_id": 259774,
                          "sku": "com.xsolla.electric_shield_2",
                          "type": "virtual_good",
                          "name": "Electric shield",
                          "description": "Electric shield",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                          "price": {
                            "amount": "9.99",
                            "amount_without_discount": "9.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                              "item_id": 259765,
                              "sku": "com.xsolla.gold_10",
                              "name": "Gold",
                              "type": "virtual_currency",
                              "amount": 10,
                              "amount_without_discount": 10,
                              "calculated_price": {
                                "amount": "10.00",
                                "amount_without_discount": "10.00"
                              },
                              "is_default": true
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                              "item_id": 259766,
                              "sku": "com.xsolla.silver_10",
                              "name": "Silver",
                              "type": "virtual_currency",
                              "amount": 20,
                              "amount_without_discount": 20,
                              "calculated_price": {
                                "amount": "20.00",
                                "amount_without_discount": "20.00"
                              },
                              "is_default": false
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                              "item_id": 259767,
                              "sku": "com.xsolla.bronze_10",
                              "name": "Bronze",
                              "type": "virtual_currency",
                              "amount": 200,
                              "amount_without_discount": 200,
                              "calculated_price": {
                                "amount": "200.00",
                                "amount_without_discount": "200.00"
                              },
                              "is_default": false
                            }
                          ],
                          "can_be_bought": true,
                          "attributes": [],
                          "is_free": false,
                          "groups": [
                            {
                              "external_id": "armour",
                              "name": "Armour"
                            }
                          ],
                          "virtual_item_type": "non_consumable",
                          "inventory_options": {
                            "consumable": null,
                            "expiration_period": null
                          },
                          "quantity": 1
                        },
                        {
                          "item_id": 259776,
                          "sku": "com.xsolla.ancient_helmet_2",
                          "type": "virtual_good",
                          "name": "Ancient helmet",
                          "description": "Ancient helmet",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e70e16d9626f435e519fc8e1cc1e7176.png",
                          "price": {
                            "amount": "1.99",
                            "amount_without_discount": "1.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                              "item_id": 259765,
                              "sku": "com.xsolla.gold_11",
                              "name": "Gold",
                              "type": "virtual_currency",
                              "amount": 2,
                              "amount_without_discount": 2,
                              "calculated_price": {
                                "amount": "2.00",
                                "amount_without_discount": "2.00"
                              },
                              "is_default": true
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                              "item_id": 259766,
                              "sku": "com.xsolla.silver_11",
                              "name": "Silver",
                              "type": "virtual_currency",
                              "amount": 4,
                              "amount_without_discount": 4,
                              "calculated_price": {
                                "amount": "4.00",
                                "amount_without_discount": "4.00"
                              },
                              "is_default": false
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                              "item_id": 259767,
                              "sku": "com.xsolla.bronze_11",
                              "name": "Bronze",
                              "type": "virtual_currency",
                              "amount": 40,
                              "amount_without_discount": 40,
                              "calculated_price": {
                                "amount": "40.00",
                                "amount_without_discount": "40.00"
                              },
                              "is_default": false
                            }
                          ],
                          "can_be_bought": true,
                          "attributes": [],
                          "is_free": false,
                          "groups": [
                            {
                              "external_id": "armour",
                              "name": "Armour"
                            }
                          ],
                          "virtual_item_type": "non_consumable",
                          "inventory_options": {
                            "consumable": null,
                            "expiration_period": null
                          },
                          "quantity": 1
                        }
                      ],
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259779,
                      "sku": "com.xsolla.treasure_chest_1",
                      "type": "bundle",
                      "name": "Treasure Chest",
                      "bundle_type": "standard",
                      "description": "Treasure Chest",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/7b1c0136d91398f9ab17924deee5eeec.png",
                      "price": {
                        "amount": "9.99",
                        "amount_without_discount": "9.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_12",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 10,
                          "amount_without_discount": 10,
                          "calculated_price": {
                            "amount": "10.00",
                            "amount_without_discount": "10.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_12",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_12",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "total_content_price": {
                        "amount": "802.89",
                        "amount_without_discount": "802.89",
                        "currency": "USD"
                      },
                      "content": [
                        {
                          "item_id": 259772,
                          "sku": "com.xsolla.saber_2",
                          "type": "virtual_good",
                          "name": "Saber",
                          "description": "Saber",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/edd914d60301d77b94926478d253fcb6.png",
                          "price": {
                            "amount": "3.99",
                            "amount_without_discount": "3.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                              "item_id": 259765,
                              "sku": "com.xsolla.gold_13",
                              "name": "Gold",
                              "type": "virtual_currency",
                              "amount": 3,
                              "amount_without_discount": 3,
                              "calculated_price": {
                                "amount": "3.00",
                                "amount_without_discount": "3.00"
                              },
                              "is_default": true
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                              "item_id": 259766,
                              "sku": "com.xsolla.silver_13",
                              "name": "Silver",
                              "type": "virtual_currency",
                              "amount": 7,
                              "amount_without_discount": 7,
                              "calculated_price": {
                                "amount": "7.00",
                                "amount_without_discount": "7.00"
                              },
                              "is_default": false
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                              "item_id": 259767,
                              "sku": "com.xsolla.bronze_13",
                              "name": "Bronze",
                              "type": "virtual_currency",
                              "amount": 70,
                              "amount_without_discount": 70,
                              "calculated_price": {
                                "amount": "70.00",
                                "amount_without_discount": "70.00"
                              },
                              "is_default": false
                            }
                          ],
                          "can_be_bought": true,
                          "attributes": [],
                          "is_free": false,
                          "groups": [
                            {
                              "external_id": "swords",
                              "name": "Swords"
                            }
                          ],
                          "virtual_item_type": "non_consumable",
                          "inventory_options": {
                            "consumable": null,
                            "expiration_period": null
                          },
                          "quantity": 1
                        },
                        {
                          "item_id": 259769,
                          "sku": "com.xsolla.silver_chest_2",
                          "type": "bundle",
                          "name": "Chest of silver",
                          "bundle_type": "virtual_currency_package",
                          "description": "Chest of silver",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/f0b59a3370404e8881107249051b70bd.png",
                          "price": {
                            "amount": "19.99",
                            "amount_without_discount": "19.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "attributes": [],
                          "is_free": false,
                          "groups": [],
                          "content": [
                            {
                              "item_id": 259766,
                              "sku": "com.xsolla.silver_14",
                              "type": "virtual_currency",
                              "name": "Silver",
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                              "inventory_options": {
                                "consumable": {
                                  "usages_count": 1
                                },
                                "expiration_period": null
                              },
                              "quantity": 50
                            }
                          ],
                          "quantity": 10
                        },
                        {
                          "item_id": 259770,
                          "sku": "com.xsolla.bronze_chest_2",
                          "type": "bundle",
                          "name": "Chest of bronze",
                          "bundle_type": "virtual_currency_package",
                          "description": "Chest of bronze",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b32eb5b1f4f0c202ea6ac4e21c2eae18.png",
                          "price": {
                            "amount": "5.99",
                            "amount_without_discount": "5.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "attributes": [],
                          "is_free": false,
                          "groups": [],
                          "content": [
                            {
                              "item_id": 259767,
                              "sku": "com.xsolla.bronze_11",
                              "type": "virtual_currency",
                              "name": "Bronze",
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                              "inventory_options": {
                                "consumable": {
                                  "usages_count": 1
                                },
                                "expiration_period": null
                              },
                              "quantity": 100
                            }
                          ],
                          "quantity": 100
                        }
                      ],
                      "vp_rewards": []
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_id": {
                        "type": "integer",
                        "example": 259774,
                        "description": "Internal unique item ID that is provided upon item creation."
                      },
                      "sku": {
                        "type": "string",
                        "example": "com.xsolla.electric_shield_1",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "name": {
                        "type": "string",
                        "example": "Electric shield",
                        "description": "Item name."
                      },
                      "groups": {
                        "type": "array",
                        "example": [
                          {
                            "external_id": "armour",
                            "name": "Armour"
                          }
                        ],
                        "description": "Groups the item belongs to.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string",
                              "example": "armour"
                            },
                            "name": {
                              "type": "string",
                              "example": "Armour"
                            }
                          }
                        }
                      },
                      "total_content_price": {
                        "$ref": "#/components/schemas/Bundles_total_content_price"
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Virtual-Items-Currency_client-attributes"
                      },
                      "type": {
                        "type": "string",
                        "example": "virtual_good",
                        "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`game_key`/`physical_good`.",
                        "enum": [
                          "virtual_good",
                          "virtual_currency",
                          "bundle",
                          "game_key",
                          "physical_good"
                        ]
                      },
                      "bundle_type": {
                        "type": "string",
                        "description": "Bundle type. Returned if item type is a bundle.",
                        "enum": [
                          "standard",
                          "virtual_currency_package"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "example": "Electric shield",
                        "description": "Item description."
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                        "description": "Image URL."
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "price": {
                        "type": "object",
                        "description": "Item prices.",
                        "properties": {
                          "amount": {
                            "type": "string",
                            "example": "9.99",
                            "description": "Discounted item price."
                          },
                          "amount_without_discount": {
                            "type": "string",
                            "example": "9.99",
                            "description": "Item price."
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD",
                            "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                          }
                        }
                      },
                      "virtual_prices": {
                        "type": "array",
                        "description": "Virtual prices.",
                        "items": {
                          "type": "object",
                          "description": "Virtual price.",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "example": 10,
                              "description": "Discounted item price in virtual currency."
                            },
                            "amount_without_discount": {
                              "type": "integer",
                              "example": 10,
                              "description": "Item price."
                            },
                            "calculated_price": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "string"
                                },
                                "amount_without_discount": {
                                  "type": "string"
                                }
                              }
                            },
                            "sku": {
                              "type": "string",
                              "example": "com.xsolla.gold_1",
                              "description": "Virtual currency item SKU."
                            },
                            "is_default": {
                              "type": "boolean",
                              "example": true,
                              "description": "Whether price is default for item."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                              "description": "Image of virtual currency."
                            },
                            "item_id": {
                              "type": "integer",
                              "example": 259774,
                              "description": "Internal unique item ID that is provided upon item creation."
                            },
                            "name": {
                              "type": "string",
                              "example": "Gold",
                              "description": "Virtual currency name."
                            },
                            "type": {
                              "type": "string",
                              "example": "virtual_currency",
                              "description": "Virtual currency type."
                            },
                            "description": {
                              "type": "string",
                              "nullable": true,
                              "example": null,
                              "description": "Virtual currency description."
                            }
                          }
                        }
                      },
                      "inventory_options": {
                        "type": "object",
                        "description": "Defines the inventory item options.",
                        "properties": {
                          "consumable": {
                            "type": "object",
                            "nullable": true,
                            "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
                            "properties": {
                              "usages_count": {
                                "type": "integer",
                                "example": 1,
                                "nullable": true,
                                "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
                              }
                            }
                          },
                          "expiration_period": {
                            "type": "object",
                            "nullable": true,
                            "description": "Defines the expiration properties if this is an expired item, or `null` if this is a non-expired item.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "day",
                                "enum": [
                                  "minute",
                                  "hour",
                                  "day",
                                  "week",
                                  "month",
                                  "year"
                                ],
                                "description": "Defines type of item expiration."
                              },
                              "value": {
                                "type": "integer",
                                "example": 1,
                                "description": "Defines value for an expiration period."
                              }
                            }
                          }
                        }
                      },
                      "can_be_bought": {
                        "type": "boolean",
                        "example": true,
                        "description": "If `true`, the user can buy an item."
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "virtual_item_type": {
                        "type": "string",
                        "example": "non-consumable",
                        "description": "Type of virtual item.",
                        "x-enumDescriptions": {
                          "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
                          "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
                          "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
                        },
                        "enum": [
                          "consumable",
                          "non_consumable",
                          "non_renewing_subscription"
                        ]
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Catalog_item_limits"
                      },
                      "custom_attributes": {
                        "$ref": "#/components/schemas/item-custom-attributes-response"
                      },
                      "vp_rewards": {
                        "$ref": "#/components/schemas/client-item-value-point-reward"
                      },
                      "content": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "items": {
                            "$ref": "#/components/schemas/Bundles_client_content"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": false,
                  "items": [
                    {
                      "item_id": 259765,
                      "sku": "com.xsolla.gold_1",
                      "type": "virtual_currency",
                      "name": "Gold",
                      "description": "",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                      "price": {
                        "amount": "1.00",
                        "amount_without_discount": "1.00",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "limits": null,
                      "custom_attributes": {
                        "purchased": 0,
                        "attr": "value"
                      },
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ]
                    },
                    {
                      "item_id": 259766,
                      "sku": "com.xsolla.silver_1",
                      "type": "virtual_currency",
                      "name": "Silver",
                      "description": "",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                      "price": {
                        "amount": "0.50",
                        "amount_without_discount": "0.50",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259767,
                      "sku": "com.xsolla.bronze_1",
                      "type": "virtual_currency",
                      "name": "Bronze",
                      "description": "",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                      "price": {
                        "amount": "0.10",
                        "amount_without_discount": "0.10",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "inventory_options": {
                        "consumable": {
                          "usages_count": 1
                        },
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259768,
                      "sku": "com.xsolla.gold_chest_1",
                      "type": "bundle",
                      "name": "Chest of gold",
                      "bundle_type": "virtual_currency_package",
                      "description": "Chest of gold",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/61b8d0785093017ce1f50ebed55c42a9.png",
                      "price": {
                        "amount": "7.99",
                        "amount_without_discount": "7.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "content": [
                        {
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_2",
                          "type": "virtual_currency",
                          "name": "Gold",
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "inventory_options": {
                            "consumable": {
                              "usages_count": 1
                            },
                            "expiration_period": null
                          },
                          "quantity": 10
                        }
                      ],
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259769,
                      "sku": "com.xsolla.silver_chest_1",
                      "type": "bundle",
                      "name": "Chest of silver",
                      "bundle_type": "virtual_currency_package",
                      "description": "Chest of silver",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/f0b59a3370404e8881107249051b70bd.png",
                      "price": {
                        "amount": "19.99",
                        "amount_without_discount": "19.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "content": [
                        {
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_2",
                          "type": "virtual_currency",
                          "name": "Silver",
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "inventory_options": {
                            "consumable": {
                              "usages_count": 1
                            },
                            "expiration_period": null
                          },
                          "quantity": 50
                        }
                      ],
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259770,
                      "sku": "com.xsolla.bronze_chest_1",
                      "type": "bundle",
                      "name": "Chest of bronze",
                      "bundle_type": "virtual_currency_package",
                      "description": "Chest of bronze",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/b32eb5b1f4f0c202ea6ac4e21c2eae18.png",
                      "price": {
                        "amount": "5.99",
                        "amount_without_discount": "5.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "content": [
                        {
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_1",
                          "type": "virtual_currency",
                          "name": "Bronze",
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "inventory_options": {
                            "consumable": {
                              "usages_count": 1
                            },
                            "expiration_period": null
                          },
                          "quantity": 100
                        }
                      ],
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259771,
                      "sku": "com.xsolla.sword_1",
                      "type": "virtual_good",
                      "name": "Sword",
                      "description": "Sword",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/a558727a420cad609556e4449b9ecb12.png",
                      "price": {
                        "amount": "1.99",
                        "amount_without_discount": "1.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_2",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_2",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 5,
                          "amount_without_discount": 5,
                          "calculated_price": {
                            "amount": "5.00",
                            "amount_without_discount": "5.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_2",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 50,
                          "amount_without_discount": 50,
                          "calculated_price": {
                            "amount": "50.00",
                            "amount_without_discount": "50.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "swords",
                          "name": "Swords"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259772,
                      "sku": "com.xsolla.saber_1",
                      "type": "virtual_good",
                      "name": "Saber",
                      "description": "Saber",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/edd914d60301d77b94926478d253fcb6.png",
                      "price": {
                        "amount": "3.99",
                        "amount_without_discount": "3.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_3",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 3,
                          "amount_without_discount": 3,
                          "calculated_price": {
                            "amount": "3.00",
                            "amount_without_discount": "3.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_3",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 7,
                          "amount_without_discount": 7,
                          "calculated_price": {
                            "amount": "7.00",
                            "amount_without_discount": "7.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_3",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 70,
                          "amount_without_discount": 70,
                          "calculated_price": {
                            "amount": "70.00",
                            "amount_without_discount": "70.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "swords",
                          "name": "Swords"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259773,
                      "sku": "com.xsolla.bow_1",
                      "type": "virtual_good",
                      "name": "Bow",
                      "description": "Bow",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/3bb3b0a5254ad15134c891108898363f.png",
                      "price": {
                        "amount": "4.99",
                        "amount_without_discount": "4.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_4",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 5,
                          "amount_without_discount": 5,
                          "calculated_price": {
                            "amount": "5.00",
                            "amount_without_discount": "5.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_4",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 10,
                          "amount_without_discount": 10,
                          "calculated_price": {
                            "amount": "10.00",
                            "amount_without_discount": "10.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_5",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 100,
                          "amount_without_discount": 100,
                          "calculated_price": {
                            "amount": "100.00",
                            "amount_without_discount": "100.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "bows",
                          "name": "Bows"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259774,
                      "sku": "com.xsolla.electric_shield_2",
                      "type": "virtual_good",
                      "name": "Electric shield",
                      "description": "Electric shield",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                      "price": {
                        "amount": "9.99",
                        "amount_without_discount": "9.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_5",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 10,
                          "amount_without_discount": 10,
                          "calculated_price": {
                            "amount": "10.00",
                            "amount_without_discount": "10.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_5",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_5",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 200,
                          "amount_without_discount": 200,
                          "calculated_price": {
                            "amount": "200.00",
                            "amount_without_discount": "200.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259775,
                      "sku": "com.xsolla.royal_shield_2",
                      "type": "virtual_good",
                      "name": "Royal shield",
                      "description": "Royal shield",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/ed417975312a52efeeab8b039ff25cb1.png",
                      "price": {
                        "amount": "19.99",
                        "amount_without_discount": "19.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_6",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_6",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_6",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 400,
                          "amount_without_discount": 400,
                          "calculated_price": {
                            "amount": "400.00",
                            "amount_without_discount": "400.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259776,
                      "sku": "com.xsolla.ancient_helmet_1",
                      "type": "virtual_good",
                      "name": "Ancient helmet",
                      "description": "Ancient helmet",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/e70e16d9626f435e519fc8e1cc1e7176.png",
                      "price": {
                        "amount": "1.99",
                        "amount_without_discount": "1.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_7",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_7",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 4,
                          "amount_without_discount": 4,
                          "calculated_price": {
                            "amount": "4.00",
                            "amount_without_discount": "4.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_7",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259777,
                      "sku": "com.xsolla.wooden_helmet_1",
                      "type": "virtual_good",
                      "name": "Wooden helmet",
                      "description": "Wooden helmet",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/40d2812e52ad9d988ac20fc842fc66f0.png",
                      "price": {
                        "amount": "0.99",
                        "amount_without_discount": "0.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_8",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 1,
                          "amount_without_discount": 1,
                          "calculated_price": {
                            "amount": "1.00",
                            "amount_without_discount": "1.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_8",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_8",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259778,
                      "sku": "com.xsolla.armor_chest_1",
                      "type": "bundle",
                      "name": "Chest of armor",
                      "bundle_type": "standard",
                      "description": "Chest of armour",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/5212202f9b8c9dbd254652d6cbeba03e.png",
                      "price": {
                        "amount": "19.99",
                        "amount_without_discount": "19.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_9",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_9",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_9",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 400,
                          "amount_without_discount": 400,
                          "calculated_price": {
                            "amount": "400.00",
                            "amount_without_discount": "400.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "total_content_price": {
                        "amount": "11.98",
                        "amount_without_discount": "11.98",
                        "currency": "USD"
                      },
                      "content": [
                        {
                          "item_id": 259774,
                          "sku": "com.xsolla.electric_shield_2",
                          "type": "virtual_good",
                          "name": "Electric shield",
                          "description": "Electric shield",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                          "price": {
                            "amount": "9.99",
                            "amount_without_discount": "9.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                              "item_id": 259765,
                              "sku": "com.xsolla.gold_10",
                              "name": "Gold",
                              "type": "virtual_currency",
                              "amount": 10,
                              "amount_without_discount": 10,
                              "calculated_price": {
                                "amount": "10.00",
                                "amount_without_discount": "10.00"
                              },
                              "is_default": true
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                              "item_id": 259766,
                              "sku": "com.xsolla.silver_10",
                              "name": "Silver",
                              "type": "virtual_currency",
                              "amount": 20,
                              "amount_without_discount": 20,
                              "calculated_price": {
                                "amount": "20.00",
                                "amount_without_discount": "20.00"
                              },
                              "is_default": false
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                              "item_id": 259767,
                              "sku": "com.xsolla.bronze_10",
                              "name": "Bronze",
                              "type": "virtual_currency",
                              "amount": 200,
                              "amount_without_discount": 200,
                              "calculated_price": {
                                "amount": "200.00",
                                "amount_without_discount": "200.00"
                              },
                              "is_default": false
                            }
                          ],
                          "can_be_bought": true,
                          "promotions": [
                            {
                              "name": "Bonus promotion",
                              "date_start": "2020-04-15T16:16:00+03:00",
                              "date_end": "2026-04-15T16:16:00+03:00",
                              "discount": {
                                "percent": "50.00"
                              },
                              "bonus": [
                                {
                                  "quantity": 1,
                                  "name": "Xsolla Minigun",
                                  "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                                  "sku": "com.xsolla.minigun_1",
                                  "type": "virtual_good"
                                }
                              ]
                            }
                          ],
                          "attributes": [],
                          "is_free": false,
                          "groups": [
                            {
                              "external_id": "armour",
                              "name": "Armour"
                            }
                          ],
                          "virtual_item_type": "non_consumable",
                          "inventory_options": {
                            "consumable": null,
                            "expiration_period": null
                          },
                          "quantity": 1
                        },
                        {
                          "item_id": 259776,
                          "sku": "com.xsolla.ancient_helmet_2",
                          "type": "virtual_good",
                          "name": "Ancient helmet",
                          "description": "Ancient helmet",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e70e16d9626f435e519fc8e1cc1e7176.png",
                          "price": {
                            "amount": "1.99",
                            "amount_without_discount": "1.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                              "item_id": 259765,
                              "sku": "com.xsolla.gold_11",
                              "name": "Gold",
                              "type": "virtual_currency",
                              "amount": 2,
                              "amount_without_discount": 2,
                              "calculated_price": {
                                "amount": "2.00",
                                "amount_without_discount": "2.00"
                              },
                              "is_default": true
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                              "item_id": 259766,
                              "sku": "com.xsolla.silver_11",
                              "name": "Silver",
                              "type": "virtual_currency",
                              "amount": 4,
                              "amount_without_discount": 4,
                              "calculated_price": {
                                "amount": "4.00",
                                "amount_without_discount": "4.00"
                              },
                              "is_default": false
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                              "item_id": 259767,
                              "sku": "com.xsolla.bronze_11",
                              "name": "Bronze",
                              "type": "virtual_currency",
                              "amount": 40,
                              "amount_without_discount": 40,
                              "calculated_price": {
                                "amount": "40.00",
                                "amount_without_discount": "40.00"
                              },
                              "is_default": false
                            }
                          ],
                          "can_be_bought": true,
                          "promotions": [
                            {
                              "name": "Bonus promotion",
                              "date_start": "2020-04-15T16:16:00+03:00",
                              "date_end": "2026-04-15T16:16:00+03:00",
                              "discount": {
                                "percent": "50.00"
                              },
                              "bonus": [
                                {
                                  "quantity": 1,
                                  "name": "Xsolla Minigun",
                                  "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                                  "sku": "com.xsolla.minigun_1",
                                  "type": "virtual_good"
                                }
                              ]
                            }
                          ],
                          "attributes": [],
                          "is_free": false,
                          "groups": [
                            {
                              "external_id": "armour",
                              "name": "Armour"
                            }
                          ],
                          "virtual_item_type": "non_consumable",
                          "inventory_options": {
                            "consumable": null,
                            "expiration_period": null
                          },
                          "quantity": 1
                        }
                      ],
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259779,
                      "sku": "com.xsolla.treasure_chest_1",
                      "type": "bundle",
                      "name": "Treasure Chest",
                      "bundle_type": "standard",
                      "description": "Treasure Chest",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/7b1c0136d91398f9ab17924deee5eeec.png",
                      "price": {
                        "amount": "9.99",
                        "amount_without_discount": "9.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_12",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 10,
                          "amount_without_discount": 10,
                          "calculated_price": {
                            "amount": "10.00",
                            "amount_without_discount": "10.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_12",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": "",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_12",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [],
                      "total_content_price": {
                        "amount": "802.89",
                        "amount_without_discount": "802.89",
                        "currency": "USD"
                      },
                      "content": [
                        {
                          "item_id": 259772,
                          "sku": "com.xsolla.saber_1",
                          "type": "virtual_good",
                          "name": "Saber",
                          "description": "Saber",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/edd914d60301d77b94926478d253fcb6.png",
                          "price": {
                            "amount": "3.99",
                            "amount_without_discount": "3.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                              "item_id": 259765,
                              "sku": "com.xsolla.gold_13",
                              "name": "Gold",
                              "type": "virtual_currency",
                              "amount": 3,
                              "amount_without_discount": 3,
                              "calculated_price": {
                                "amount": "3.00",
                                "amount_without_discount": "3.00"
                              },
                              "is_default": true
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                              "item_id": 259766,
                              "sku": "com.xsolla.silver_13",
                              "name": "Silver",
                              "type": "virtual_currency",
                              "amount": 7,
                              "amount_without_discount": 7,
                              "calculated_price": {
                                "amount": "7.00",
                                "amount_without_discount": "7.00"
                              },
                              "is_default": false
                            },
                            {
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                              "item_id": 259767,
                              "sku": "com.xsolla.bronze_13",
                              "name": "Bronze",
                              "type": "virtual_currency",
                              "amount": 70,
                              "amount_without_discount": 70,
                              "calculated_price": {
                                "amount": "70.00",
                                "amount_without_discount": "70.00"
                              },
                              "is_default": false
                            }
                          ],
                          "can_be_bought": true,
                          "attributes": [],
                          "is_free": false,
                          "groups": [
                            {
                              "external_id": "swords",
                              "name": "Swords"
                            }
                          ],
                          "virtual_item_type": "non_consumable",
                          "inventory_options": {
                            "consumable": null,
                            "expiration_period": null
                          },
                          "quantity": 1
                        },
                        {
                          "item_id": 259769,
                          "sku": "com.xsolla.silver_chest_2",
                          "type": "bundle",
                          "name": "Chest of silver",
                          "bundle_type": "virtual_currency_package",
                          "description": "Chest of silver",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/f0b59a3370404e8881107249051b70bd.png",
                          "price": {
                            "amount": "19.99",
                            "amount_without_discount": "19.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "promotions": [],
                          "attributes": [],
                          "is_free": false,
                          "groups": [],
                          "content": [
                            {
                              "item_id": 259766,
                              "sku": "com.xsolla.silver_13",
                              "type": "virtual_currency",
                              "name": "Silver",
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                              "inventory_options": {
                                "consumable": {
                                  "usages_count": 1
                                },
                                "expiration_period": null
                              },
                              "quantity": 50
                            }
                          ],
                          "quantity": 10
                        },
                        {
                          "item_id": 259770,
                          "sku": "com.xsolla.bronze_chest_2",
                          "type": "bundle",
                          "name": "Chest of bronze",
                          "bundle_type": "virtual_currency_package",
                          "description": "Chest of bronze",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b32eb5b1f4f0c202ea6ac4e21c2eae18.png",
                          "price": {
                            "amount": "5.99",
                            "amount_without_discount": "5.99",
                            "currency": "USD"
                          },
                          "virtual_prices": [],
                          "can_be_bought": true,
                          "promotions": [],
                          "attributes": [],
                          "is_free": false,
                          "groups": [],
                          "content": [
                            {
                              "item_id": 259767,
                              "sku": "com.xsolla.bronze_13",
                              "type": "virtual_currency",
                              "name": "Bronze",
                              "description": "",
                              "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                              "inventory_options": {
                                "consumable": {
                                  "usages_count": 1
                                },
                                "expiration_period": null
                              },
                              "quantity": 100
                            }
                          ],
                          "quantity": 100
                        }
                      ],
                      "vp_rewards": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "sellable_items_200-get-item-by-id": {
        "description": "The sellable item was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with sellable item.",
              "properties": {
                "item_id": {
                  "type": "integer",
                  "example": 259774,
                  "description": "Internal unique item ID that is provided upon item creation."
                },
                "sku": {
                  "type": "string",
                  "example": "electric_shield",
                  "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                },
                "name": {
                  "type": "string",
                  "example": "Electric shield",
                  "description": "Item name."
                },
                "groups": {
                  "type": "array",
                  "example": [
                    {
                      "external_id": "armour",
                      "name": "Armour"
                    }
                  ],
                  "description": "Groups the item belongs to.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "external_id": {
                        "type": "string",
                        "example": "armour"
                      },
                      "name": {
                        "type": "string",
                        "example": "Armour"
                      }
                    }
                  }
                },
                "attributes": {
                  "$ref": "#/components/schemas/Virtual-Items-Currency_client-attributes"
                },
                "type": {
                  "type": "string",
                  "example": "virtual_good",
                  "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`game_key`/`physical_good`.",
                  "enum": [
                    "virtual_good",
                    "virtual_currency",
                    "bundle",
                    "game_key",
                    "physical_good"
                  ]
                },
                "description": {
                  "type": "string",
                  "example": "Electric shield",
                  "description": "Item description."
                },
                "image_url": {
                  "type": "string",
                  "example": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                  "description": "Image URL."
                },
                "is_free": {
                  "$ref": "#/components/schemas/value-is_free"
                },
                "price": {
                  "type": "object",
                  "description": "Item prices.",
                  "properties": {
                    "amount": {
                      "type": "string",
                      "example": "9.99",
                      "description": "Discounted item price."
                    },
                    "amount_without_discount": {
                      "type": "string",
                      "example": "9.99",
                      "description": "Item price."
                    },
                    "currency": {
                      "type": "string",
                      "example": "USD",
                      "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                    }
                  }
                },
                "virtual_prices": {
                  "type": "array",
                  "description": "Virtual prices.",
                  "items": {
                    "type": "object",
                    "description": "Virtual price.",
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "example": 10,
                        "description": "Discounted item price in virtual currency."
                      },
                      "amount_without_discount": {
                        "type": "integer",
                        "example": 10,
                        "description": "Item price."
                      },
                      "calculated_price": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "string"
                          },
                          "amount_without_discount": {
                            "type": "string"
                          }
                        }
                      },
                      "sku": {
                        "type": "string",
                        "example": "gold",
                        "description": "Virtual currency item SKU."
                      },
                      "is_default": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether price is default for item."
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                        "description": "Image of virtual currency."
                      },
                      "name": {
                        "type": "string",
                        "example": "Gold",
                        "description": "Virtual currency name."
                      },
                      "item_id": {
                        "type": "integer",
                        "example": 259774,
                        "description": "Internal unique item ID that is provided upon item creation."
                      },
                      "type": {
                        "type": "string",
                        "example": "virtual_currency",
                        "description": "Virtual currency type."
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "example": null,
                        "description": "Virtual currency description."
                      }
                    }
                  }
                },
                "inventory_options": {
                  "type": "object",
                  "description": "Defines the inventory item options.",
                  "properties": {
                    "consumable": {
                      "type": "object",
                      "nullable": true,
                      "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
                      "properties": {
                        "usages_count": {
                          "type": "integer",
                          "example": 1,
                          "nullable": true,
                          "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
                        }
                      }
                    },
                    "expiration_period": {
                      "type": "object",
                      "nullable": true,
                      "description": "Defines the expiration properties if this is an expired item, or `null` if this is a non-expired item.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "day",
                          "enum": [
                            "minute",
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year"
                          ],
                          "description": "Defines type of item expiration."
                        },
                        "value": {
                          "type": "integer",
                          "example": 1,
                          "description": "Defines value for an expiration period."
                        }
                      }
                    }
                  }
                },
                "can_be_bought": {
                  "type": "boolean",
                  "example": true,
                  "description": "If `true`, the user can buy an item."
                },
                "promotions": {
                  "$ref": "#/components/schemas/Catalog_item_promotions"
                },
                "virtual_item_type": {
                  "type": "string",
                  "example": "non-consumable",
                  "description": "Type of virtual item.",
                  "x-enumDescriptions": {
                    "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
                    "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
                    "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
                  },
                  "enum": [
                    "consumable",
                    "non_consumable",
                    "non_renewing_subscription"
                  ]
                },
                "limits": {
                  "$ref": "#/components/schemas/Catalog_item_limits"
                },
                "custom_attributes": {
                  "$ref": "#/components/schemas/item-custom-attributes-response"
                },
                "vp_rewards": {
                  "$ref": "#/components/schemas/client-item-value-point-reward"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "item_id": 259774,
                  "sku": "com.xsolla.electric_shield_1",
                  "type": "virtual_good",
                  "name": "Electric shield",
                  "description": "Electric shield",
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                  "price": {
                    "amount": "9.99",
                    "amount_without_discount": "9.99",
                    "currency": "USD"
                  },
                  "virtual_prices": [
                    {
                      "description": null,
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                      "item_id": 259765,
                      "sku": "com.xsolla.gold_1",
                      "name": "Gold",
                      "type": "virtual_currency",
                      "amount": 10,
                      "amount_without_discount": 10,
                      "calculated_price": {
                        "amount": "10.00",
                        "amount_without_discount": "10.00"
                      },
                      "is_default": true
                    },
                    {
                      "description": null,
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                      "item_id": 259766,
                      "sku": "com.xsolla.silver_1",
                      "name": "Silver",
                      "type": "virtual_currency",
                      "amount": 20,
                      "amount_without_discount": 20,
                      "calculated_price": {
                        "amount": "20.00",
                        "amount_without_discount": "20.00"
                      },
                      "is_default": false
                    },
                    {
                      "description": null,
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                      "item_id": 259767,
                      "sku": "com.xsolla.bronze_1",
                      "name": "Bronze",
                      "type": "virtual_currency",
                      "amount": 200,
                      "amount_without_discount": 200,
                      "calculated_price": {
                        "amount": "200.00",
                        "amount_without_discount": "200.00"
                      },
                      "is_default": false
                    }
                  ],
                  "can_be_bought": true,
                  "promotions": [
                    {
                      "name": "Bonus promotion",
                      "date_start": "2020-04-15T16:16:00+03:00",
                      "date_end": "2026-04-15T16:16:00+03:00",
                      "discount": {
                        "percent": "50.00"
                      },
                      "bonus": [
                        {
                          "quantity": 1,
                          "name": "Xsolla Minigun",
                          "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                          "sku": "com.xsolla.minigun_1",
                          "type": "virtual_good"
                        }
                      ]
                    }
                  ],
                  "attributes": [],
                  "is_free": false,
                  "groups": [
                    {
                      "external_id": "armour",
                      "name": "Armour"
                    }
                  ],
                  "virtual_item_type": "non_consumable",
                  "inventory_options": {
                    "consumable": null,
                    "expiration_period": null
                  },
                  "limits": {
                    "per_user": {
                      "total": 5,
                      "available": 3,
                      "recurrent_schedule": {
                        "interval_type": "weekly",
                        "reset_next_date": 1746057600
                      }
                    }
                  },
                  "vp_rewards": [
                    {
                      "item_id": 175232,
                      "sku": "com.xsolla.value_point_1",
                      "amount": 130,
                      "name": "Value point",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                    },
                    {
                      "item_id": 186321,
                      "sku": "com.xsolla.clan_value_point_1",
                      "amount": 50,
                      "name": "Clan Reward VP 1",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "is_clan": true
                    }
                  ],
                  "custom_attributes": {
                    "purchased": 0,
                    "attr": "value"
                  }
                }
              }
            }
          }
        }
      },
      "sellable-item-by-id_404": {
        "description": "Item not found. Make sure the `project_id` and the `item_id` are correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-4001]: Item with id = 259774 not found"
                }
              }
            }
          }
        }
      },
      "sellable-item-by-sku_404": {
        "description": "Item not found. Make sure the `project_id` and the `sku` are correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-4001]: Item with sku = 'electric_shiel' not found"
                }
              }
            }
          }
        }
      },
      "sellable_items_200-get-items-by-group-id": {
        "description": "The list of sellable items from the specified group was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "items": {
                  "type": "array",
                  "example": [
                    {
                      "item_id": 259774,
                      "sku": "com.xsolla.electric_shield_1",
                      "type": "virtual_good",
                      "name": "Electric shield",
                      "description": "Electric shield",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                      "price": {
                        "amount": "9.99",
                        "amount_without_discount": "9.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_1",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 10,
                          "amount_without_discount": 10,
                          "calculated_price": {
                            "amount": "10.00",
                            "amount_without_discount": "10.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_1",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_1",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 200,
                          "amount_without_discount": 200,
                          "calculated_price": {
                            "amount": "200.00",
                            "amount_without_discount": "200.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "clan_value_point_sku_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ]
                    },
                    {
                      "item_id": 259775,
                      "sku": "com.xsolla.royal_shield_1",
                      "type": "virtual_good",
                      "name": "Royal shield",
                      "description": "Royal shield",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/ed417975312a52efeeab8b039ff25cb1.png",
                      "price": {
                        "amount": "19.99",
                        "amount_without_discount": "19.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_2",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_2",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_2",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 400,
                          "amount_without_discount": 400,
                          "calculated_price": {
                            "amount": "400.00",
                            "amount_without_discount": "400.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259776,
                      "sku": "com.xsolla.ancient_helmet_1",
                      "type": "virtual_good",
                      "name": "Ancient helmet",
                      "description": "Ancient helmet",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/e70e16d9626f435e519fc8e1cc1e7176.png",
                      "price": {
                        "amount": "1.99",
                        "amount_without_discount": "1.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_3",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_3",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 4,
                          "amount_without_discount": 4,
                          "calculated_price": {
                            "amount": "4.00",
                            "amount_without_discount": "4.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_3",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    },
                    {
                      "item_id": 259777,
                      "sku": "com.xsolla.wooden_helmet_1",
                      "type": "virtual_good",
                      "name": "Wooden helmet",
                      "description": "Wooden helmet",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/40d2812e52ad9d988ac20fc842fc66f0.png",
                      "price": {
                        "amount": "0.99",
                        "amount_without_discount": "0.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_4",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 1,
                          "amount_without_discount": 1,
                          "calculated_price": {
                            "amount": "1.00",
                            "amount_without_discount": "1.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_4",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_4",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "vp_rewards": []
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_id": {
                        "type": "integer",
                        "example": 259774,
                        "description": "Internal unique item ID that is provided upon item creation."
                      },
                      "sku": {
                        "type": "string",
                        "example": "com.xsolla.electric_shield_1",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "name": {
                        "type": "string",
                        "example": "Electric shield",
                        "description": "Item name."
                      },
                      "groups": {
                        "type": "array",
                        "example": [
                          {
                            "external_id": "armour",
                            "name": "Armour"
                          }
                        ],
                        "description": "Groups the item belongs to.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string",
                              "example": "accessory"
                            },
                            "name": {
                              "type": "string",
                              "example": "Accessory"
                            }
                          }
                        }
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Virtual-Items-Currency_client-attributes"
                      },
                      "type": {
                        "type": "string",
                        "example": "virtual_good",
                        "description": "Type of item: `virtual_good`/`virtual_currency`/`bundle`/`game_key`/`physical_good`.",
                        "enum": [
                          "virtual_good",
                          "virtual_currency",
                          "bundle",
                          "game_key",
                          "physical_good"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "example": "Electric shield",
                        "description": "Item description.",
                        "nullable": true
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                        "description": "Image URL."
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "price": {
                        "type": "object",
                        "description": "Item prices.",
                        "properties": {
                          "amount": {
                            "type": "string",
                            "example": "9.99",
                            "description": "Discounted item price."
                          },
                          "amount_without_discount": {
                            "type": "string",
                            "example": "9.99",
                            "description": "Item price."
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD",
                            "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
                          }
                        }
                      },
                      "virtual_prices": {
                        "type": "array",
                        "description": "Virtual prices.",
                        "items": {
                          "type": "object",
                          "description": "Virtual price.",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "example": 10,
                              "description": "Discounted item price in virtual currency."
                            },
                            "amount_without_discount": {
                              "type": "integer",
                              "example": 10,
                              "description": "Item price."
                            },
                            "calculated_price": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "string"
                                },
                                "amount_without_discount": {
                                  "type": "string"
                                }
                              }
                            },
                            "sku": {
                              "type": "string",
                              "example": "com.xsolla.gold_1",
                              "description": "Virtual currency item SKU."
                            },
                            "is_default": {
                              "type": "boolean",
                              "example": true,
                              "description": "Whether price is default for item."
                            },
                            "image_url": {
                              "type": "string",
                              "example": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png"
                            },
                            "name": {
                              "type": "string",
                              "example": "Gold",
                              "description": "Virtual currency name."
                            },
                            "item_id": {
                              "type": "integer",
                              "example": 259774,
                              "description": "Internal unique item ID that is provided upon item creation."
                            },
                            "type": {
                              "type": "string",
                              "example": "virtual_currency",
                              "description": "Virtual currency type."
                            },
                            "description": {
                              "type": "string",
                              "example": null,
                              "description": "Virtual currency description.",
                              "nullable": true
                            }
                          }
                        }
                      },
                      "inventory_options": {
                        "type": "object",
                        "description": "Defines the inventory item options.",
                        "properties": {
                          "consumable": {
                            "type": "object",
                            "nullable": true,
                            "description": "Defines the consumable properties if this is a consumable item, or `null` if this is a non-consumable item.",
                            "properties": {
                              "usages_count": {
                                "type": "integer",
                                "example": 1,
                                "nullable": true,
                                "description": "Total number of remaining uses if this is a consumable item, or `null` if this is a non-consumable item."
                              }
                            }
                          },
                          "expiration_period": {
                            "type": "object",
                            "nullable": true,
                            "description": "Defines the expiration properties if this is an expired item, or `null` if this is a non-expired item.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "day",
                                "enum": [
                                  "minute",
                                  "hour",
                                  "day",
                                  "week",
                                  "month",
                                  "year"
                                ],
                                "description": "Defines type of expiration of an item."
                              },
                              "value": {
                                "type": "integer",
                                "example": 1,
                                "description": "Defines value for expiration period."
                              }
                            }
                          }
                        }
                      },
                      "virtual_item_type": {
                        "type": "string",
                        "example": "non_consumable",
                        "description": "Type of virtual item.",
                        "x-enumDescriptions": {
                          "consumable": "An item that disappears from the inventory after use (e.g., ammo).",
                          "non_consumable": "An item that stays in the inventory for an unlimited period of time.",
                          "non_renewing_subscription": "Time-limited item that can represent access to services or content for a limited period of time."
                        },
                        "enum": [
                          "consumable",
                          "non_consumable",
                          "non_renewing_subscription"
                        ]
                      },
                      "can_be_bought": {
                        "type": "boolean",
                        "example": true,
                        "description": "If `true`, the user can buy an item."
                      },
                      "promotions": {
                        "$ref": "#/components/schemas/Catalog_item_promotions"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/Catalog_item_limits"
                      },
                      "custom_attributes": {
                        "$ref": "#/components/schemas/item-custom-attributes-response"
                      },
                      "vp_rewards": {
                        "$ref": "#/components/schemas/client-item-value-point-reward"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "has_more": true,
                  "items": [
                    {
                      "item_id": 259774,
                      "sku": "com.xsolla.electric_shields_1",
                      "type": "virtual_good",
                      "name": "Electric shield",
                      "description": "Electric shield",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/d2d6b1b517e6a7f3765c3bb5a3cfb87d.png",
                      "price": {
                        "amount": "9.99",
                        "amount_without_discount": "9.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_1",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 10,
                          "amount_without_discount": 10,
                          "calculated_price": {
                            "amount": "10.00",
                            "amount_without_discount": "10.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_1",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_1",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 200,
                          "amount_without_discount": 200,
                          "calculated_price": {
                            "amount": "200.00",
                            "amount_without_discount": "200.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      }
                    },
                    {
                      "item_id": 259775,
                      "sku": "com.xsolla.royal_shield_1",
                      "type": "virtual_good",
                      "name": "Royal shield",
                      "description": "Royal shield",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/ed417975312a52efeeab8b039ff25cb1.png",
                      "price": {
                        "amount": "19.99",
                        "amount_without_discount": "19.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_1",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_1",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_1",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 400,
                          "amount_without_discount": 400,
                          "calculated_price": {
                            "amount": "400.00",
                            "amount_without_discount": "400.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      }
                    },
                    {
                      "item_id": 259776,
                      "sku": "com.xsolla.ancient_helmet_1",
                      "type": "virtual_good",
                      "name": "Ancient helmet",
                      "description": "Ancient helmet",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/e70e16d9626f435e519fc8e1cc1e7176.png",
                      "price": {
                        "amount": "1.99",
                        "amount_without_discount": "1.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_2",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_2",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 4,
                          "amount_without_discount": 4,
                          "calculated_price": {
                            "amount": "4.00",
                            "amount_without_discount": "4.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_2",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 40,
                          "amount_without_discount": 40,
                          "calculated_price": {
                            "amount": "40.00",
                            "amount_without_discount": "40.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      }
                    },
                    {
                      "item_id": 259777,
                      "sku": "com.xsolla.wooden_helmet_2",
                      "type": "virtual_good",
                      "name": "Wooden helmet",
                      "description": "Wooden helmet",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/40d2812e52ad9d988ac20fc842fc66f0.png",
                      "price": {
                        "amount": "0.99",
                        "amount_without_discount": "0.99",
                        "currency": "USD"
                      },
                      "virtual_prices": [
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/e2e9ce8b00eb0190c161c4258b899101.png",
                          "item_id": 259765,
                          "sku": "com.xsolla.gold_3",
                          "name": "Gold",
                          "type": "virtual_currency",
                          "amount": 1,
                          "amount_without_discount": 1,
                          "calculated_price": {
                            "amount": "1.00",
                            "amount_without_discount": "1.00"
                          },
                          "is_default": true
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/015e4f4ea4deb1e2c92d5c21a4d58309.png",
                          "item_id": 259766,
                          "sku": "com.xsolla.silver_3",
                          "name": "Silver",
                          "type": "virtual_currency",
                          "amount": 2,
                          "amount_without_discount": 2,
                          "calculated_price": {
                            "amount": "2.00",
                            "amount_without_discount": "2.00"
                          },
                          "is_default": false
                        },
                        {
                          "description": null,
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/b0beedd5763b612bd3a5631e6cb1d1ff.png",
                          "item_id": 259767,
                          "sku": "com.xsolla.bronze_3",
                          "name": "Bronze",
                          "type": "virtual_currency",
                          "amount": 20,
                          "amount_without_discount": 20,
                          "calculated_price": {
                            "amount": "20.00",
                            "amount_without_discount": "20.00"
                          },
                          "is_default": false
                        }
                      ],
                      "can_be_bought": true,
                      "promotions": [
                        {
                          "name": "Bonus promotion",
                          "date_start": "2020-04-15T16:16:00+03:00",
                          "date_end": "2026-04-15T16:16:00+03:00",
                          "discount": {
                            "percent": "50.00"
                          },
                          "bonus": [
                            {
                              "quantity": 1,
                              "name": "Xsolla Minigun",
                              "image_url": "https://cdn.xsolla.net/img/misc/images/2fc5c491a47413a8e8000447889093c2.png",
                              "sku": "com.xsolla.minigun_1",
                              "type": "virtual_good"
                            }
                          ]
                        }
                      ],
                      "attributes": [],
                      "is_free": false,
                      "groups": [
                        {
                          "external_id": "armour",
                          "name": "Armour"
                        }
                      ],
                      "virtual_item_type": "non_consumable",
                      "inventory_options": {
                        "consumable": null,
                        "expiration_period": null
                      },
                      "limits": {
                        "per_user": {
                          "total": 5,
                          "available": 3,
                          "recurrent_schedule": {
                            "interval_type": "weekly",
                            "reset_next_date": 1746057600
                          }
                        }
                      },
                      "vp_rewards": [
                        {
                          "item_id": 175232,
                          "sku": "com.xsolla.value_point_1",
                          "amount": 130,
                          "name": "Value point",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                        },
                        {
                          "item_id": 186321,
                          "sku": "com.xsolla.clan_value_point_1",
                          "amount": 50,
                          "name": "Clan Reward VP 1",
                          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                          "is_clan": true
                        }
                      ],
                      "custom_attributes": {
                        "purchased": 0,
                        "attr": "value"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "200-admin-get-regions-list": {
        "description": "List of regions was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Object with items.",
              "properties": {
                "regions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Regions_200-region-short-model"
                  }
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "regions": [
                    {
                      "id": 44,
                      "name": {
                        "en-US": "Asia",
                        "de-DE": "Asien"
                      }
                    },
                    {
                      "id": 45,
                      "name": {
                        "en-US": "CIS",
                        "de-DE": "GUS"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "201-admin-create-region": {
        "description": "Region was successfully created.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "region_id": {
                  "$ref": "#/components/schemas/Regions_region_id"
                }
              }
            },
            "example": {
              "region_id": 42
            }
          }
        }
      },
      "200-admin-get-region": {
        "description": "Specified region was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Regions_200-region-model"
            }
          }
        }
      },
      "404-region-not-found": {
        "description": "Region not found. Make sure the `id` is correct.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9701
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9701]: Region not found"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "204-admin-update-region": {
        "description": "Region was successfully updated.",
        "content": {}
      },
      "204-admin-delete-region": {
        "description": "Region was successfully deleted.",
        "content": {}
      },
      "200-admin-get-user-item-limits": {
        "description": "Purchase limits for a user were successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User-limit-item"
            },
            "examples": {
              "response": {
                "value": {
                  "per_user": {
                    "total": 10,
                    "available": 9
                  }
                }
              }
            }
          }
        }
      },
      "200-admin-get-user-promotion-limits": {
        "description": "Promotion limits for a user were successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User-limit-promotion"
            },
            "examples": {
              "response": {
                "value": {
                  "per_user": {
                    "total": 10,
                    "available": 9
                  }
                }
              }
            }
          }
        }
      },
      "200-admin-get-user-promo-code-limits": {
        "description": "Successfully received promo code limits for a user.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User-limit-promo-code"
            },
            "examples": {
              "response": {
                "value": {
                  "per_user": {
                    "total": 10,
                    "available": 9
                  }
                }
              }
            }
          }
        }
      },
      "200-admin-get-user-coupon-limits": {
        "description": "Successfully received coupon limits for a user.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User-limit-coupon"
            },
            "examples": {
              "response": {
                "value": {
                  "per_user": {
                    "total": 10,
                    "available": 9
                  }
                }
              }
            }
          }
        }
      },
      "200-admin-get-code-promo-code-limits": {
        "description": "Successfully received promo code limits for a code.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "integer",
                  "description": "Promotion ID. Unique promotion identifier within the project."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Code-limit-promo-code"
                  }
                },
                "total_items_count": {
                  "type": "number",
                  "description": "Total number of codes."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "If another page with codes exists."
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/code-limit"
              }
            }
          }
        }
      },
      "200-admin-get-code-coupon-limits": {
        "description": "Successfully received coupon limits for a code.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "integer",
                  "description": "Promotion ID. Unique promotion identifier within the project."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Code-limit-promo-code"
                  }
                },
                "total_items_count": {
                  "type": "number",
                  "description": "Total number of codes."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "If another page with codes exists."
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/code-limit"
              }
            }
          }
        }
      },
      "200-admin-get-value-points": {
        "description": "The list of value points was successfully received.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-value-points-reward-chain_admin_get-value-point-list"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Value-points-item-model"
                  }
                }
              }
            }
          }
        }
      },
      "201-admin-create-value-point": {
        "description": "Value point was successfully created.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "value": {
                  "sku": "com.xsolla.item_new",
                  "item_id": 10
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "example": "new-sku"
                },
                "item_id": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          }
        }
      },
      "422-admin-create-update-rc-vp-invalid-request": {
        "description": "Invalid request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/422-rc-vp-invalid-request"
            },
            "examples": {
              "The property `sku` is required": {
                "$ref": "#/components/examples/422-property-sku-is-required"
              }
            }
          }
        }
      },
      "200-admin-get-value-point": {
        "description": "The specified value point was successfully received.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-value-points-reward-chain_admin_get-value-point"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Value-point-item-model"
            }
          }
        }
      },
      "200-admin-get-list-value-point-rewards": {
        "description": "The list of items with the value point reward was successfully received.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-value-points-rewards-list"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/admin-item-value-point-reward"
                  }
                }
              }
            }
          }
        }
      },
      "200-client-get-reward-chains-list": {
        "description": "The user’s reward chain was successfully retrieved.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-client-get-reward-chains-list"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "has_more": {
                  "type": "boolean",
                  "example": true,
                  "description": "Used as an indicator that there are more pages."
                },
                "total_items_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "Total number of reward chains in the system."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/client-reward-chain-item-model"
                  }
                }
              }
            }
          }
        }
      },
      "200-client-get-user-reward-chain-balance": {
        "description": "The user’s value point balance was successfully retrieved.",
        "content": {
          "application/json": {
            "examples": {
              "common": {
                "$ref": "#/components/examples/200-client-get-user-reward-chain-balance"
              },
              "clan": {
                "$ref": "#/components/examples/200-client-get-user-clan-reward-chain-balance"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "$ref": "#/components/schemas/value-point-sku"
                },
                "name": {
                  "$ref": "#/components/schemas/value-point-name"
                },
                "image_url": {
                  "$ref": "#/components/schemas/Common_admin-image_url"
                },
                "description": {
                  "$ref": "#/components/schemas/value-point-description"
                },
                "long_description": {
                  "$ref": "#/components/schemas/value-point-long-description"
                },
                "amount": {
                  "type": "integer",
                  "description": "Value point quantity."
                },
                "is_clan": {
                  "$ref": "#/components/schemas/is_clan"
                }
              }
            }
          }
        }
      },
      "404-reward-chain-step-not-found": {
        "description": "Reward chain step not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9911
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9911]: Reward chain step not found."
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 404,
                  "errorCode": 9911,
                  "errorMessage": "[0401-9911]: Reward chain step not found."
                }
              }
            }
          }
        }
      },
      "422-reward-chain-step-reward-can-not-claimed": {
        "description": "Can't claim the step reward.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorCode": {
                  "type": "integer",
                  "example": 9912
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-9912]: Can't claim the step reward."
                }
              }
            },
            "examples": {
              "Reward chain step reward already claimed": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 9912,
                  "errorMessage": "[0401-9912]: Reward already claimed."
                }
              },
              "Not enough VP to claim reward chain step reward": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 9913,
                  "errorMessage": "[0401-9913]: Not enough value points to claim step reward."
                }
              }
            }
          }
        }
      },
      "200-client-update-user-clan": {
        "description": "The user’s clan was successfully updated.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-client-update-user-clan"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "reward": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "$ref": "#/components/schemas/sku"
                      },
                      "name": {
                        "type": "string",
                        "example": "Super box",
                        "description": "Item name."
                      },
                      "type": {
                        "type": "string",
                        "example": "bundle",
                        "description": "Type of item."
                      },
                      "description": {
                        "type": "string",
                        "example": "Super box with items",
                        "description": "Item description."
                      },
                      "image_url": {
                        "$ref": "#/components/schemas/Common_admin-image_url"
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 2,
                        "description": "Item quantity."
                      },
                      "bundle_type": {
                        "type": "string",
                        "description": "Bundle type. Returned if an item type is a bundle.",
                        "enum": [
                          "standard",
                          "virtual_currency_package"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-client-get-offer-chains-list": {
        "description": "The list of offer chains was successfully received.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-client-offer-chain-list"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "has_more": {
                  "type": "boolean",
                  "example": true,
                  "description": "Indicates whether more pages are available."
                },
                "total_items_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "Total number of offer chains available."
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/client-offer-chain-model"
                  }
                }
              }
            }
          }
        }
      },
      "404-offer-chain-not-found": {
        "description": "The offer chain was not found.",
        "content": {
          "application/json": {
            "examples": {
              "not-found": {
                "$ref": "#/components/examples/404-offer-chain-not-found"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/offer-chain-error-model"
            }
          }
        }
      },
      "404-offer-chain-step-not-found": {
        "description": "Either the offer chain or the step was not found.",
        "content": {
          "application/json": {
            "examples": {
              "not-found": {
                "$ref": "#/components/examples/404-offer-chain-step-not-found"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/offer-chain-error-model"
            }
          }
        }
      },
      "200-admin-get-list-reward-chains": {
        "description": "The list of reward chains was successfully received.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-reward-chain-list"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/admin-get-reward-chain-item-basic-model"
                      },
                      {
                        "$ref": "#/components/schemas/admin-get-reward-chain-item-clan-basic-model"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "201-admin-create-reward-chain": {
        "description": "Reward chain was successfully created.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "value": {
                  "reward_chain_id": 10
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "reward_chain_id": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          }
        }
      },
      "200-admin-get-reward-chain": {
        "description": "The specified reward chain was successfully received.",
        "content": {
          "application/json": {
            "examples": {
              "common": {
                "$ref": "#/components/examples/200-reward-chain"
              },
              "clan": {
                "$ref": "#/components/examples/200-clan-reward-chain"
              }
            },
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/admin-get-reward-chain-item-full-model"
                },
                {
                  "$ref": "#/components/schemas/admin-get-reward-chain-item-clan-full-model"
                }
              ]
            }
          }
        }
      },
      "404-admin-reward-chain-not-found": {
        "description": "Reward chain not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 404
                },
                "errorCode": {
                  "type": "integer",
                  "example": 4001
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0401-4001]: Reward chain not found"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 404,
                  "errorCode": 9901,
                  "errorMessage": "[0401-4001]: Reward chain not found"
                }
              }
            }
          }
        }
      },
      "204-admin-update-reward-chain": {
        "description": "Reward chain was successfully updated.",
        "content": {}
      },
      "204-admin-delete-reward-chain": {
        "description": "Reward chain was successfully deleted.",
        "content": {}
      },
      "204-admin-toggle-reward-chain": {
        "description": "The reward chain has been disabled/enabled.",
        "content": {}
      },
      "204-admin-reset-reward-chain": {
        "description": "The reward chain has been reset.",
        "content": {}
      },
      "200-admin-get-list-offer-chains": {
        "description": "The list of offer chains was successfully retrieved.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-admin-offer-chain-list"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "has_more": {
                  "$ref": "#/components/schemas/Pagination_has-more"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/admin-offer-chain-short-model"
                  }
                }
              }
            }
          }
        }
      },
      "201-admin-create-offer-chain": {
        "description": "The offer chain was successfully created.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "value": {
                  "offer_chain_id": 10
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "offer_chain_id": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          }
        }
      },
      "422-create-error-list": {
        "description": "Invalid offer chain configuration.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/offer-chain-error-model"
            },
            "examples": {
              "too-many-steps-error": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-too-many-steps"
              },
              "incorrect-steps-order-error": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-incorrect-steps-order"
              },
              "item-limit-exceeded": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-item-limit-exceeded"
              },
              "incorrect-items": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-incorrect-items"
              },
              "invalid-dates": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-invalid-dates"
              },
              "incorrect-period": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-incorrect-period"
              }
            }
          }
        }
      },
      "200-admin-get-offer-chain": {
        "description": "The offer chain data was successfully retrieved.",
        "content": {
          "application/json": {
            "examples": {
              "response": {
                "$ref": "#/components/examples/200-admin-offer-chain"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/admin-offer-chain-long-model"
            }
          }
        }
      },
      "422-update-error-list": {
        "description": "Invalid offer chain configuration.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/offer-chain-error-model"
            },
            "examples": {
              "too-many-steps-error": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-too-many-steps"
              },
              "incorrect-steps-order-error": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-incorrect-steps-order"
              },
              "item-limit-exceeded": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-item-limit-exceeded"
              },
              "incorrect-items": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-incorrect-items"
              },
              "invalid-dates": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-invalid-dates"
              },
              "incorrect-period": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-incorrect-period"
              },
              "invalid-chain-step-ids": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-invalid-chain-step-ids"
              },
              "chain-id-mismatch": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-chain-id-mismatch"
              },
              "chain-step-ids-duplication": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-duplicate-step-ids"
              },
              "active-offer-chain": {
                "$ref": "#/components/examples/422-admin-offer-chain-error-activated"
              }
            }
          }
        }
      },
      "Promotions_200-get-unique-catalog-offers": {
        "description": "The list of coupons was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotions_200-get-unique-catalog-offer-promotion-model"
                  }
                },
                "total_promotions_count": {
                  "$ref": "#/components/schemas/total_promotions_count"
                },
                "active_promotions_count": {
                  "$ref": "#/components/schemas/active_promotions_count"
                },
                "inactive_promotions_count": {
                  "$ref": "#/components/schemas/inactive_promotions_count"
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-admin-unique-catalog-offers"
              }
            }
          }
        }
      },
      "Promotions_200-unique-catalog-offer-code-list": {
        "description": "The list of codes for a unique catalog offer was successfully received.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "codes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "$ref": "#/components/schemas/Promotions_coupon_code"
                      }
                    }
                  }
                },
                "total_count": {
                  "type": "number",
                  "description": "Total number of unique catalog offer codes."
                }
              }
            },
            "examples": {
              "response": {
                "$ref": "#/components/examples/Promotions_200-coupon-code-list"
              }
            }
          }
        }
      },
      "connector-422-validation-failed": {
        "description": "Validation error caused by incorrect parameters of the request body, file properties, or file content.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "integer",
                  "example": 1803
                },
                "statusCode": {
                  "type": "integer",
                  "example": 422
                },
                "errorMessage": {
                  "type": "string",
                  "example": "[0410-1803]: File content-type doesn't allowed. Allowed content types: application/json; current content type: text/plain"
                },
                "transactionId": {
                  "type": "string",
                  "example": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            },
            "examples": {
              "response": {
                "value": {
                  "statusCode": 422,
                  "errorCode": 1803,
                  "errorMessage": "[0410-1803]: File content-type doesn't allowed. Allowed content types: application/json; current content type: text/plain",
                  "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
                }
              }
            }
          }
        }
      },
      "200-items-import-status-model": {
        "description": "The import status has been successfully retrieved.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error",
                  "description": "Import status.",
                  "enum": [
                    "initialized",
                    "process",
                    "done",
                    "error"
                  ],
                  "x-enumDescriptions": {
                    "initialized": "Import has been initiated.",
                    "process": "Import is in progress.",
                    "done": "Import was successfull.",
                    "error": "Due to errors, the import was not completed or only partially completed."
                  }
                },
                "date_created": {
                  "type": "string",
                  "example": "2024-12-15T18:16:00+03:00",
                  "description": "The timestamp of the import creation operation in GMT+3 timezone."
                },
                "date_updated": {
                  "type": "string",
                  "example": "2024-12-15T18:16:00+03:00",
                  "description": "The timestamp when the import was interrupted due to an error in GMT+3 timezone."
                },
                "date_completed": {
                  "type": "string",
                  "example": "2024-12-15T18:16:00+03:00",
                  "description": "The timestamp of completion of the import operation in GMT+3 timezone. If the import was interrupted due to an error and no items were imported, an empty string will be returned."
                },
                "progress": {
                  "type": "integer",
                  "example": 100,
                  "description": "The progress of the import execution in percent."
                },
                "error": {
                  "type": "string",
                  "description": "Description of the general import error."
                },
                "error_code": {
                  "type": "string",
                  "description": "The code of the general import error."
                },
                "result": {
                  "type": "object",
                  "description": "An object with data on the import results and import errors for specific items SKU.",
                  "properties": {
                    "errors_count": {
                      "type": "integer",
                      "example": 3,
                      "description": "The number of items that had errors during import."
                    },
                    "total_entities_count": {
                      "type": "integer",
                      "example": 11,
                      "description": "The total number of imported items."
                    },
                    "errors_by_sku": {
                      "type": "array",
                      "description": "An array of objects with data on import errors for specific item SKUs.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sku": {
                            "type": "string",
                            "example": "sku_1",
                            "description": "SKU of the imported item."
                          },
                          "type": {
                            "type": "string",
                            "example": "vi",
                            "description": "Type of item.",
                            "enum": [
                              "virtual_good",
                              "virtual_currency",
                              "virtual_currency_packages",
                              "bundle"
                            ]
                          },
                          "error_code": {
                            "type": "integer",
                            "example": 1001,
                            "description": "The import error code for a specific item SKU."
                          },
                          "error_message": {
                            "type": "string",
                            "example": "Something went wrong",
                            "description": "The description of the import error for a specific item SKU."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "status": "error",
                "date_created": "2024-11-19T14:27:31+03:00",
                "date_updated": "2024-11-19T15:27:31+03:00",
                "date_completed": "2024-11-19T15:27:31+03:00",
                "progress": 100,
                "error": null,
                "error_code": null,
                "result": {
                  "errors_count": 2,
                  "total_entities_count": 10,
                  "errors_by_sku": [
                    {
                      "sku": "com.xsolla.sword_1",
                      "type": "virtual_items",
                      "error_code": 4055,
                      "error_message": "[0401-4055]: Item default price not set"
                    },
                    {
                      "sku": "",
                      "type": null,
                      "error_code": 1817,
                      "error_message": "[0410-1817]: SKU can't be empty"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "create-update-attribute": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "external_id",
                "name"
              ],
              "properties": {
                "external_id": {
                  "$ref": "#/components/schemas/admin-attribute-external_id"
                },
                "name": {
                  "$ref": "#/components/schemas/admin-attribute-name"
                }
              }
            },
            "example": {
              "external_id": "genre",
              "name": {
                "en": "Genre",
                "de": "Genre"
              }
            }
          }
        }
      },
      "create-update-attribute-value": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/request-attribute-value"
            },
            "example": {
              "external_id": "weapon_class_sword_value",
              "value": {
                "en": "Sword",
                "de": "Schwert"
              }
            }
          }
        }
      },
      "personalized-catalog_create-update-body": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/user-attribute_personalized-catalog-body-required"
            },
            "example": {
              "name": "Ork race armor rule",
              "is_enabled": true,
              "attribute_conditions": [
                {
                  "attribute": "race",
                  "operator": "eq",
                  "value": "ork",
                  "type": "string",
                  "can_be_missing": false
                }
              ],
              "items": [
                {
                  "item_id": 1
                }
              ],
              "is_satisfied_for_unauth": false
            }
          }
        }
      },
      "Bundles_bundle": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Bundles_admin_bundle_request"
            },
            "example": {
              "sku": "com.xsolla.armour_chest_1",
              "name": {
                "en": "Chest of armour",
                "de": "Brustpanzer"
              },
              "is_enabled": true,
              "is_free": true,
              "order": 1,
              "long_description": {
                "en": "Chest of armour for soldiers",
                "de": "Brustpanzer für Soldaten"
              },
              "description": {
                "en": "Chest of armour for soldiers",
                "de": "Brustpanzer für Soldaten"
              },
              "image_url": "https://picture.bundle-with-many-stuff.png",
              "media_list": [
                {
                  "type": "image",
                  "url": "https://test.com/image0"
                },
                {
                  "type": "image",
                  "url": "https://test.com/image1"
                }
              ],
              "groups": [
                "chests"
              ],
              "attributes": [
                {
                  "external_id": "class",
                  "name": {
                    "en": "Class"
                  },
                  "values": [
                    {
                      "external_id": "soldier",
                      "value": {
                        "en": "Soldier"
                      }
                    },
                    {
                      "external_id": "officer",
                      "value": {
                        "en": "Officer"
                      }
                    }
                  ]
                }
              ],
              "prices": [
                {
                  "currency": "USD",
                  "amount": "9.99",
                  "is_default": true,
                  "is_enabled": true
                },
                {
                  "currency": "EUR",
                  "amount": "9.99",
                  "is_default": false,
                  "is_enabled": true
                }
              ],
              "vc_prices": [],
              "content": [
                {
                  "sku": "com.xsolla.iron_gloves_1",
                  "quantity": 1
                },
                {
                  "sku": "com.xsolla.iron_boots_1",
                  "quantity": 1
                },
                {
                  "sku": "com.xsolla.iron_shield_1",
                  "quantity": 1
                },
                {
                  "sku": "com.xsolla.iron_armour_1",
                  "quantity": 1
                },
                {
                  "sku": "com.xsolla.iron_helmet_1",
                  "quantity": 1
                }
              ],
              "limits": {
                "per_user": null,
                "per_item": null
              },
              "periods": [
                {
                  "date_from": "2020-08-11T10:00:00+03:00",
                  "date_until": "2020-08-11T20:00:00+03:00"
                }
              ],
              "custom_attributes": {
                "type": "lootbox",
                "purchased": 0
              }
            }
          }
        },
        "description": "Object with bundle data.",
        "required": true
      },
      "Cart-Payment_fill-cart-json-model": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "items"
              ],
              "example": {
                "items": [
                  {
                    "sku": "com.xsolla.booster_mega_1",
                    "quantity": 123
                  }
                ]
              },
              "properties": {
                "items": {
                  "type": "array",
                  "description": "List of items.",
                  "items": {
                    "type": "object",
                    "minItems": 1,
                    "required": [
                      "sku",
                      "quantity"
                    ],
                    "properties": {
                      "sku": {
                        "type": "string",
                        "default": "booster_mega_1"
                      },
                      "quantity": {
                        "type": "number",
                        "default": 123
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Cart-Payment_put-item-by-cart-idJsonModel": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number",
                  "description": "Item quantity.",
                  "default": 123
                }
              }
            }
          }
        }
      },
      "Cart-Payment_create-order-by-cart-idJsonModel": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "currency": {
                  "type": "string",
                  "description": "Order price currency. Three-letter currency code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
                },
                "locale": {
                  "type": "string",
                  "description": "Response language."
                },
                "sandbox": {
                  "type": "boolean",
                  "description": "Creates an order in the sandbox mode. The option is available for those users who are specified in the list of company users.",
                  "default": false
                },
                "settings": {
                  "type": "object",
                  "description": "Settings for configuring payment process and the payment UI for a user.",
                  "additionalProperties": false,
                  "properties": {
                    "ui": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_ui"
                    },
                    "payment_method": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_payment_method"
                    },
                    "return_url": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_return_url"
                    },
                    "redirect_policy": {
                      "$ref": "#/components/schemas/Cart-Payment_redirect_policy"
                    }
                  }
                },
                "custom_parameters": {
                  "type": "object",
                  "description": "Project specific parameters.",
                  "minProperties": 1,
                  "maxProperties": 200
                }
              }
            },
            "example": {
              "sandbox": true,
              "settings": {
                "ui": {
                  "theme": "63295a9a2e47fab76f7708e1",
                  "desktop": {
                    "header": {
                      "is_visible": true,
                      "visible_logo": true,
                      "visible_name": true,
                      "visible_purchase": true,
                      "type": "normal",
                      "close_button": false
                    }
                  }
                }
              },
              "custom_parameters": {
                "character_id": "ingameUsername"
              }
            }
          }
        }
      },
      "Cart-Payment_create-order-with-specified-item-idJsonModel": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "currency": {
                  "type": "string",
                  "description": "Order price currency. Three-letter currency code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
                },
                "locale": {
                  "type": "string",
                  "description": "Response language."
                },
                "sandbox": {
                  "type": "boolean",
                  "description": "Creates an order in the sandbox mode. The option is available for those users who are specified in the list of company users.",
                  "default": false
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Item quantity.",
                  "default": 1
                },
                "promo_code": {
                  "type": "string",
                  "description": "Redeems a code of a promo code promotion with payment."
                },
                "settings": {
                  "type": "object",
                  "description": "Settings for configuring payment process and the payment UI for a user.",
                  "additionalProperties": false,
                  "properties": {
                    "ui": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_ui"
                    },
                    "payment_method": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_payment_method"
                    },
                    "return_url": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_return_url"
                    },
                    "redirect_policy": {
                      "$ref": "#/components/schemas/Cart-Payment_redirect_policy"
                    }
                  }
                },
                "custom_parameters": {
                  "type": "object",
                  "description": "Project specific parameters.",
                  "minProperties": 1,
                  "maxProperties": 200
                }
              }
            },
            "example": {
              "sandbox": true,
              "quantity": 5,
              "promo_code": "discount_code",
              "settings": {
                "ui": {
                  "theme": "63295a9a2e47fab76f7708e1",
                  "desktop": {
                    "header": {
                      "is_visible": true,
                      "visible_logo": true,
                      "visible_name": true,
                      "visible_purchase": true,
                      "type": "normal",
                      "close_button": false
                    }
                  }
                }
              },
              "custom_parameters": {
                "character_id": "ingameUsername"
              }
            }
          }
        }
      },
      "admin-order-search": {
        "description": "Order search parameters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "description": "A limit on the number of orders included in the response.",
                  "minimum": 1,
                  "maximum": 10,
                  "default": 10,
                  "nullable": false
                },
                "offset": {
                  "type": "integer",
                  "description": "Number of the order from which the list is generated (the count starts from 0).",
                  "default": 0,
                  "minimum": 0,
                  "nullable": false
                },
                "created_date_from": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": false,
                  "example": "2020-04-15T18:16:00+05:00",
                  "description": "Start date or date-time of the order creation period per [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)."
                },
                "created_date_until": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": false,
                  "example": "2020-04-16T18:16:00+05:00",
                  "description": "End date or date-time of the order creation period per [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)."
                }
              }
            },
            "example": {
              "offset": 0,
              "limit": 5,
              "created_date_from": "2018-01-07T00:00:00+03:00",
              "created_date_until": "2018-01-09T16:00:00+03:00"
            }
          }
        }
      },
      "Cart-Payment_admin-create-payment-token": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user",
                "purchase"
              ],
              "properties": {
                "sandbox": {
                  "$ref": "#/components/schemas/Cart-Payment_settings_sandbox"
                },
                "user": {
                  "$ref": "#/components/schemas/Cart-Payment_admin-user-request-body"
                },
                "purchase": {
                  "$ref": "#/components/schemas/Cart_admin_payment"
                },
                "settings": {
                  "type": "object",
                  "description": "Settings for configuring payment process and the payment UI for a user.",
                  "additionalProperties": false,
                  "properties": {
                    "ui": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_ui"
                    },
                    "currency": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_currency"
                    },
                    "language": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_locale"
                    },
                    "external_id": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_external_id"
                    },
                    "payment_method": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_payment_method"
                    },
                    "return_url": {
                      "$ref": "#/components/schemas/Cart-Payment_settings_return_url"
                    },
                    "redirect_policy": {
                      "$ref": "#/components/schemas/Cart-Payment_redirect_policy"
                    }
                  }
                },
                "custom_parameters": {
                  "$ref": "#/components/schemas/Cart-Payment_custom_parameters"
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "common": {
                "value": {
                  "user": {
                    "id": {
                      "value": "user-id"
                    },
                    "name": {
                      "value": "user-name"
                    },
                    "email": {
                      "value": "user@xsolla.com"
                    },
                    "country": {
                      "value": "US",
                      "allow_modify": false
                    }
                  },
                  "purchase": {
                    "items": [
                      {
                        "sku": "com.xsolla.cup01",
                        "quantity": 2
                      },
                      {
                        "sku": "com.xsolla.t-shirt01",
                        "quantity": 1
                      },
                      {
                        "sku": "com.xsolla.cup01",
                        "quantity": 1
                      },
                      {
                        "sku": "com.xsolla.hat01",
                        "quantity": 1
                      }
                    ]
                  },
                  "settings": {
                    "language": "de",
                    "external_id": "AABBCCDD01",
                    "currency": "USD",
                    "payment_method": 1380,
                    "return_url": "https://developers.xsolla.com/",
                    "ui": {
                      "theme": "63295aab2e47fab76f7708e3"
                    }
                  }
                }
              },
              "in-sandbox": {
                "value": {
                  "sandbox": true,
                  "user": {
                    "id": {
                      "value": "user-id"
                    }
                  },
                  "purchase": {
                    "items": [
                      {
                        "sku": "com.xsolla.cup01",
                        "quantity": 2
                      },
                      {
                        "sku": "com.xsolla.t-shirt01",
                        "quantity": 1
                      },
                      {
                        "sku": "com.xsolla.cup01",
                        "quantity": 1
                      },
                      {
                        "sku": "com.xsolla.hat01",
                        "quantity": 1
                      }
                    ]
                  },
                  "settings": {
                    "currency": "USD"
                  }
                }
              },
              "with-custom-parameters": {
                "value": {
                  "user": {
                    "id": {
                      "value": "user-id"
                    },
                    "name": {
                      "value": "user-name"
                    },
                    "email": {
                      "value": "user@xsolla.com"
                    },
                    "country": {
                      "value": "US",
                      "allow_modify": false
                    }
                  },
                  "purchase": {
                    "items": [
                      {
                        "sku": "com.xsolla.cup01",
                        "quantity": 2
                      },
                      {
                        "sku": "com.xsolla.t-shirt01",
                        "quantity": 1
                      },
                      {
                        "sku": "com.xsolla.cup01",
                        "quantity": 1
                      },
                      {
                        "sku": "com.xsolla.hat01",
                        "quantity": 1
                      }
                    ]
                  },
                  "settings": {
                    "language": "de",
                    "external_id": "AABBCCDD01",
                    "currency": "USD",
                    "payment_method": 1380,
                    "return_url": "https://developers.xsolla.com/",
                    "ui": {
                      "theme": "63295aab2e47fab76f7708e3"
                    }
                  },
                  "custom_parameters": {
                    "user_public_id": "player1",
                    "user_os": "windows10"
                  }
                }
              }
            }
          }
        }
      },
      "Cart-Payment_admin-fill-cart-json-model": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Cart"
            },
            "examples": {
              "basic": {
                "value": {
                  "currency": "USD",
                  "items": [
                    {
                      "sku": "com.xsolla.cup01",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.t-shirt01",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.cup01",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.hat01",
                      "quantity": 1
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "update-upsell": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Upsell-model"
                },
                {
                  "$ref": "#/components/schemas/Upsell-model-not-fixed-list"
                }
              ]
            },
            "examples": {
              "fixed_list": {
                "summary": "Example of upsell with fixed list of items",
                "value": {
                  "is_enabled": true,
                  "type": "fixed_list",
                  "items": [
                    "game_sku_1",
                    "game_sku_2",
                    "game_sku_3"
                  ]
                }
              },
              "special_type_promotions": {
                "summary": "Example of upsell with promotion items only",
                "value": {
                  "is_enabled": true,
                  "type": "only_promotions",
                  "items": []
                }
              },
              "special_type_most_sellable": {
                "summary": "Example of upsell with most sellable items for last 30 days",
                "value": {
                  "is_enabled": true,
                  "type": "most_sellable",
                  "items": []
                }
              }
            }
          }
        }
      },
      "create-upsell": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Upsell-model"
                },
                {
                  "$ref": "#/components/schemas/Upsell-model-not-fixed-list"
                }
              ]
            },
            "examples": {
              "fixed_list": {
                "summary": "Example of upsell with fixed list of items",
                "value": {
                  "is_enabled": true,
                  "type": "fixed_list",
                  "items": [
                    "game_sku_1",
                    "game_sku_2",
                    "game_sku_3"
                  ]
                }
              },
              "special_type_promotions": {
                "summary": "Example of upsell with promotion items only",
                "value": {
                  "is_enabled": true,
                  "type": "only_promotions",
                  "items": []
                }
              },
              "special_type_most_sellable": {
                "summary": "Example of upsell with most sellable items for last 30 days",
                "value": {
                  "is_enabled": true,
                  "type": "most_sellable",
                  "items": []
                }
              }
            }
          }
        }
      },
      "Game-Keys_create-update-game-model": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "game_1",
                  "pattern": "^[a-zA-Z0-9_\\-–.]*$",
                  "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                },
                "name": {
                  "$ref": "#/components/schemas/name-localization-object"
                },
                "description": {
                  "$ref": "#/components/schemas/description-localization-object"
                },
                "long_description": {
                  "$ref": "#/components/schemas/long-description-localization-object"
                },
                "image_url": {
                  "type": "string",
                  "example": "https://image.example.com",
                  "description": "Image URL."
                },
                "media_list": {
                  "type": "array",
                  "example": [
                    {
                      "type": "image",
                      "url": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg"
                    }
                  ],
                  "description": "Game additional assets such as screenshots, gameplay video, etc.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "image",
                          "video"
                        ],
                        "example": "image",
                        "description": "Type of media: `image`/`video`."
                      },
                      "url": {
                        "type": "string",
                        "example": "https://cdn3.xsolla.com/img/misc/images/71ab1e12126f2103e1868076f0acb21a.jpg",
                        "description": "Resource file."
                      }
                    }
                  }
                },
                "order": {
                  "type": "integer",
                  "example": 1,
                  "description": "Game order priority in the list."
                },
                "groups": {
                  "type": "array",
                  "description": "Groups the item belongs to.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "external_id": {
                        "type": "string",
                        "example": "horror"
                      }
                    },
                    "required": [
                      "external_id"
                    ]
                  }
                },
                "attributes": {
                  "$ref": "#/components/schemas/Game-Keys_admin-post-put-attributes"
                },
                "is_enabled": {
                  "type": "boolean",
                  "description": "If disabled, item cannot be purchased and accessed through inventory."
                },
                "is_show_in_store": {
                  "type": "boolean",
                  "description": "Item is available for purchase."
                },
                "unit_items": {
                  "type": "array",
                  "description": "Game keys for different DRMs.",
                  "items": {
                    "type": "object",
                    "description": "Game key item. It represents game on a certain platform (steam, gog, etc.).",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "game_1",
                        "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                      },
                      "name": {
                        "$ref": "#/components/schemas/name-localization-object"
                      },
                      "groups": {
                        "type": "array",
                        "description": "Groups the item belongs to.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "external_id": {
                              "type": "string",
                              "example": "horror"
                            }
                          },
                          "required": [
                            "external_id"
                          ]
                        }
                      },
                      "attributes": {
                        "$ref": "#/components/schemas/Game-Keys_admin-attributes"
                      },
                      "is_free": {
                        "$ref": "#/components/schemas/value-is_free"
                      },
                      "prices": {
                        "type": "array",
                        "description": "Prices in real currencies.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "example": 1299.99
                            },
                            "currency": {
                              "type": "string",
                              "example": "RUB",
                              "description": "Item price currency. Three-letter code per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217). Check the documentation for detailed information about [currencies supported by Xsolla](https://developers.xsolla.com/doc/pay-station/references/supported-currencies/)."
                            },
                            "is_default": {
                              "type": "boolean",
                              "description": "Default price is used to build catalog if no price in user's currency is specified."
                            },
                            "is_enabled": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "amount",
                            "currency",
                            "is_default",
                            "is_enabled"
                          ]
                        }
                      },
                      "vc_prices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "sku": {
                              "type": "string",
                              "example": "gold",
                              "description": "Unique item ID. The SKU may contain only lowercase and uppercase Latin alphanumeric characters, periods, dashes, and underscores."
                            },
                            "amount": {
                              "type": "number"
                            },
                            "is_default": {
                              "type": "boolean"
                            },
                            "is_enabled": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "amount",
                            "currency",
                            "is_default",
                            "is_enabled"
                          ]
                        }
                      },
                      "order": {
                        "type": "integer",
                        "example": 1,
                        "description": "Game order priority in the list."
                      },
                      "is_enabled": {
                        "type": "boolean",
                        "description": "If disabled, item cannot be purchased and accessed through inventory."
                      },
                      "is_show_in_store": {
                        "type": "boolean",
                        "description": "Item is available for purchase."
                      },
                      "drm_sku": {
                        "type": "string",
                        "example": "steam",
                        "description": "DRM unique ID."
                      },
                      "pre_order": {
                        "type": "object",
                        "description": "Pre-order settings.",
                        "properties": {
                          "release_date": {
                            "type": "string",
                            "description": "Game key release date in the ISO 8601 format."
                          },
                          "is_enabled": {
                            "type": "boolean",
                            "description": "If disabled, the item is not a pre-order."
                          },
                          "description": {
                            "type": "string",
                            "description": "Additional information for the pre-order, which will be emailed."
                          }
                        },
                        "required": [
                          "release_date",
                          "is_enabled"
                        ]
                      },
                      "regions": {
                        "$ref": "#/components/schemas/Game-Keys_regions"
                      },
                      "limits": {
                        "$ref": "#/components/schemas/item-limit"
                      },
                      "periods": {
                        "$ref": "#/components/schemas/item-periods"
                      }
                    },
                    "required": [
                      "sku",
                      "drm_sku",
                      "prices"
                    ]
                  }
                }
              },
              "required": [
                "sku",
                "name",
                "unit_items"
              ],
              "example": {
                "sku": "com.xsolla.game_1",
                "name": {
                  "en-US": "Game name",
                  "ru-RU": "Название игры"
                },
                "description": {
                  "en-US": "Game description",
                  "ru-RU": "Краткое описание игры"
                },
                "long_description": {
                  "en-US": "Game long description",
                  "ru-RU": "Полное описание игры"
                },
                "image_url": "http://image.png",
                "media_list": [
                  {
                    "type": "image",
                    "url": "http://image.png"
                  },
                  {
                    "type": "video",
                    "url": "http://video.png"
                  }
                ],
                "groups": [
                  "new_games"
                ],
                "is_enabled": true,
                "is_show_in_store": true,
                "unit_items": [
                  {
                    "sku": "com.xsolla.game_key_1",
                    "name": {
                      "en-US": "Game key name",
                      "ru-RU": "Название игрового ключа"
                    },
                    "drm_sku": "steam_key_1",
                    "prices": [
                      {
                        "amount": 35.5,
                        "currency": "USD",
                        "is_enabled": true,
                        "is_default": true
                      }
                    ],
                    "vc_prices": [
                      {
                        "amount": 35.5,
                        "sku": "com.xsolla.gold_1",
                        "is_enabled": true,
                        "is_default": true
                      }
                    ],
                    "is_enabled": true,
                    "is_free": false,
                    "is_show_in_store": true,
                    "pre_order": {
                      "release_date": "2020-08-11T10:00:00+03:00",
                      "is_enabled": true,
                      "description": "Some description"
                    },
                    "regions": [
                      {
                        "id": 12
                      },
                      {
                        "id": 64
                      }
                    ],
                    "limits": {
                      "per_user": {
                        "total": 5
                      },
                      "per_item": {
                        "total": 10000,
                        "available": 5000,
                        "reserved": 500,
                        "sold": 4500
                      }
                    },
                    "periods": [
                      {
                        "date_from": "2020-08-11T10:00:00+03:00",
                        "date_until": "2020-08-11T20:00:00+03:00"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "description": "Object with game data.",
        "required": true
      },
      "Promotions_redeem-coupon-model": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "coupon_code": {
                  "type": "string",
                  "description": "Unique coupon code. Contains letters and numbers.",
                  "minLength": 1,
                  "maxLength": 128,
                  "example": "WINTER2021",
                  "default": "WINTER2021"
                },
                "selected_unit_items": {
                  "$ref": "#/components/schemas/Promotions_selected_unit_items"
                }
              }
            }
          }
        }
      },
      "Promotions_coupon-create": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "external_id",
                "name"
              ],
              "properties": {
                "external_id": {
                  "$ref": "#/components/schemas/Promotions_coupon-external_id"
                },
                "date_start": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_start"
                },
                "date_end": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_end"
                },
                "name": {
                  "$ref": "#/components/schemas/Promotions_coupon_name"
                },
                "bonus": {
                  "$ref": "#/components/schemas/Promotions_coupon_bonus"
                },
                "redeem_total_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
                },
                "redeem_user_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
                },
                "redeem_code_limit": {
                  "$ref": "#/components/schemas/Promotions_redeem_code_limit"
                },
                "attribute_conditions": {
                  "description": "Conditions which are compared to user attribute values.\nAll conditions must be met for the action to take an effect.\n",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-string"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-date"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-number"
                    }
                  ]
                }
              }
            },
            "examples": {
              "simple": {
                "value": {
                  "external_id": "coupon_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_1",
                      "quantity": 1
                    }
                  ]
                }
              },
              "personalized": {
                "value": {
                  "external_id": "coupon_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_2",
                      "quantity": 1
                    }
                  ],
                  "attribute_conditions": [
                    {
                      "attribute": "account_status",
                      "type": "string",
                      "operator": "eq",
                      "value": "golden",
                      "can_be_missing": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Promotions_coupon-update": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "date_start": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_start"
                },
                "date_end": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_end"
                },
                "name": {
                  "$ref": "#/components/schemas/Promotions_coupon_name"
                },
                "bonus": {
                  "$ref": "#/components/schemas/Promotions_coupon_bonus"
                },
                "redeem_total_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
                },
                "redeem_user_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
                },
                "redeem_code_limit": {
                  "$ref": "#/components/schemas/Promotions_redeem_code_limit"
                },
                "attribute_conditions": {
                  "description": "Conditions which are compared to user attribute values.\nAll conditions must be met for the action to take an effect.\n",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-string"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-date"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-number"
                    }
                  ]
                }
              }
            },
            "examples": {
              "simple": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_1",
                      "quantity": 1
                    }
                  ]
                }
              },
              "personalized": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_2",
                      "quantity": 1
                    }
                  ],
                  "attribute_conditions": [
                    {
                      "attribute": "account_status",
                      "type": "string",
                      "operator": "eq",
                      "value": "golden",
                      "can_be_missing": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Promotions_create-coupon-promocode-code": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "coupon_code": {
                  "$ref": "#/components/schemas/Promotions_coupon_code"
                }
              }
            }
          }
        }
      },
      "Promotions_redeem-promo-code-model": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "coupon_code": {
                  "type": "string",
                  "description": "Unique code of promo code. Contains letters and numbers.",
                  "minLength": 1,
                  "maxLength": 128,
                  "example": "SUMMER2021",
                  "default": "SUMMER2021"
                },
                "cart": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Cart ID.",
                      "default": "current"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "selected_unit_items": {
                  "$ref": "#/components/schemas/Promotions_selected_unit_items"
                }
              }
            }
          }
        }
      },
      "Promotions_cancel-promo-code-model": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cart": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Cart ID.",
                      "default": "current"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        }
      },
      "Promotions_promocode-create": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "external_id",
                "name"
              ],
              "properties": {
                "external_id": {
                  "$ref": "#/components/schemas/Promotions_coupon-external_id"
                },
                "date_start": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_start"
                },
                "date_end": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_end"
                },
                "name": {
                  "$ref": "#/components/schemas/Promotions_coupon_name"
                },
                "bonus": {
                  "$ref": "#/components/schemas/Promotions_coupon_bonus"
                },
                "redeem_total_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
                },
                "redeem_user_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
                },
                "redeem_code_limit": {
                  "$ref": "#/components/schemas/Promotions_redeem_code_limit"
                },
                "discount": {
                  "type": "object",
                  "properties": {
                    "percent": {
                      "$ref": "#/components/schemas/Promotions_promotion_discount_percent"
                    }
                  },
                  "example": {
                    "percent": "10.10"
                  },
                  "nullable": true
                },
                "discounted_items": {
                  "$ref": "#/components/schemas/Promotions_discounted_items"
                },
                "attribute_conditions": {
                  "description": "Conditions which are compared to user attribute values.\nAll conditions must be met for the action to take an effect.\n",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-string"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-date"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-number"
                    }
                  ]
                },
                "price_conditions": {
                  "$ref": "#/components/schemas/price_conditions_promocode"
                },
                "item_price_conditions": {
                  "$ref": "#/components/schemas/item_price_conditions_promocode"
                },
                "excluded_promotions": {
                  "$ref": "#/components/schemas/excluded_promotions"
                }
              }
            },
            "examples": {
              "simple bonus": {
                "value": {
                  "external_id": "promo_code_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_1",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_1",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_1",
                      "quantity": 2
                    }
                  ]
                }
              },
              "simple discount": {
                "value": {
                  "external_id": "promo_code_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Discount",
                    "de-DE": "Neujahrsrabatt"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "discount": {
                    "percent": "10.10"
                  }
                }
              },
              "personalized": {
                "value": {
                  "external_id": "coupon_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Discount",
                    "de-DE": "Neujahrsrabatt"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "discount": {
                    "percent": "10.10"
                  },
                  "attribute_conditions": [
                    {
                      "attribute": "account_status",
                      "type": "string",
                      "operator": "eq",
                      "value": "golden",
                      "can_be_missing": false
                    }
                  ]
                }
              },
              "with price conditions": {
                "value": {
                  "external_id": "promo_code_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_2",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_2",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_2",
                      "quantity": 2
                    }
                  ],
                  "price_conditions": [
                    {
                      "operator": "ge",
                      "value": "10.5000"
                    },
                    {
                      "operator": "lt",
                      "value": "50.0000"
                    }
                  ]
                }
              },
              "with item price conditions": {
                "value": {
                  "external_id": "promo_code_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "discount": {
                    "percent": "10.10"
                  },
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_3",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_3",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_3",
                      "quantity": 2
                    }
                  ],
                  "item_price_conditions": [
                    {
                      "operator": "ge",
                      "value": "10.5000"
                    },
                    {
                      "operator": "lt",
                      "value": "50.0000"
                    }
                  ]
                }
              },
              "with excluded promotions": {
                "value": {
                  "external_id": "coupon_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Discount",
                    "de-DE": "Neujahrsrabatt"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "discount": {
                    "percent": "10.10"
                  },
                  "excluded_promotions": [
                    12,
                    789
                  ]
                }
              }
            }
          }
        }
      },
      "Promotions_promocode-update": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "date_start": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_start"
                },
                "date_end": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_end"
                },
                "name": {
                  "$ref": "#/components/schemas/Promotions_coupon_name"
                },
                "bonus": {
                  "$ref": "#/components/schemas/Promotions_coupon_bonus"
                },
                "redeem_total_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
                },
                "redeem_user_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
                },
                "redeem_code_limit": {
                  "$ref": "#/components/schemas/Promotions_redeem_code_limit"
                },
                "discount": {
                  "type": "object",
                  "properties": {
                    "percent": {
                      "$ref": "#/components/schemas/Promotions_promotion_discount_percent"
                    }
                  },
                  "example": {
                    "percent": "10.10"
                  },
                  "nullable": true
                },
                "discounted_items": {
                  "$ref": "#/components/schemas/Promotions_discounted_items"
                },
                "attribute_conditions": {
                  "description": "Conditions which are compared to user attribute values.\nAll conditions must be met for the action to take an effect.\n",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-string"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-date"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-number"
                    }
                  ]
                },
                "price_conditions": {
                  "$ref": "#/components/schemas/price_conditions_promocode"
                },
                "item_price_conditions": {
                  "$ref": "#/components/schemas/item_price_conditions_promocode"
                },
                "excluded_promotions": {
                  "$ref": "#/components/schemas/excluded_promotions"
                }
              }
            },
            "examples": {
              "simple bonus": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_1",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_1",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_1",
                      "quantity": 2
                    }
                  ]
                }
              },
              "simple discount": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Discount",
                    "de-DE": "Neujahrsrabatt"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "discount": {
                    "percent": "10.10"
                  }
                }
              },
              "personalized": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Discount",
                    "de-DE": "Neujahrsrabatt"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "discount": {
                    "percent": "10.10"
                  },
                  "attribute_conditions": [
                    {
                      "attribute": "account_status",
                      "type": "string",
                      "operator": "eq",
                      "value": "golden",
                      "can_be_missing": false
                    }
                  ]
                }
              },
              "with price conditions": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_2",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_2",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_2",
                      "quantity": 2
                    }
                  ],
                  "price_conditions": [
                    {
                      "operator": "gt",
                      "value": "10.5000"
                    },
                    {
                      "operator": "lt",
                      "value": "50.0000"
                    }
                  ]
                }
              },
              "with item price conditions": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "discount": {
                    "percent": "10.10"
                  },
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_3",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_3",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_3",
                      "quantity": 2
                    }
                  ],
                  "item_price_conditions": [
                    {
                      "operator": "gt",
                      "value": "10.5000"
                    },
                    {
                      "operator": "lt",
                      "value": "50.0000"
                    }
                  ]
                }
              },
              "with excluded promotions": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Discount",
                    "de-DE": "Neujahrsrabatt"
                  },
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1,
                  "discount": {
                    "percent": "10.10"
                  },
                  "excluded_promotions": [
                    12,
                    789
                  ]
                }
              }
            }
          }
        }
      },
      "Promotions_create-update-item-promotion": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "object",
                  "description": "Name of promotion. Should contain key/value pairs,\nwhere key is locale with format \"^[a-z]{2}-[A-Z]{2}$\", value is string.\n",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "en-US": "Promotion",
                    "ru-RU": "Акция"
                  }
                },
                "date_start": {
                  "type": "string",
                  "nullable": true,
                  "format": "date-time",
                  "default": "2020-04-15T18:16:00+05:00",
                  "description": "Date when your promotion will be started."
                },
                "date_end": {
                  "type": "string",
                  "nullable": true,
                  "format": "date-time",
                  "default": "2020-04-15T18:16:00+05:00",
                  "description": "Date when your promotion will be finished. Can be `null`."
                },
                "discount": {
                  "type": "object",
                  "properties": {
                    "percent": {
                      "type": "string",
                      "description": "Percent discount.\nThe price of item will be decreased using a value calculated by using this percent and then rounded to 2 decimal places.",
                      "example": 10
                    }
                  },
                  "required": [
                    "percent"
                  ]
                },
                "items": {
                  "type": "array",
                  "items": {
                    "description": "The list of items which will be affected by discount.",
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "description": "Item SKU.",
                        "default": "elven_sword"
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  }
                },
                "attribute_conditions": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/user-attribute_conditions-string"
                      },
                      {
                        "$ref": "#/components/schemas/user-attribute_conditions-date"
                      },
                      {
                        "$ref": "#/components/schemas/user-attribute_conditions-number"
                      }
                    ]
                  }
                },
                "price_conditions": {
                  "$ref": "#/components/schemas/price_conditions_discount"
                },
                "limits": {
                  "$ref": "#/components/schemas/Promotions_promotion_limits"
                },
                "excluded_promotions": {
                  "$ref": "#/components/schemas/excluded_promotions"
                }
              },
              "required": [
                "items",
                "discount",
                "name"
              ]
            },
            "examples": {
              "simple": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "discount": {
                    "percent": "10.00"
                  },
                  "items": [
                    {
                      "sku": "com.xsolla.elven_sword_1"
                    },
                    {
                      "sku": "com.xsolla.elven_helmet_1"
                    },
                    {
                      "sku": "com.xsolla.elven_armor_1"
                    }
                  ],
                  "name": {
                    "en-US": "Promotion",
                    "ru-RU": "Акция"
                  }
                }
              },
              "personalized": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "discount": {
                    "percent": "24.00"
                  },
                  "items": [],
                  "name": {
                    "en-US": "Ork set discount",
                    "ru-RU": "Скидка на набор для орка"
                  },
                  "attribute_conditions": [
                    [
                      {
                        "type": "string",
                        "attribute": "race",
                        "operator": "eq",
                        "value": "ork"
                      }
                    ],
                    [
                      {
                        "type": "number",
                        "attribute": "level",
                        "operator": "eq",
                        "value": "10",
                        "can_be_missing": true
                      }
                    ]
                  ]
                }
              },
              "with price condition": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "discount": {
                    "percent": "24.00"
                  },
                  "items": [],
                  "name": {
                    "en-US": "Ork set discount",
                    "ru-RU": "Скидка на набор для орка"
                  },
                  "price_conditions": [
                    {
                      "operator": "ge",
                      "value": "10.5000"
                    },
                    {
                      "operator": "lt",
                      "value": "20.5000"
                    }
                  ]
                }
              },
              "with excluded promotions": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "discount": {
                    "percent": "24.00"
                  },
                  "items": [],
                  "name": {
                    "en-US": "Ork set discount",
                    "ru-RU": "Скидка на набор для орка"
                  },
                  "excluded_promotions": [
                    12,
                    789
                  ]
                }
              }
            }
          }
        },
        "description": "Object with promotion data.",
        "required": true
      },
      "Promotions_create-update-bonus-promotion": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "condition",
                "bonus",
                "name"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Promotion ID. Unique promotion identifier within the project."
                },
                "date_start": {
                  "type": "string",
                  "nullable": true,
                  "format": "date-time",
                  "default": "2020-04-15T18:16:00+05:00",
                  "description": "Date when your promotion will be started."
                },
                "date_end": {
                  "type": "string",
                  "nullable": true,
                  "format": "date-time",
                  "default": "2020-04-15T18:16:00+05:00",
                  "description": "Date when your promotion will be finished. Can be `null`. If `date_end` is `null`, promotion will be unlimited by time."
                },
                "name": {
                  "type": "object",
                  "description": "Name of promotion. Should contain key/value pairs where key is a locale with \"^[a-z]{2}-[A-Z]{2}$\" format, value is string.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "en-US": "Summer season bonus",
                    "de-DE": "Sommersaison Bonus"
                  }
                },
                "condition": {
                  "type": "array",
                  "nullable": true,
                  "description": "Set of items required to be included in the purchase for applying a promotion. If this parameters is `null`, a promotion will be applied to any purchases within a project.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "description": "Item SKU.",
                        "default": "elven_sword"
                      }
                    }
                  }
                },
                "attribute_conditions": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-string"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-date"
                    },
                    {
                      "$ref": "#/components/schemas/user-attribute_conditions-number"
                    }
                  ]
                },
                "bonus": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "description": "The list of items which will be added into purchase of user as a bonus.",
                    "type": "object",
                    "properties": {
                      "sku": {
                        "type": "string",
                        "description": "Item SKU.",
                        "default": "elven_shield"
                      },
                      "quantity": {
                        "type": "number",
                        "description": "Item quantity.",
                        "default": 1
                      }
                    }
                  }
                },
                "limits": {
                  "$ref": "#/components/schemas/Promotions_promotion_limits"
                },
                "price_conditions": {
                  "$ref": "#/components/schemas/price_conditions_bonus"
                },
                "excluded_promotions": {
                  "$ref": "#/components/schemas/excluded_promotions"
                }
              }
            },
            "examples": {
              "simple": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "condition": [
                    {
                      "sku": "com.xsolla.elven_boots_1"
                    },
                    {
                      "sku": "com.xsolla.elven_knife_1"
                    }
                  ],
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_1",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_1",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_1",
                      "quantity": 2
                    }
                  ]
                }
              },
              "personalized": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "condition": [
                    {
                      "sku": "com.xsolla.year_1_season_pass"
                    }
                  ],
                  "attribute_conditions": [
                    {
                      "attribute": "account_status",
                      "type": "string",
                      "operator": "eq",
                      "value": "golden",
                      "can_be_missing": false
                    }
                  ],
                  "bonus": [
                    {
                      "sku": "com.xsolla.mp_credits",
                      "quantity": 50000
                    }
                  ]
                }
              },
              "with price conditions": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "condition": [
                    {
                      "sku": "com.xsolla.elven_boots_2"
                    },
                    {
                      "sku": "com.xsolla.elven_knife_2"
                    }
                  ],
                  "bonus": [
                    {
                      "sku": "com.xsolla.elven_sword_2",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.elven_shield_2",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.elven_gloves_2",
                      "quantity": 2
                    }
                  ],
                  "price_conditions": [
                    {
                      "operator": "gt",
                      "value": "10.0000"
                    },
                    {
                      "operator": "lt",
                      "value": "20.0000"
                    }
                  ]
                }
              },
              "with excluded promotions": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Bonus",
                    "de-DE": "Neujahrsbonus"
                  },
                  "condition": [
                    {
                      "sku": "com.xsolla.year_1_season_pass"
                    }
                  ],
                  "bonus": [
                    {
                      "sku": "com.xsolla.mp_credits",
                      "quantity": 50000
                    }
                  ],
                  "excluded_promotions": [
                    12,
                    789
                  ]
                }
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_admin-create-virtual-item": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_admin-create-virtual-item"
            },
            "example": {
              "sku": "com.xsolla.sword_1",
              "name": {
                "en": "Sword",
                "de": "Schwert"
              },
              "is_enabled": true,
              "is_free": false,
              "groups": [
                "weapons"
              ],
              "order": 1,
              "description": {
                "en": "A sword is a bladed melee weapon intended for cutting or thrusting that is longer than a knife or dagger, consisting of a long blade attached to a hilt.",
                "de": "Ein Schwert ist eine Nahkampfwaffe mit Klinge, die zum Schneiden oder Stechen bestimmt ist, länger als ein Messer oder Dolch ist und aus einer langen Klinge besteht, die an einem Griff befestigt ist."
              },
              "prices": [
                {
                  "amount": 100,
                  "currency": "USD",
                  "is_enabled": true,
                  "is_default": true
                },
                {
                  "amount": 200,
                  "currency": "CZK",
                  "country_iso": "CZ",
                  "is_enabled": false,
                  "is_default": true
                }
              ],
              "vc_prices": [],
              "is_show_in_store": true,
              "attributes": [
                {
                  "external_id": "craft-materials",
                  "name": {
                    "en": "Craft materials"
                  },
                  "values": [
                    {
                      "external_id": "steel",
                      "value": {
                        "en-US": "5"
                      }
                    },
                    {
                      "external_id": "leather",
                      "value": {
                        "en-US": "1"
                      }
                    }
                  ]
                }
              ],
              "limits": {
                "per_user": 5,
                "per_item": 100
              },
              "periods": [
                {
                  "date_from": "2020-08-11T10:00:00+03:00",
                  "date_until": "2020-08-11T20:00:00+03:00"
                }
              ],
              "custom_attributes": {
                "purchased": 0,
                "attr": "value"
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_admin-create-virtual-currency": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_admin-create-virtual-currency"
            },
            "example": {
              "sku": "com.xsolla.coin_1",
              "name": {
                "en-US": "Gold coin",
                "de-DE": "Goldmünze"
              },
              "is_enabled": true,
              "is_free": false,
              "groups": [
                "gold"
              ],
              "order": 1,
              "description": {
                "en-US": "The main currency of your kingdom",
                "de-DE": "Die Hauptwährung deines Königreichs"
              },
              "prices": [
                {
                  "amount": 100,
                  "currency": "USD",
                  "is_enabled": true,
                  "is_default": true
                }
              ],
              "attributes": [
                {
                  "external_id": "material",
                  "name": {
                    "en-US": "Material"
                  },
                  "values": [
                    {
                      "external_id": "gold",
                      "value": {
                        "en-US": "Gold"
                      }
                    }
                  ]
                }
              ],
              "limits": {
                "per_user": 5,
                "per_item": 10000
              },
              "periods": [
                {
                  "date_from": "2020-08-11T10:00:00+03:00",
                  "date_until": "2020-08-11T20:00:00+03:00"
                }
              ],
              "custom_attributes": {
                "purchased": 0,
                "attr": "value"
              }
            }
          }
        }
      },
      "Virtual-Items-Currency_admin-create-virtual-currency-package": {
        "content": {
          "application/json": {
            "example": {
              "sku": "com.xsolla.novigrad_crown_500",
              "name": {
                "en-US": "500x Novigradian crown",
                "ru-RU": "500x Новиградских крон"
              },
              "is_enabled": true,
              "is_free": false,
              "groups": [
                "witcher"
              ],
              "order": 1,
              "long_description": {
                "en-US": "Long Test new",
                "ru-RU": "Длинное описание"
              },
              "description": {
                "en-US": "The Crown (also known as the Novigradian crown) is a monetary unit which is used in some Northern Kingdoms",
                "ru-RU": "Крона (Также известна как Новиградская крона) - платежная единица, используемая в северных королевствах"
              },
              "image_url": "https://vignette.wikia.nocookie.net/witcher/images/7/7c/Items_Orens.png/revision/latest?cb=20081113120917",
              "media_list": [
                {
                  "type": "image",
                  "url": "https://test.com/image0"
                },
                {
                  "type": "image",
                  "url": "https://test.com/image1"
                }
              ],
              "attributes": [
                {
                  "external_id": "event",
                  "name": {
                    "en-US": "Event"
                  },
                  "values": [
                    {
                      "external_id": "10-anniversary",
                      "value": {
                        "en-US": "10th anniversary"
                      }
                    },
                    {
                      "external_id": "christmas",
                      "value": {
                        "en-US": "Christmas"
                      }
                    }
                  ]
                }
              ],
              "prices": [
                {
                  "currency": "USD",
                  "amount": 99.99,
                  "is_default": true
                },
                {
                  "currency": "EUR",
                  "amount": 80.03,
                  "is_enabled": false
                }
              ],
              "vc_prices": null,
              "content": [
                {
                  "sku": "com.xsolla.novigrad_crown",
                  "quantity": 500
                }
              ],
              "limits": {
                "per_user": null,
                "per_item": null
              },
              "periods": [
                {
                  "date_from": "2020-08-11T10:00:00+03:00",
                  "date_until": "2020-08-11T20:00:00+03:00"
                }
              ],
              "custom_attributes": {
                "purchased": 0,
                "attr": "value"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Virtual-Items-Currency_admin-create-virtual-currency-package"
            }
          }
        }
      },
      "create-update-region": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "countries",
                "name"
              ],
              "properties": {
                "countries": {
                  "$ref": "#/components/schemas/Regions_countries"
                },
                "name": {
                  "$ref": "#/components/schemas/Regions_name"
                }
              },
              "example": {
                "name": {
                  "en-US": "Asia",
                  "de-DE": "Asien"
                },
                "countries": [
                  "JP",
                  "CN",
                  "VN"
                ]
              }
            }
          }
        }
      },
      "reset-user-limits": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User-limit_user"
                }
              }
            },
            "example": {
              "user": {
                "user_external_id": "d342dad2-9d59-11e9-a384-42010aa8003f"
              }
            }
          }
        }
      },
      "reset-user-limits-flexible": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User-limit_user_flexible"
                }
              }
            },
            "example": {
              "user": {
                "user_external_id": "d342dad2-9d59-11e9-a384-42010aa8003f"
              }
            }
          }
        }
      },
      "update-user-limits-flexible": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user",
                "available"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User-limit_user"
                },
                "available": {
                  "$ref": "#/components/schemas/User-limit_available_flexible"
                }
              }
            },
            "example": {
              "user": {
                "user_external_id": "d342dad2-9d59-11e9-a384-42010aa8003f"
              },
              "available": 0
            }
          }
        }
      },
      "update-user-limits-strict": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user",
                "available"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User-limit_user"
                },
                "available": {
                  "$ref": "#/components/schemas/User-limit_available"
                }
              }
            },
            "example": {
              "user": {
                "user_external_id": "d342dad2-9d59-11e9-a384-42010aa8003f"
              },
              "available": 1
            }
          }
        }
      },
      "update-promo-code-user-limits-flexible": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user",
                "available"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User-limit_user"
                },
                "available": {
                  "$ref": "#/components/schemas/Promo-code-user-limit_available_flexible"
                }
              }
            },
            "example": {
              "user": {
                "user_external_id": "d342dad2-9d59-11e9-a384-42010aa8003f"
              },
              "available": 0
            }
          }
        }
      },
      "update-promo-code-user-limits-strict": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user",
                "available"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User-limit_user"
                },
                "available": {
                  "$ref": "#/components/schemas/Promo-code-user-limit_available"
                }
              }
            },
            "example": {
              "user": {
                "user_external_id": "d342dad2-9d59-11e9-a384-42010aa8003f"
              },
              "available": 1
            }
          }
        }
      },
      "update-coupon-user-limits-flexible": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user",
                "available"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User-limit_user"
                },
                "available": {
                  "$ref": "#/components/schemas/Coupon-user-limit_available_flexible"
                }
              }
            },
            "example": {
              "user": {
                "user_external_id": "d342dad2-9d59-11e9-a384-42010aa8003f"
              },
              "available": 0
            }
          }
        }
      },
      "update-coupon-user-limits-strict": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "user",
                "available"
              ],
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User-limit_user"
                },
                "available": {
                  "$ref": "#/components/schemas/Coupon-user-limit_available"
                }
              }
            },
            "example": {
              "user": {
                "user_external_id": "d342dad2-9d59-11e9-a384-42010aa8003f"
              },
              "available": 1
            }
          }
        }
      },
      "create-value-point": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/admin_value_points-create"
            },
            "examples": {
              "default": {
                "summary": "Value point for reward chain",
                "value": {
                  "sku": "com.xsolla.reward_vp_1",
                  "name": {
                    "en": "Reward VP 1"
                  },
                  "is_enabled": true,
                  "description": {
                    "en": "Value points for reward system."
                  },
                  "long_description": {
                    "en": "Value points given to users to get new rewards in a reward chain."
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "media_list": [],
                  "order": 1
                }
              },
              "clan": {
                "summary": "Value point for clan reward chain",
                "value": {
                  "sku": "com.xsolla.clan_value_point_1",
                  "name": {
                    "en": "Clan Reward VP 1"
                  },
                  "is_enabled": true,
                  "description": {
                    "en": "Value points for clan reward system."
                  },
                  "long_description": {
                    "en": "Value points given to clans to get new rewards in a reward chain."
                  },
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "media_list": [],
                  "order": 3,
                  "is_clan": true
                }
              }
            }
          }
        }
      },
      "set-item-value-point-reward": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/item-value-point-reward-set"
            },
            "example": [
              {
                "sku": "com.xsolla.booster_1",
                "amount": 100
              },
              {
                "sku": "com.xsolla.booster_mega",
                "amount": 200
              }
            ]
          }
        }
      },
      "set-item-value-point-reward-for-patch": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/item-value-point-reward-set-for-patch"
            },
            "example": [
              {
                "sku": "booster_1",
                "amount": 100
              },
              {
                "sku": "booster_mega",
                "amount": 0
              }
            ]
          }
        }
      },
      "create-reward-chain": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/create-reward-chain-model"
                },
                {
                  "$ref": "#/components/schemas/create-clan-reward-chain-model"
                }
              ]
            },
            "examples": {
              "default": {
                "summary": "Reward chain example",
                "value": {
                  "name": {
                    "en": "Reward chain"
                  },
                  "description": {
                    "en": "Reward chain description."
                  },
                  "long_description": {
                    "en": "Reward chain long description."
                  },
                  "is_enabled": true,
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "order": 1,
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2021-04-15T18:16:00+05:00",
                  "value_point": {
                    "sku": "com.xsolla.value_point_1"
                  },
                  "steps": [
                    {
                      "name": {
                        "en": "First step of the reward chain"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                      "reward": [
                        {
                          "sku": "com.xsolla.item_1",
                          "quantity": 5
                        },
                        {
                          "sku": "com.xsolla.item_2",
                          "quantity": 1
                        }
                      ],
                      "price": {
                        "amount": 10
                      }
                    },
                    {
                      "name": {
                        "en": "Second step of the reward chain"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                      "reward": [
                        {
                          "sku": "com.xsolla.item_3",
                          "quantity": 5
                        },
                        {
                          "sku": "com.xsolla.item_4",
                          "quantity": 1
                        }
                      ],
                      "price": {
                        "amount": 15
                      }
                    }
                  ],
                  "recurrent_schedule": {
                    "interval_type": "weekly",
                    "day_of_week": 1,
                    "time": "01:00:00+08:00"
                  },
                  "attribute_conditions": [
                    {
                      "attribute": "race",
                      "operator": "eq",
                      "value": "ork",
                      "type": "string",
                      "can_be_missing": false
                    }
                  ],
                  "is_always_visible": true
                }
              },
              "clan": {
                "summary": "Clan reward chain example",
                "value": {
                  "name": {
                    "en": "Clan reward chain"
                  },
                  "description": {
                    "en": "Clan reward chain description."
                  },
                  "long_description": {
                    "en": "Clan reward chain long description."
                  },
                  "is_enabled": true,
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "order": 1,
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2021-04-15T18:16:00+05:00",
                  "value_point": {
                    "sku": "com.xsolla.clan_value_point_1"
                  },
                  "steps": [
                    {
                      "name": {
                        "en": "First step of the reward chain"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                      "reward": [
                        {
                          "sku": "com.xsolla.item_1",
                          "quantity": 5
                        },
                        {
                          "sku": "com.xsolla.item_2",
                          "quantity": 1
                        }
                      ],
                      "price": {
                        "amount": 10
                      }
                    },
                    {
                      "name": {
                        "en": "Second step of the reward chain"
                      },
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                      "reward": [
                        {
                          "sku": "com.xsolla.item_3",
                          "quantity": 5
                        },
                        {
                          "sku": "com.xsolla.item_4",
                          "quantity": 1
                        }
                      ],
                      "price": {
                        "amount": 15
                      }
                    }
                  ],
                  "recurrent_schedule": {
                    "interval_type": "weekly",
                    "day_of_week": 1,
                    "time": "01:00:00+08:00"
                  },
                  "popup_header": {
                    "en": "How to unlock rewards"
                  },
                  "popup_instruction": {
                    "en": "You must be a clan member to get clan rewards. You join a clan when a clan member invites you to the clan, and you accept the invite. You can also create your own clan."
                  },
                  "popup_image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "clan_type": "guild"
                }
              }
            }
          }
        }
      },
      "update-reward-chain": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/update-reward-chain-model"
                },
                {
                  "$ref": "#/components/schemas/update-clan-reward-chain-model"
                }
              ]
            },
            "examples": {
              "default": {
                "summary": "Reward chain example",
                "value": {
                  "name": {
                    "en": "Reward chain"
                  },
                  "description": {
                    "en": "Reward chain description."
                  },
                  "long_description": {
                    "en": "Reward chain long description."
                  },
                  "is_enabled": true,
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "order": 1,
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2021-04-15T18:16:00+05:00",
                  "steps": [
                    {
                      "name": {
                        "en": "First step of the reward chain"
                      },
                      "step_id": 1,
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                      "reward": [
                        {
                          "sku": "com.xsolla.item_1",
                          "quantity": 5
                        },
                        {
                          "sku": "com.xsolla.item_2",
                          "quantity": 1
                        }
                      ],
                      "price": {
                        "amount": 10
                      }
                    },
                    {
                      "name": {
                        "en": "Second step of the reward chain"
                      },
                      "step_id": 2,
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                      "reward": [
                        {
                          "sku": "com.xsolla.item_3",
                          "quantity": 5
                        },
                        {
                          "sku": "com.xsolla.item_4",
                          "quantity": 1
                        }
                      ],
                      "price": {
                        "amount": 15
                      }
                    }
                  ],
                  "recurrent_schedule": {
                    "interval_type": "weekly",
                    "day_of_week": 1,
                    "time": "01:00:00+08:00"
                  },
                  "attribute_conditions": [
                    {
                      "attribute": "race",
                      "operator": "eq",
                      "value": "ork",
                      "type": "string",
                      "can_be_missing": false
                    }
                  ],
                  "is_always_visible": true
                }
              },
              "clan": {
                "summary": "Clan reward chain example",
                "value": {
                  "name": {
                    "en": "Clan reward chain"
                  },
                  "description": {
                    "en": "Clan reward chain description."
                  },
                  "long_description": {
                    "en": "Clan reward chain long description."
                  },
                  "is_enabled": true,
                  "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "order": 1,
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2021-04-15T18:16:00+05:00",
                  "steps": [
                    {
                      "name": {
                        "en": "First step of the reward chain"
                      },
                      "step_id": 1,
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                      "reward": [
                        {
                          "sku": "com.xsolla.item_1",
                          "quantity": 5
                        },
                        {
                          "sku": "com.xsolla.item_2",
                          "quantity": 1
                        }
                      ],
                      "price": {
                        "amount": 10
                      }
                    },
                    {
                      "name": {
                        "en": "Second step of the reward chain"
                      },
                      "step_id": 2,
                      "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                      "reward": [
                        {
                          "sku": "com.xsolla.item_3",
                          "quantity": 5
                        },
                        {
                          "sku": "com.xsolla.item_4",
                          "quantity": 1
                        }
                      ],
                      "price": {
                        "amount": 15
                      }
                    }
                  ],
                  "recurrent_schedule": {
                    "interval_type": "weekly",
                    "day_of_week": 1,
                    "time": "01:00:00+08:00"
                  },
                  "popup_header": {
                    "en": "How to unlock rewards"
                  },
                  "popup_instruction": {
                    "en": "You should be a clan member to get clan rewards. You join a clan when a clan member invited you to the clan, and you accepted the invite. You can create your own clan."
                  },
                  "popup_image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                  "clan_type": "guild"
                }
              }
            }
          }
        }
      },
      "create-offer-chain": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/create-offer-chain-model"
            },
            "examples": {
              "default": {
                "summary": "Offer chain example",
                "value": {
                  "name": {
                    "en": "New offer chain",
                    "ru": "Новая цепочка товаров"
                  },
                  "description": {
                    "en": "New offer chain short description"
                  },
                  "order": 4,
                  "date_start": "2023-04-15T18:16:00+05:00",
                  "date_end": null,
                  "recurrent_schedule": null,
                  "is_enabled": true,
                  "steps": [
                    {
                      "step_number": 1,
                      "is_free": false,
                      "items": [
                        {
                          "sku": "vg_enabled_shown_in_store_1",
                          "quantity": 2
                        }
                      ]
                    },
                    {
                      "step_number": 2,
                      "is_free": false,
                      "items": [
                        {
                          "sku": "bundle_enabled_shown_in_store_with_2_enabled_shown_in_store_vg",
                          "quantity": 2
                        }
                      ]
                    },
                    {
                      "step_number": 3,
                      "is_free": false,
                      "items": [
                        {
                          "sku": "vcp_enabled_shown_in_store_1_of_10_vc_enabled_shown_in_store_1",
                          "quantity": 2
                        }
                      ]
                    },
                    {
                      "step_number": 4,
                      "is_free": true,
                      "items": [
                        {
                          "sku": "vg_enabled_shown_in_store_1",
                          "quantity": 1
                        }
                      ]
                    },
                    {
                      "step_number": 5,
                      "is_free": true,
                      "items": [
                        {
                          "sku": "bundle_enabled_shown_in_store_with_2_enabled_shown_in_store_vg",
                          "quantity": 1
                        }
                      ]
                    },
                    {
                      "step_number": 6,
                      "is_free": true,
                      "items": [
                        {
                          "sku": "vcp_enabled_shown_in_store_1_of_10_vc_enabled_shown_in_store_1",
                          "quantity": 1
                        }
                      ]
                    }
                  ]
                }
              },
              "recurrent": {
                "summary": "Recurrent offer chain example",
                "value": {
                  "name": {
                    "en": "New offer chain",
                    "ru": "Новая цепочка товаров"
                  },
                  "description": {
                    "en": "New offer chain short description"
                  },
                  "order": 1,
                  "date_start": "2023-04-15T18:16:00+05:00",
                  "date_end": "2025-04-25T18:16:00+05:00",
                  "is_enabled": false,
                  "recurrent_schedule": {
                    "interval_type": "weekly",
                    "day_of_week": 3,
                    "time": "07:00:00+03:00"
                  },
                  "steps": [
                    {
                      "step_number": 1,
                      "is_free": false,
                      "items": [
                        {
                          "sku": "vg_enabled_shown_in_store_1",
                          "quantity": 2
                        }
                      ]
                    },
                    {
                      "step_number": 2,
                      "is_free": true,
                      "items": [
                        {
                          "sku": "vg_enabled_shown_in_store_2",
                          "quantity": 3
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "update-offer-chain": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/modify-offer-chain-model"
            },
            "examples": {
              "default": {
                "summary": "Default example",
                "value": {
                  "name": {
                    "en": "Updated offer chain",
                    "ru": "Обновленная цепочка товаров"
                  },
                  "description": {
                    "en": "Updated offer chain description"
                  },
                  "order": 4,
                  "date_start": "2023-04-15T18:16:00+05:00",
                  "date_end": null,
                  "is_enabled": true,
                  "steps": [
                    {
                      "step_number": 1,
                      "is_free": false,
                      "items": [
                        {
                          "sku": "vg_enabled_shown_in_store_1",
                          "quantity": 1
                        }
                      ]
                    },
                    {
                      "step_number": 2,
                      "is_free": false,
                      "items": [
                        {
                          "sku": "vg_enabled_shown_in_store_2",
                          "quantity": 1
                        }
                      ]
                    },
                    {
                      "step_id": 10,
                      "step_number": 3,
                      "is_free": true,
                      "items": [
                        {
                          "sku": "vg_not_shown_in_store",
                          "quantity": 1
                        }
                      ]
                    },
                    {
                      "step_id": 8,
                      "step_number": 4,
                      "is_free": false,
                      "items": [
                        {
                          "sku": "bundle_enabled_shown_in_store_with_2_enabled_shown_in_store_vg",
                          "quantity": 1
                        }
                      ]
                    },
                    {
                      "step_number": 5,
                      "is_free": true,
                      "items": [
                        {
                          "sku": "vcp_enabled_shown_in_store_1_of_10_vc_enabled_shown_in_store_1",
                          "quantity": 1
                        }
                      ]
                    }
                  ]
                }
              },
              "recurrent": {
                "summary": "Recurrent offer chain example",
                "value": {
                  "id": 1,
                  "name": {
                    "en": "Updated offer chain",
                    "ru": "Обновленная цепочка товаров"
                  },
                  "description": {
                    "en": "Updated offer chain description"
                  },
                  "order": 4,
                  "date_start": "2023-04-15T17:16:00+05:00",
                  "date_end": "2025-04-25T19:16:00+05:00",
                  "is_enabled": true,
                  "recurrent_schedule": {
                    "interval_type": "monthly",
                    "day_of_month": 2,
                    "time": "03:00:00+08:00"
                  },
                  "steps": [
                    {
                      "step_id": 1,
                      "step_number": 1,
                      "is_free": true,
                      "items": [
                        {
                          "sku": "vg_enabled_shown_in_store_2",
                          "quantity": 1
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Promotions_unique_catalog_offer-create": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "external_id",
                "name"
              ],
              "properties": {
                "external_id": {
                  "$ref": "#/components/schemas/Promotions_coupon-external_id"
                },
                "date_start": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_start"
                },
                "date_end": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_end"
                },
                "name": {
                  "$ref": "#/components/schemas/Promotions_coupon_name"
                },
                "items": {
                  "type": "array",
                  "$ref": "#/components/schemas/Promotions_unique_catalog_offer_items"
                },
                "redeem_user_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
                },
                "redeem_code_limit": {
                  "$ref": "#/components/schemas/Promotions_redeem_code_limit"
                },
                "redeem_total_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
                }
              }
            },
            "examples": {
              "simple": {
                "value": {
                  "external_id": "offer_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Offer",
                    "de-DE": "Neujahrsangebot"
                  },
                  "items": [
                    "elven_sword",
                    "elven_boots"
                  ]
                }
              },
              "limited": {
                "value": {
                  "external_id": "offer_external_id",
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Offer",
                    "de-DE": "Neujahrsangebot"
                  },
                  "items": [
                    "elven_sword",
                    "elven_boots"
                  ],
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1
                }
              }
            }
          }
        }
      },
      "Promotions_unique_catalog_offer-update": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "date_start": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_start"
                },
                "date_end": {
                  "$ref": "#/components/schemas/Promotions_coupon_date_end"
                },
                "name": {
                  "$ref": "#/components/schemas/Promotions_coupon_name"
                },
                "items": {
                  "$ref": "#/components/schemas/Promotions_unique_catalog_offer_items"
                },
                "redeem_total_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_total_limit"
                },
                "redeem_user_limit": {
                  "$ref": "#/components/schemas/Promotions_coupon-redeem_user_limit"
                },
                "redeem_code_limit": {
                  "$ref": "#/components/schemas/Promotions_redeem_code_limit"
                }
              }
            },
            "examples": {
              "simple": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Offer",
                    "de-DE": "Neujahrsangebot"
                  },
                  "items": [
                    "elven_sword",
                    "elven_boots"
                  ]
                }
              },
              "limited": {
                "value": {
                  "date_start": "2020-04-15T18:16:00+05:00",
                  "date_end": "2020-04-25T18:16:00+05:00",
                  "name": {
                    "en-US": "New Year Offer",
                    "de-DE": "Neujahrsangebot"
                  },
                  "items": [
                    "elven_sword",
                    "elven_boots"
                  ],
                  "redeem_total_limit": 100,
                  "redeem_user_limit": 1,
                  "redeem_code_limit": 1
                }
              }
            }
          }
        }
      },
      "connector-import-items-body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "connector_external_id",
                "file_url"
              ],
              "properties": {
                "connector_external_id": {
                  "type": "string",
                  "description": "A fixed value that specifies the type of operation for importing items.",
                  "enum": [
                    "import_items"
                  ]
                },
                "file_url": {
                  "type": "string",
                  "description": "The URL of a file with data in JSON format. The file should be hosted on a storage service with public access. You can download the file template in Publisher Account in the [Store > Virtual Items > Catalog Management > Import Items (JSON)](https://publisher.xsolla.com/0/projects/0/storefront/import-export/import-items) section.",
                  "example": "https://my-bucket.s3.amazonaws.com/items.json"
                },
                "mode": {
                  "type": "string",
                  "description": "Import actions:",
                  "enum": [
                    "create",
                    "create_and_update",
                    "sync"
                  ],
                  "x-enumDescriptions": {
                    "create": "Add new items.",
                    "create_and_update": "Add new items and update existing ones.",
                    "sync": "Add new, update existing, and disable missing items."
                  },
                  "default": "create_and_update"
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "422-external-id-required": {
        "value": {
          "statusCode": 422,
          "errorCode": 9901,
          "errorMessage": "[0401-1102]: Unprocessable Entity. The property `external_id` is required",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "422-external-id-invalid": {
        "value": {
          "statusCode": 422,
          "errorCode": 9901,
          "errorMessage": "[0401-1102]: Unprocessable Entity. Does not match the regex pattern ^[a-zA-Z0-9-_]+$",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "422-external-id-duplicate": {
        "value": {
          "statusCode": 422,
          "errorCode": 9907,
          "errorMessage": "[0401-9907]: The attribute value already exists.",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "422-value-invalid": {
        "value": {
          "statusCode": 422,
          "errorCode": 9901,
          "errorMessage": "[0401-1102]: Unprocessable Entity. The property `value` is required",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "422-value-properties-required": {
        "value": {
          "statusCode": 422,
          "errorCode": 9901,
          "errorMessage": "[0401-1102]: Unprocessable Entity. Array value found, but an object is required",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "422-value-limit-exceeded": {
        "value": {
          "statusCode": 422,
          "errorCode": 9908,
          "errorMessage": "[0401-9908]: You reached the maximum number of values for the attribute.",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "404-attribute-not-found": {
        "value": {
          "statusCode": 404,
          "errorCode": 9901,
          "errorMessage": "[0401-9901]: Attribute not found.",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "404-attribute-value-not-found": {
        "value": {
          "statusCode": 404,
          "errorCode": 9906,
          "errorMessage": "[0401-9906]: Attribute value not found.",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "401-complex-auth-header-not-found": {
        "value": {
          "statusCode": 401,
          "errorCode": 1501,
          "errorMessage": "[0401-1501]: Authorization failed: Authorization header not sent",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "401-complex-auth-incorrect-credentials": {
        "value": {
          "statusCode": 401,
          "errorCode": 1013,
          "errorMessage": "[0401-1013]: Token not found.",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "422-property-sku-is-required": {
        "value": {
          "statusCode": 422,
          "errorCode": 1102,
          "errorMessage": "[0401-1102]: Unprocessable Entity. The property `sku` is required",
          "transactionId": "da145238620011eb8e24fe6913ff226a"
        }
      },
      "422-numbers-of-attribute-values-per-item-exceeded": {
        "value": {
          "statusCode": 422,
          "errorCode": 9909,
          "errorMessage": "[0401-9909]: The number of attribute values you specified for the item exceeds the required limit. Try to specify fewer attribute values.",
          "transactionId": "da145238620011eb8e24fe6913ff226a"
        }
      },
      "422-numbers-of-attributes-per-item-exceeded": {
        "value": {
          "statusCode": 422,
          "errorCode": 9908,
          "errorMessage": "[0401-9908]: The number of attributes you specified for the item exceeds the required limit. Try to specify fewer attributes.",
          "transactionId": "da145238620011eb8e24fe6913ff226a"
        }
      },
      "422-custom-attributes-size-exceeded": {
        "value": {
          "statusCode": 422,
          "errorCode": 1102,
          "errorMessage": "[0401-1102]: Unprocessable Entity",
          "transactionId": "da145238620011eb8e24fe6913ff226a",
          "errorMessageExtended": [
            {
              "property": "custom_attributes",
              "message": "JSON can’t exceed 500 characters."
            }
          ]
        }
      },
      "Bundles_200-get-bundle-list": {
        "value": {
          "has_more": true,
          "items": [
            {
              "item_id": 61031,
              "sku": "com.xsolla.kg_1",
              "name": "kg_10.00_bundle",
              "type": "bundle",
              "description": "pricePoint_44056_1",
              "image_url": null,
              "long_description": null,
              "attributes": [
                {
                  "external_id": "genre",
                  "name": "Genre",
                  "values": [
                    {
                      "external_id": "genre_e3364991f92e751689a68b96598a5a5a84010b85",
                      "value": "Casual"
                    },
                    {
                      "external_id": "genre_eba07bfd0f982940773cba3744d97264dd58acd7",
                      "value": "Strategy"
                    },
                    {
                      "external_id": "genre_b8d0c6d8f0524c2b2d79ebb93aa3cd0e8b5199a8",
                      "value": "Mobile"
                    }
                  ]
                }
              ],
              "is_free": false,
              "order": 999,
              "groups": [],
              "price": {
                "amount": "9.99",
                "currency": "USD",
                "amount_without_discount": "9.99"
              },
              "total_content_price": {
                "amount": "10.99",
                "currency": "USD",
                "amount_without_discount": "10.99"
              },
              "media_list": [],
              "virtual_prices": [],
              "can_be_bought": true,
              "bundle_type": "standard",
              "promotions": [],
              "limits": {
                "per_user": {
                  "total": 5,
                  "available": 3,
                  "recurrent_schedule": {
                    "interval_type": "weekly",
                    "reset_next_date": 1746057600
                  }
                }
              },
              "periods": [
                {
                  "date_from": "2020-08-11T10:00:00+03:00",
                  "date_until": "2020-08-11T20:00:00+03:00"
                }
              ],
              "custom_attributes": {
                "purchased": 0,
                "attr": "value"
              },
              "content": [
                {
                  "sku": "com.xsolla.big_rocket_1",
                  "name": "Big Rocket",
                  "description": "Big Rocket - short description.",
                  "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
                  "type": "virtual_currency",
                  "quantity": 100,
                  "virtual_item_type": "non_consumable",
                  "attributes": [
                    {
                      "external_id": "size",
                      "name": "Size",
                      "values": [
                        {
                          "external_id": "size_e3364991f92e751689a68b96598a5a5a84010b85",
                          "value": "Large"
                        }
                      ]
                    }
                  ],
                  "is_free": false,
                  "groups": [],
                  "price": {
                    "amount": "10.99",
                    "currency": "USD",
                    "amount_without_discount": "10.99"
                  },
                  "virtual_prices": [],
                  "limits": {
                    "per_user": {
                      "total": 5,
                      "available": 3,
                      "recurrent_schedule": {
                        "interval_type": "weekly",
                        "reset_next_date": 1746057600
                      }
                    }
                  }
                }
              ],
              "vp_rewards": [
                {
                  "item_id": 175232,
                  "sku": "com.xsolla.value_point_1",
                  "amount": 130,
                  "name": "Value point",
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
                },
                {
                  "item_id": 186321,
                  "sku": "com.xsolla.clan_value_point_1",
                  "amount": 50,
                  "name": "Clan Reward VP 1",
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                  "is_clan": true
                }
              ]
            }
          ]
        }
      },
      "Bundles_200-get-bundle": {
        "value": {
          "item_id": 610316,
          "sku": "com.xsolla.kg_1",
          "name": "kg_10.00_bundle",
          "type": "bundle",
          "description": "pricePoint_44056_1.",
          "image_url": null,
          "long_description": null,
          "attributes": [],
          "is_free": false,
          "order": 999,
          "groups": [],
          "price": {
            "amount": "9.99",
            "currency": "USD",
            "amount_without_discount": "9.99"
          },
          "total_content_price": {
            "amount": "10.99",
            "currency": "USD",
            "amount_without_discount": "10.99"
          },
          "media_list": [],
          "virtual_prices": [],
          "promotions": [],
          "limits": {
            "per_user": {
              "total": 5,
              "available": 3,
              "recurrent_schedule": {
                "interval_type": "weekly",
                "reset_next_date": 1746057600
              }
            }
          },
          "can_be_bought": true,
          "bundle_type": "standard",
          "periods": [
            {
              "date_from": "2020-08-11T10:00:00+03:00",
              "date_until": "2020-08-11T20:00:00+03:00"
            }
          ],
          "custom_attributes": {
            "purchased": 0,
            "attr": "value"
          },
          "content": [
            {
              "description": "Big Rocket - short description.",
              "image_url": "https://popmedia.blob.core.windows.net/popyourself/male/outfit/male_armor_white_a-01.png",
              "sku": "com.xsolla.big_rocket_1",
              "name": "Big Rocket",
              "type": "virtual_currency",
              "quantity": 100,
              "attributes": [],
              "is_free": false,
              "groups": [],
              "price": {
                "amount": "10.99",
                "currency": "USD",
                "amount_without_discount": "10.99"
              },
              "virtual_prices": [],
              "limits": {
                "per_user": {
                  "total": 5,
                  "available": 3,
                  "recurrent_schedule": {
                    "interval_type": "weekly",
                    "reset_next_date": 1746057600
                  }
                }
              }
            }
          ],
          "vp_rewards": [
            {
              "item_id": 175232,
              "sku": "com.xsolla.value_point_1",
              "amount": 130,
              "name": "Value point",
              "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg"
            },
            {
              "item_id": 186321,
              "sku": "com.xsolla.clan_value_point_1",
              "amount": 50,
              "name": "Clan Reward VP 1",
              "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
              "is_clan": true
            }
          ]
        }
      },
      "404-item-by-sku-not-found": {
        "value": {
          "statusCode": 404,
          "errorCode": 4001,
          "errorMessage": "[0401-4001]: Item with sku = 'item_sku' not found",
          "transactionId": "transaction id"
        }
      },
      "404-coupon-not-found": {
        "value": {
          "statusCode": 404,
          "errorCode": 9802,
          "errorMessage": "[0401-9802]: Coupon not found",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x"
        }
      },
      "404-game-code-not-found": {
        "value": {
          "statusCode": 404,
          "errorCode": 4603,
          "errorMessage": "[0401-4603]: Game code not found.",
          "transactionId": "transaction id"
        }
      },
      "422-drm-is-not-drm-free": {
        "value": {
          "statusCode": 422,
          "errorCode": 5103,
          "errorMessage": "[0401-5103]: Selected drm is not drmfree.",
          "transactionId": "transaction id"
        }
      },
      "422-user-already-has-entitlement": {
        "value": {
          "statusCode": 422,
          "errorCode": 5101,
          "errorMessage": "[0401-5101]: User already has entitlement.",
          "transactionId": "transaction id"
        }
      },
      "Promotions_200-admin-promotions": {
        "value": {
          "promotions": [
            {
              "id": 1,
              "date_start": "2020-01-01T00:00:00+03:00",
              "date_end": null,
              "name": {
                "en": "promotion_1"
              },
              "type": "item_bonus",
              "is_enabled": true,
              "bonus": [
                {
                  "item": {
                    "description": null,
                    "image_url": null,
                    "sku": "com.xsolla.diamonds_pack_1",
                    "name": {
                      "en": "Diamonds pack",
                      "ru": "Пак кристаллов"
                    },
                    "type": "bundle",
                    "bundle_type": "virtual_currency_package",
                    "content": []
                  },
                  "quantity": 1
                }
              ],
              "condition": [
                {
                  "item": {
                    "description": null,
                    "image_url": null,
                    "sku": "com.xsolla.virtual_good_bonus_2",
                    "name": {
                      "en": "VG name",
                      "ru": "Название VG"
                    },
                    "type": "virtual_good",
                    "inventory_options": {
                      "consumable": {
                        "usages_count": 1
                      },
                      "expiration_period": null
                    }
                  }
                }
              ],
              "discount": null
            },
            {
              "id": 2,
              "date_start": "2020-01-01T00:00:00+03:00",
              "date_end": "2030-01-01T00:00:00+03:00",
              "name": {
                "en": "promotion_2"
              },
              "type": "item_discount",
              "is_enabled": false,
              "bonus": [],
              "condition": [
                {
                  "item": {
                    "description": null,
                    "image_url": null,
                    "sku": "com.xsolla.virtual_good_bonus_2",
                    "name": {
                      "en": "VG name",
                      "ru": "Название VG"
                    },
                    "type": "virtual_good",
                    "inventory_options": {
                      "consumable": {
                        "usages_count": 1
                      },
                      "expiration_period": null
                    }
                  }
                }
              ],
              "discount": {
                "percent": "10.99"
              }
            },
            {
              "id": 3,
              "date_start": "2022-01-01T00:00:00+03:00",
              "date_end": "2030-01-01T00:00:00+03:00",
              "name": {
                "en": "promotion_3"
              },
              "type": "coupon_bonus",
              "is_enabled": true,
              "bonus": [
                {
                  "item": {
                    "description": null,
                    "image_url": null,
                    "sku": "com.xsolla.virtual_good_bonus_2",
                    "name": {
                      "en": "VG name",
                      "ru": "Название VG"
                    },
                    "type": "virtual_good",
                    "inventory_options": {
                      "consumable": {
                        "usages_count": 1
                      },
                      "expiration_period": null
                    }
                  },
                  "quantity": 2
                }
              ],
              "condition": [
                {
                  "item": {
                    "external_id": "coupon_2",
                    "name": {
                      "en": "Coupon name",
                      "ru": "Название купона"
                    },
                    "is_enabled": true,
                    "redeem_total_limit": null,
                    "redeem_user_limit": null,
                    "redeem_code_limit": 1
                  }
                }
              ],
              "discount": null
            },
            {
              "id": 4,
              "date_start": "2018-01-01T00:00:00+03:00",
              "date_end": "2031-01-01T00:00:00+03:00",
              "name": {
                "en": "promotion_4"
              },
              "type": "promocode_bonus_discount",
              "is_enabled": false,
              "bonus": [
                {
                  "item": {
                    "description": null,
                    "image_url": null,
                    "sku": "com.xsolla.virtual_good_bonus_2",
                    "name": {
                      "en": "VG name",
                      "ru": "Название VG"
                    },
                    "type": "virtual_good",
                    "inventory_options": {
                      "consumable": {
                        "usages_count": 1
                      },
                      "expiration_period": null
                    }
                  },
                  "quantity": 2
                }
              ],
              "condition": [
                {
                  "item": {
                    "external_id": "coupon_3",
                    "name": {
                      "en": "Coupon name",
                      "ru": "Название купона"
                    },
                    "is_enabled": true,
                    "redeem_total_limit": null,
                    "redeem_user_limit": null,
                    "redeem_code_limit": 1
                  }
                }
              ],
              "discount": {
                "percent": "12.99"
              }
            },
            {
              "id": 5,
              "date_start": "2020-01-01T00:00:00+03:00",
              "date_end": null,
              "name": {
                "en": "promotion_5"
              },
              "type": "cart_bonus",
              "is_enabled": true,
              "bonus": [
                {
                  "item": {
                    "description": null,
                    "image_url": null,
                    "sku": "com.xsolla.virtual_good_bonus_4",
                    "name": {
                      "en": "VG name",
                      "ru": "Название VG"
                    },
                    "type": "virtual_good"
                  },
                  "quantity": 1
                }
              ],
              "condition": null,
              "discount": null
            }
          ],
          "total_promotions_count": 5,
          "active_promotions_count": 3,
          "inactive_promotions_count": 2
        }
      },
      "422-activate-deactivate-promotion": {
        "value": {
          "statusCode": 422,
          "errorCode": 9505,
          "errorMessage": "[0401-9505]: Error was occurred while promotion was being updated",
          "transactionId": "da145238620011eb8e24fe6913ff226a"
        }
      },
      "Promotions_200-get-coupon-rewards": {
        "value": {
          "bonus": [
            {
              "item": {
                "sku": "com.xsolla.game_1",
                "name": {
                  "en": "Game name"
                },
                "type": "unit",
                "description": "Game description",
                "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                "unit_items": [
                  {
                    "sku": "com.xsolla.game_key_01",
                    "name": "Game name",
                    "type": "game_key",
                    "is_free": false,
                    "drm_name": "Steam",
                    "drm_sku": "steam_key_01"
                  },
                  {
                    "sku": "game_key_02",
                    "name": "Game name",
                    "type": "game_key",
                    "drm_name": "Origin",
                    "drm_sku": "origin_key_02"
                  }
                ]
              },
              "quantity": 1
            },
            {
              "item": {
                "sku": "com.xsolla.game_2",
                "name": {
                  "en": "Game name"
                },
                "type": "unit",
                "description": "Game description",
                "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                "unit_items": [
                  {
                    "sku": "com.xsolla.game_key_01",
                    "type": "game_key",
                    "name": "Game name",
                    "drm_name": "Steam",
                    "drm_sku": "steam_key_01"
                  }
                ]
              },
              "quantity": 2
            }
          ],
          "discount": {
            "percent": "10.00"
          },
          "is_selectable": true
        }
      },
      "Promotions_200-admin-coupons": {
        "value": {
          "items": [
            {
              "external_id": "coupon_44056_1",
              "date_start": "2020-04-15T18:16:00+05:00",
              "date_end": "2020-04-25T18:16:00+05:00",
              "name": {
                "en-US": "New Year Bonus",
                "de-DE": "Neujahrsbonus"
              },
              "is_enabled": true,
              "bonus": [
                {
                  "sku": "com.xsolla.elven_sword_1",
                  "quantity": 1
                },
                {
                  "sku": "com.xsolla.elven_shield_1",
                  "quantity": 2
                },
                {
                  "sku": "com.xsolla.elven_gloves_1",
                  "quantity": 2
                }
              ],
              "redeem_user_limit": null,
              "redeem_total_limit": null,
              "redeem_code_limit": 1,
              "total_limit_state": null
            },
            {
              "external_id": "summer2021",
              "date_start": "2020-04-15T18:16:00+05:00",
              "date_end": "2020-04-25T18:16:00+05:00",
              "name": {
                "en-US": "Coupon name",
                "de-DE": "Gutscheintitel"
              },
              "is_enabled": true,
              "bonus": [
                {
                  "sku": "com.xsolla.diamonds_1",
                  "quantity": 100
                }
              ],
              "redeem_user_limit": null,
              "redeem_total_limit": 100,
              "redeem_code_limit": 1,
              "total_limit_state": {
                "available": 50,
                "reserved": 10,
                "used": 40
              }
            }
          ],
          "total_promotions_count": 2,
          "active_promotions_count": 2,
          "inactive_promotions_count": 0
        }
      },
      "Promotions_200-coupon-code-list": {
        "value": {
          "codes": [
            {
              "code": "CODE001"
            },
            {
              "code": "CODE002"
            },
            {
              "code": "CODE003"
            },
            {
              "code": "CODE004"
            },
            {
              "code": "CODE005"
            }
          ],
          "total_count": 5
        }
      },
      "Promotions_200-get-promocode-rewards": {
        "value": {
          "bonus": [
            {
              "item": {
                "sku": "com.xsolla.game_1",
                "name": "Game name",
                "type": "unit",
                "description": "Game description",
                "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                "unit_items": [
                  {
                    "sku": "com.xsolla.game_key_01",
                    "name": "Game name",
                    "type": "game_key",
                    "is_free": false,
                    "drm_name": "Steam",
                    "drm_sku": "steam_key_01"
                  },
                  {
                    "sku": "com.xsolla.game_key_02",
                    "name": "Game name",
                    "type": "game_key",
                    "drm_name": "Origin",
                    "drm_sku": "origin_key_02"
                  }
                ]
              },
              "quantity": 1
            },
            {
              "item": {
                "sku": "com.xsolla.game_2",
                "name": "Game name",
                "type": "unit",
                "description": "Game description",
                "image_url": "https://cdn.xsolla.net/img/misc/images/b79342cdf24f0f8557b63c87e8326e62.png",
                "unit_items": [
                  {
                    "sku": "com.xsolla.game_key_01",
                    "type": "game_key",
                    "name": "Game name",
                    "drm_name": "Steam",
                    "drm_sku": "steam_key_01"
                  }
                ]
              },
              "quantity": 2
            }
          ],
          "discount": {
            "percent": "10.00"
          },
          "is_selectable": true,
          "discounted_items": [
            {
              "sku": "com.xsolla.elven_sword_1",
              "discount": {
                "percent": "10.00"
              }
            }
          ]
        }
      },
      "Promotions_200-admin-promocodes": {
        "value": {
          "items": [
            {
              "external_id": "promocode_100_crystals",
              "date_start": "2020-04-15T18:16:00+05:00",
              "date_end": "2020-04-25T18:16:00+05:00",
              "name": {
                "en-US": "New Year Bonus",
                "de-DE": "Neujahrsbonus"
              },
              "is_enabled": true,
              "bonus": [
                {
                  "sku": "com.xsolla.elven_sword_1",
                  "quantity": 1
                },
                {
                  "sku": "com.xsolla.elven_shield_1",
                  "quantity": 2
                },
                {
                  "sku": "com.xsolla.elven_gloves_1",
                  "quantity": 2
                }
              ],
              "redeem_user_limit": null,
              "redeem_total_limit": null,
              "redeem_code_limit": 1,
              "total_limit_state": null,
              "discount": null,
              "discounted_items": null
            },
            {
              "external_id": "summer2021",
              "date_start": "2020-04-15T18:16:00+05:00",
              "date_end": "2020-04-25T18:16:00+05:00",
              "name": {
                "en-US": "Coupon name",
                "de-DE": "Gutscheintitel"
              },
              "is_enabled": true,
              "bonus": [
                {
                  "sku": "com.xsolla.diamonds_1",
                  "quantity": 100
                }
              ],
              "redeem_user_limit": null,
              "redeem_total_limit": 100,
              "redeem_code_limit": null,
              "total_limit_state": {
                "available": 50,
                "reserved": 10,
                "used": 40
              },
              "discount": {
                "percent": "10.99"
              },
              "discounted_items": [
                {
                  "sku": "com.xsolla.elven_sword_1",
                  "discount": {
                    "percent": "10.00"
                  }
                }
              ],
              "price_conditions": [
                {
                  "operator": "ge",
                  "value": "10.0000"
                },
                {
                  "operator": "le",
                  "value": "50.0000"
                }
              ],
              "excluded_promotions": [
                23,
                45
              ]
            }
          ],
          "total_promotions_count": 2,
          "active_promotions_count": 2,
          "inactive_promotions_count": 0
        }
      },
      "404-user-not-found": {
        "value": {
          "statusCode": 404,
          "errorCode": 5008,
          "errorMessage": "[0401-5008]: Could not find User",
          "transactionId": "transaction id"
        }
      },
      "422-user_external_id_invalid": {
        "value": {
          "statusCode": 404,
          "errorCode": 1102,
          "errorMessage": "[0401-1102]: Unprocessable Entity",
          "transactionId": "transaction id",
          "errorMessageExtended": [
            {
              "property": "user_external_id",
              "message": "Must be at least 1 characters long"
            },
            {
              "property": "user_external_id",
              "message": "Does not match the regex pattern ^\\S+$"
            }
          ]
        }
      },
      "422-item-without-user-limit": {
        "value": {
          "statusCode": 422,
          "errorCode": 4508,
          "errorMessage": "[0401-4508]: Item does not have configured user limits.",
          "transactionId": "transaction id"
        }
      },
      "422-item-out-of-range-available-user-limit": {
        "value": {
          "statusCode": 422,
          "errorCode": 4510,
          "errorMessage": "[0401-4510]: Available item limit is out of range.",
          "transactionId": "transaction id"
        }
      },
      "404-promotion-by-id-not-found": {
        "value": {
          "statusCode": 404,
          "errorCode": 1101,
          "errorMessage": "[0401-1101]: Promotion not found",
          "transactionId": "transaction id"
        }
      },
      "422-promotion-without-user-limit": {
        "value": {
          "statusCode": 422,
          "errorCode": 4509,
          "errorMessage": "[0401-4509]: Promotion does not have configured user limits.",
          "transactionId": "transaction id"
        }
      },
      "422-promotion-out-of-range-available-user-limit": {
        "value": {
          "statusCode": 422,
          "errorCode": 4511,
          "errorMessage": "[0401-4511]: Available promotion limit is out of range.",
          "transactionId": "transaction id"
        }
      },
      "Promotions_422-invalid-coupon": {
        "value": {
          "statusCode": 422,
          "errorCode": 1102,
          "errorMessage": "[0401-1102]: Unprocessable Entity. The property `external_id` is required"
        }
      },
      "422-promo-code-out-of-range-available-user-limit": {
        "value": {
          "statusCode": 422,
          "errorCode": 4511,
          "errorMessage": "[0401-4511]: Available promo code limit is out of range.",
          "transactionId": "transaction id"
        }
      },
      "422-coupon-out-of-range-available-user-limit": {
        "value": {
          "statusCode": 422,
          "errorCode": 4511,
          "errorMessage": "[0401-4511]: Available coupon limit is out of range.",
          "transactionId": "transaction id"
        }
      },
      "code-limit": {
        "value": {
          "promotion_id": 1,
          "items": [
            {
              "code": "WINTER2023",
              "per_code": {
                "total": 10,
                "available": 7,
                "used": 2,
                "reserved": 1
              }
            },
            {
              "code": "SUMMER2023",
              "per_code": {
                "total": 5,
                "available": 0,
                "used": 3,
                "reserved": 2
              }
            }
          ],
          "total_items_count": 2,
          "has_more": false
        }
      },
      "200-value-points-reward-chain_admin_get-value-point-list": {
        "value": {
          "items": [
            {
              "sku": "com.xsolla.reward_vp_1",
              "name": {
                "en": "Reward VP 1"
              },
              "type": "value_point",
              "is_enabled": true,
              "description": {
                "en": "Points for reward system"
              },
              "long_description": {
                "en": "Points given to users to get new rewards in a reward chain."
              },
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "media_list": [],
              "order": 1,
              "is_clan": false
            },
            {
              "sku": "com.xsolla.reward_vp_2",
              "name": {
                "en": "Reward VP 2"
              },
              "type": "value_point",
              "is_enabled": false,
              "description": {
                "en": "Value points for reward system."
              },
              "long_description": {
                "en": "Value points given to users to get new rewards in a reward chain."
              },
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "media_list": [],
              "order": 2,
              "is_clan": false
            },
            {
              "sku": "com.xsolla.clan_value_point_1",
              "name": {
                "en": "Clan Reward VP 1"
              },
              "is_enabled": true,
              "description": {
                "en": "Value points for clan reward system."
              },
              "long_description": {
                "en": "Value points given to clans to get new rewards in a reward chain."
              },
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "media_list": [],
              "order": 3,
              "is_clan": true
            }
          ]
        }
      },
      "200-value-points-reward-chain_admin_get-value-point": {
        "value": {
          "sku": "com.xsolla.reward_vp_1",
          "name": {
            "en": "Reward VP 1"
          },
          "type": "value_point",
          "is_enabled": true,
          "description": {
            "en": "Points for reward system"
          },
          "long_description": {
            "en": "Points given to users to get new rewards in a reward chain."
          },
          "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
          "media_list": [],
          "order": 1,
          "is_clan": false,
          "can_delete": false
        }
      },
      "200-value-points-rewards-list": {
        "value": {
          "items": [
            {
              "item_id": 14232,
              "sku": "com.xsolla.booster_1",
              "name": {
                "en": "Booster"
              },
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "amount": 100
            },
            {
              "item_id": 14232,
              "sku": "com.xsolla.booster_mega",
              "name": {
                "en": "Mega Booster"
              },
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "amount": 200
            }
          ]
        }
      },
      "200-client-get-reward-chains-list": {
        "value": {
          "has_more": false,
          "total_items_count": 1,
          "items": [
            {
              "reward_chain_id": 10,
              "name": "Weekly quest",
              "description": "Big weekly quest",
              "long_description": "You can get a lot of additional items just by shopping during the week",
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "order": 1,
              "date_start": "2023-04-15T18:16:00+05:00",
              "date_end": "2023-04-25T18:16:00+05:00",
              "value_point": {
                "sku": "com.xsolla.value_point_1",
                "name": "Value point",
                "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                "description": null,
                "long_description": null,
                "amount": 130
              },
              "clan_type": null,
              "top_contributors": [],
              "steps": [
                {
                  "step_id": 1,
                  "name": "Level 1",
                  "is_claimed": true,
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                  "price": {
                    "amount": 100
                  },
                  "reward": [
                    {
                      "sku": "com.xsolla.box_1",
                      "name": "Super box",
                      "type": "bundle",
                      "description": "Super box with items",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.box_2",
                      "name": "Mega box",
                      "type": "bundle",
                      "description": "Mega box with items",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "quantity": 1
                    }
                  ]
                },
                {
                  "step_id": 2,
                  "name": "Level 2",
                  "is_claimed": false,
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                  "price": {
                    "amount": 200
                  },
                  "reward": [
                    {
                      "sku": "com.xsolla.box_1",
                      "name": "Super box",
                      "type": "bundle",
                      "description": "Super box with items",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.box_2",
                      "name": "Mega box",
                      "type": "bundle",
                      "description": "Mega box with items",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "quantity": 2
                    }
                  ]
                }
              ],
              "recurrent_schedule": {
                "interval_type": "weekly",
                "reset_next_date": 1746057600
              },
              "popup_header": null,
              "popup_instruction": null,
              "popup_image_url": null
            },
            {
              "reward_chain_id": 12,
              "name": "Weekly clan quest",
              "description": "Major weekly clan quest.",
              "long_description": "You and your clan members can get additional items for shopping during a certain month.",
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "order": 2,
              "date_start": "2023-04-15T18:16:00+05:00",
              "date_end": "2023-10-15T18:16:00+05:00",
              "value_point": {
                "sku": "com.xsolla.clan_value_point_1",
                "name": "Clan Reward VP 1",
                "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                "description": "Value points for clan reward system.",
                "long_description": "Value points given to clans to get new rewards in a reward chain.",
                "amount": 80
              },
              "clan_type": "guild",
              "top_contributors": [
                {
                  "name": "Rabbit",
                  "contributed_amount": 100
                },
                {
                  "name": "Rocket",
                  "contributed_amount": 80
                },
                {
                  "name": "Rain",
                  "contributed_amount": 40
                }
              ],
              "steps": [
                {
                  "step_id": 1,
                  "name": "Level 1",
                  "is_claimed": true,
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                  "price": {
                    "amount": 100
                  },
                  "reward": [
                    {
                      "sku": "com.xsolla.box_1",
                      "name": "Super box",
                      "type": "bundle",
                      "description": "Super box with items",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "quantity": 1
                    },
                    {
                      "sku": "com.xsolla.box_2",
                      "name": "Mega box",
                      "type": "bundle",
                      "description": "Mega box with items",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "quantity": 1
                    }
                  ]
                },
                {
                  "step_id": 2,
                  "name": "Level 2",
                  "is_claimed": false,
                  "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                  "price": {
                    "amount": 200
                  },
                  "reward": [
                    {
                      "sku": "com.xsolla.box_1",
                      "name": "Super box",
                      "type": "bundle",
                      "description": "Super box with items",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "quantity": 2
                    },
                    {
                      "sku": "com.xsolla.box_2",
                      "name": "Mega box",
                      "type": "bundle",
                      "description": "Mega box with items",
                      "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
                      "quantity": 2
                    }
                  ]
                }
              ],
              "recurrent_schedule": {
                "interval_type": "monthly",
                "reset_next_date": 1746057600
              },
              "popup_header": {
                "en": "How to unlock rewards"
              },
              "popup_instruction": {
                "en": "You should be a clan member to get clan rewards. You join a clan when a clan member invited you to the clan, and you accepted the invite. You can create your own clan."
              },
              "popup_image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png"
            }
          ]
        }
      },
      "200-client-get-user-reward-chain-balance": {
        "summary": "Reward chain example",
        "value": {
          "sku": "com.xsolla.value_point_1",
          "name": "Value point",
          "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
          "description": null,
          "long_description": null,
          "amount": 130,
          "is_clan": false
        }
      },
      "200-client-get-user-clan-reward-chain-balance": {
        "summary": "Clan reward chain example",
        "value": {
          "sku": "com.xsolla.clan_value_point_1",
          "name": "Clan Reward VP 1",
          "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
          "description": "Value points for clan reward system.",
          "long_description": "Value points given to clans to get new rewards in a reward chain.",
          "amount": 80,
          "is_clan": true
        }
      },
      "200-client-update-user-clan": {
        "value": {
          "reward": [
            {
              "sku": "com.xsolla.box_1",
              "name": "Super box",
              "type": "bundle",
              "description": "Super box with items",
              "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
              "quantity": 1,
              "bundle_type": "standard"
            },
            {
              "sku": "com.xsolla.potion_1",
              "name": "Mega potion",
              "type": "virtual_good",
              "description": "Mega potion",
              "image_url": "https://cdn3.xsolla.com/img/misc/images/54c0cf9d345817cdacfdde198db178e0.jpg",
              "quantity": 1
            }
          ]
        }
      },
      "200-client-offer-chain-list": {
        "summary": "User's offer chain list example",
        "value": {
          "has_more": false,
          "total_items_count": 3,
          "items": [
            {
              "id": 101,
              "name": "Active offer chain",
              "description": null,
              "date_start": "2018-04-15T18:16:00+05:00",
              "date_end": "2025-04-25T18:16:00+05:00",
              "order": 1,
              "recurrent_schedule": null,
              "steps": [
                {
                  "step_number": 1,
                  "is_free": false,
                  "items": [
                    {
                      "item_id": 9012,
                      "sku": "health_potion",
                      "name": "Healing potion",
                      "type": "virtual_good",
                      "description": "Heal 10% of your health",
                      "image_url": "https://picture.bundle-picture.png",
                      "is_free": false,
                      "quantity": 1,
                      "order": 0
                    }
                  ],
                  "is_claimed": false,
                  "step_price": {
                    "amount": 99.99,
                    "currency": "USD"
                  },
                  "step_vp_rewards": [
                    {
                      "item_id": 6039,
                      "sku": "test_value_point_39",
                      "amount": 15,
                      "name": "store_item_0_test_value_point_name",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/female/accessory/female_crossnecklace_2_silver-01.png",
                      "is_clan": true
                    }
                  ]
                },
                {
                  "step_number": 2,
                  "is_free": false,
                  "items": [
                    {
                      "item_id": 9012,
                      "sku": "health_potion",
                      "name": "Healing potion",
                      "type": "virtual_good",
                      "description": "Heal 10% of your health",
                      "image_url": "https://picture.bundle-picture.png",
                      "is_free": false,
                      "quantity": 2,
                      "order": 0
                    }
                  ],
                  "is_claimed": false,
                  "step_price": {
                    "amount": 199.98,
                    "currency": "USD"
                  },
                  "step_vp_rewards": [
                    {
                      "item_id": 6039,
                      "sku": "test_value_point_39",
                      "amount": 30,
                      "name": "store_item_0_test_value_point_name",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/female/accessory/female_crossnecklace_2_silver-01.png",
                      "is_clan": true
                    }
                  ]
                },
                {
                  "step_number": 3,
                  "is_free": true,
                  "items": [
                    {
                      "item_id": 9011,
                      "sku": "free_item",
                      "name": "Free item",
                      "type": "virtual_good",
                      "description": "store_item_0_lost_telescope_2_short_description",
                      "image_url": "https://picture.bundle-picture.png",
                      "is_free": true,
                      "quantity": 1,
                      "order": 0
                    }
                  ],
                  "is_claimed": false,
                  "step_price": null,
                  "step_vp_rewards": null
                }
              ],
              "next_step_number": 1
            },
            {
              "id": 102,
              "name": "Active offer chain 2",
              "description": null,
              "date_start": "2018-04-15T18:16:00+05:00",
              "date_end": "2025-04-25T18:16:00+05:00",
              "order": 1,
              "recurrent_schedule": null,
              "steps": [
                {
                  "step_number": 1,
                  "is_free": true,
                  "items": [
                    {
                      "item_id": 9011,
                      "sku": "free_item",
                      "name": "Free item",
                      "type": "virtual_good",
                      "description": "store_item_0_lost_telescope_2_short_description",
                      "image_url": "https://picture.bundle-picture.png",
                      "is_free": true,
                      "quantity": 3,
                      "order": 0
                    }
                  ],
                  "is_claimed": false,
                  "step_price": null,
                  "step_vp_rewards": null
                },
                {
                  "step_number": 2,
                  "is_free": true,
                  "items": [
                    {
                      "item_id": 9012,
                      "sku": "health_potion",
                      "name": "Healing potion",
                      "type": "virtual_good",
                      "description": "Heal 10% of your health",
                      "image_url": "https://picture.bundle-picture.png",
                      "is_free": false,
                      "quantity": 3,
                      "order": 0
                    }
                  ],
                  "is_claimed": false,
                  "step_price": null,
                  "step_vp_rewards": [
                    {
                      "item_id": 6039,
                      "sku": "test_value_point_39",
                      "amount": 45,
                      "name": "store_item_0_test_value_point_name",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/female/accessory/female_crossnecklace_2_silver-01.png",
                      "is_clan": true
                    }
                  ]
                },
                {
                  "step_number": 3,
                  "is_free": true,
                  "items": [],
                  "is_claimed": false,
                  "step_price": null,
                  "step_vp_rewards": null
                }
              ],
              "next_step_number": 1
            },
            {
              "id": 103,
              "name": "Active offer chain 3",
              "description": null,
              "date_start": "2018-04-15T18:16:00+05:00",
              "date_end": "2025-04-25T18:16:00+05:00",
              "order": 1,
              "recurrent_schedule": null,
              "steps": [
                {
                  "step_number": 1,
                  "is_free": true,
                  "items": [
                    {
                      "item_id": 9011,
                      "sku": "free_item",
                      "name": "Free item",
                      "type": "virtual_good",
                      "description": "store_item_0_lost_telescope_2_short_description",
                      "image_url": "https://picture.bundle-picture.png",
                      "is_free": true,
                      "quantity": 3,
                      "order": 0
                    }
                  ],
                  "is_claimed": false,
                  "step_price": null,
                  "step_vp_rewards": null
                },
                {
                  "step_number": 2,
                  "is_free": false,
                  "items": [
                    {
                      "item_id": 9012,
                      "sku": "health_potion",
                      "name": "Healing potion",
                      "type": "virtual_good",
                      "description": "Heal 10% of your health",
                      "image_url": "https://picture.bundle-picture.png",
                      "is_free": false,
                      "quantity": 3,
                      "order": 0
                    }
                  ],
                  "is_claimed": false,
                  "step_price": {
                    "amount": 299.97,
                    "currency": "USD"
                  },
                  "step_vp_rewards": [
                    {
                      "item_id": 6039,
                      "sku": "test_value_point_39",
                      "amount": 45,
                      "name": "store_item_0_test_value_point_name",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/female/accessory/female_crossnecklace_2_silver-01.png",
                      "is_clan": true
                    }
                  ]
                },
                {
                  "step_number": 3,
                  "is_free": true,
                  "items": [],
                  "is_claimed": false,
                  "step_price": null,
                  "step_vp_rewards": null
                }
              ],
              "next_step_number": 1
            }
          ]
        }
      },
      "200-client-offer-chain": {
        "summary": "User's offer chain example",
        "value": {
          "id": 4,
          "name": "Offer chain with bundles",
          "description": null,
          "date_start": "2010-04-15T18:16:00+05:00",
          "date_end": "2025-04-25T18:16:00+05:00",
          "order": 1,
          "recurrent_schedule": null,
          "steps": [
            {
              "step_number": 1,
              "is_free": false,
              "items": [
                {
                  "item_id": 7008,
                  "sku": "bundle_with_many_items",
                  "name": "Bundle with many awesome stuff!",
                  "type": "bundle",
                  "description": "Many stuff",
                  "image_url": "https://picture.bundle-with-many-stuff.png",
                  "bundle_type": "standard",
                  "is_free": false,
                  "content": [
                    {
                      "item_id": 1,
                      "sku": "d0df11c5-f7c4-4907-9ae1-7dd40cecab05",
                      "name": "Virtual Good Bundle",
                      "type": "virtual_good",
                      "description": "virtual_good_short_description_d0df11c5-f7c4-4907-9ae1-7dd40cecab05",
                      "image_url": "https://popmedia.blob.core.windows.net/popyourself/female/accessory/female_crossnecklace_2_silver-01.png",
                      "is_free": false,
                      "quantity": 1
                    },
                    {
                      "item_id": 7009,
                      "sku": "vg-in-bundle-big-rocket",
                      "name": "Big Rocket",
                      "type": "virtual_good",
                      "description": "Big Rocket - short description",
                      "image_url": "https://picture.bigrocket.png",
                      "is_free": false,
                      "quantity": 1
                    },
                    {
                      "item_id": 7010,
                      "sku": "vc-in-bundle-gold-coins",
                      "name": "Gold Coins",
                      "type": "virtual_currency",
                      "description": "Gold Coins - short description",
                      "image_url": "https://picture.gold_coins.png",
                      "is_free": true,
                      "quantity": 100
                    },
                    {
                      "item_id": 7011,
                      "sku": "digital-content-drm-in-bundle-awesome-game",
                      "name": "Some Game",
                      "type": "virtual_good",
                      "description": "Some Game - short description",
                      "image_url": "https://picture.some_game.png",
                      "is_free": true,
                      "quantity": 1
                    },
                    {
                      "item_id": 7012,
                      "sku": "bundle-in-bundle-another-bundle",
                      "name": "Some Bundle in Bundle",
                      "type": "bundle",
                      "description": "Bundle - short description",
                      "image_url": "https://picture.bundle-picture.png",
                      "bundle_type": "standard",
                      "is_free": true,
                      "content": [
                        {
                          "item_id": 7010,
                          "sku": "vc-in-bundle-gold-coins",
                          "name": "Gold Coins",
                          "type": "virtual_currency",
                          "description": "Gold Coins - short description",
                          "image_url": "https://picture.gold_coins.png",
                          "is_free": true,
                          "quantity": 1
                        }
                      ],
                      "quantity": 1
                    },
                    {
                      "item_id": 7013,
                      "sku": "lootbox-in-bundle-awesome-game",
                      "name": "Some Lootbox",
                      "type": "lootbox",
                      "description": "Lootbox in bundle - short description",
                      "image_url": "https://picture.lootbox-picture.png",
                      "is_free": true,
                      "quantity": 1
                    }
                  ],
                  "quantity": 5,
                  "order": 0
                }
              ],
              "is_claimed": false,
              "step_price": {
                "amount": 499.95,
                "currency": "USD"
              },
              "step_vp_rewards": null
            },
            {
              "step_number": 2,
              "is_free": true,
              "items": [
                {
                  "item_id": 7007,
                  "sku": "bundle-empty",
                  "name": "Empty bundle",
                  "type": "bundle",
                  "description": "No",
                  "image_url": "https://picture.bundle-no-items.png",
                  "bundle_type": "standard",
                  "is_free": true,
                  "content": [],
                  "quantity": 10,
                  "order": 0
                }
              ],
              "is_claimed": false,
              "step_price": null,
              "step_vp_rewards": null
            }
          ],
          "next_step_number": 1
        }
      },
      "404-offer-chain-not-found": {
        "summary": "Chain not found",
        "description": "Offer chain step was not found.",
        "value": {
          "statusCode": 404,
          "errorCode": 6201,
          "errorMessage": "[0401-6201]: Chain not found",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "chain_id": 4
          }
        }
      },
      "404-offer-chain-step-not-found": {
        "summary": "Chain step not found",
        "description": "Offer chain step was not found.",
        "value": {
          "statusCode": 404,
          "errorCode": 6304,
          "errorMessage": "[0401-6304]: Offer Chain Step not found",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "chain_id": 100,
            "step_number": 1
          }
        }
      },
      "422-offer-chain-claim-error-invalid-step": {
        "summary": "Cannot claim step reward",
        "description": "The user must claim all previous steps, and the request must use a valid call – <a href=\"/api/shop-builder/operation/order-user-offer-chain-step-reward\">Create order for paid offer chain step</a>, <a href=\"/api/shop-builder/operation/claim-user-offer-chain-step-reward\">Claim free offer chain step</a> for free ones.\n\nThis error is returned if one or more of the following conditions are not met:<ul><li>The offer chain exists, is enabled, and not deleted.</li><li>The target step exists, is enabled, and marked as free.</li><li>The step has not already been claimed by the user. In case of a recurring chain, this check is based on the user progress of the current iteration.</li><li>All previous steps in the chain (by step number) have been claimed or purchased. In case of a recurring chain, this check also considers the user progress of the current iteration.</li></ul>\n",
        "value": {
          "statusCode": 422,
          "errorCode": 6306,
          "errorMessage": "[0401-6306]: This step is not valid to claim by user.",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "chain_id": 1,
            "step_number": 1
          }
        }
      },
      "200-reward-chain-list": {
        "value": {
          "has_more": true,
          "items": [
            {
              "name": {
                "en": "Reward chain"
              },
              "reward_chain_id": 1,
              "description": {
                "en": "Reward chain description"
              },
              "long_description": {
                "en": "Reward chain long description"
              },
              "is_enabled": true,
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "order": 1,
              "date_start": "2020-04-15T18:16:00+05:00",
              "date_end": "2021-04-15T18:16:00+05:00",
              "value_point": {
                "sku": "com.xsolla.reward_vp_1",
                "name": {
                  "en": "Reward VP 1"
                },
                "type": "value_point",
                "is_enabled": true,
                "description": "Value points for standard reward system.",
                "long_description": "Value points given to users to get new rewards in a reward chain.",
                "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                "media_list": [],
                "order": 1,
                "is_clan": false
              },
              "recurrent_schedule": null,
              "attribute_conditions": [
                {
                  "attribute": "race",
                  "operator": "eq",
                  "value": "ork",
                  "type": "string",
                  "can_be_missing": false
                }
              ],
              "is_always_visible": true
            },
            {
              "name": {
                "en": "Clan reward chain"
              },
              "reward_chain_id": 2,
              "description": {
                "en": "Clan reward chain description."
              },
              "long_description": {
                "en": "Clan reward chain long description."
              },
              "is_enabled": true,
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "order": 1,
              "date_start": "2022-04-15T18:16:00+05:00",
              "date_end": "2023-04-15T18:16:00+05:00",
              "value_point": {
                "sku": "com.xsolla.clan_value_point_1",
                "name": {
                  "en": "Clan Reward VP 1"
                },
                "is_enabled": true,
                "description": "Value points for clan reward system.",
                "long_description": "Value points given to clans to get new rewards in a reward chain.",
                "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
                "media_list": [],
                "order": 1,
                "is_clan": true
              },
              "recurrent_schedule": {
                "day_of_month": null,
                "day_of_week": 2,
                "displayable_reset_next_date": "2023-03-07T11:00:00+08:00",
                "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
                "interval_type": "weekly",
                "reset_next_date": 1677553200,
                "time": "11:00:00+08:00"
              },
              "popup_header": {
                "en": "How to unlock rewards"
              },
              "popup_instruction": {
                "en": "You must be a clan member in order to get clan rewards. You join a clan when a clan member invites you to the clan, and you accept the invite. You can also create your own clan."
              },
              "popup_image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "clan_type": "guild"
            }
          ]
        }
      },
      "200-reward-chain": {
        "summary": "Reward chain example",
        "value": {
          "reward_chain_id": 1,
          "name": {
            "en": "Reward chain"
          },
          "description": {
            "en": "Reward chain description"
          },
          "long_description": {
            "en": "Reward chain long description"
          },
          "is_enabled": true,
          "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
          "order": 1,
          "date_start": "2020-04-15T18:16:00+05:00",
          "date_end": "2021-04-15T18:16:00+05:00",
          "value_point": {
            "sku": "com.xsolla.reward_vp_1",
            "name": {
              "en": "Reward VP 1"
            },
            "type": "value_point",
            "is_enabled": true,
            "description": {
              "en": "Value points for reward system."
            },
            "long_description": {
              "en": "Value points given to users to get new rewards in a reward chain."
            },
            "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
            "media_list": [],
            "order": 1,
            "is_clan": false
          },
          "steps": [
            {
              "name": {
                "en": "First step of the reward chain"
              },
              "step_id": 1,
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "reward": [
                {
                  "sku": "com.xsolla.item_1",
                  "quantity": 5
                },
                {
                  "sku": "com.xsolla.item_2",
                  "quantity": 1
                }
              ],
              "price": {
                "amount": 10
              }
            },
            {
              "name": {
                "en": "Second step of the reward chain"
              },
              "step_id": 2,
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "reward": [
                {
                  "sku": "com.xsolla.item_3",
                  "quantity": 5
                },
                {
                  "sku": "com.xsolla.item_4",
                  "quantity": 1
                }
              ],
              "price": {
                "amount": 15
              }
            }
          ],
          "recurrent_schedule": {
            "day_of_week": 2,
            "displayable_reset_next_date": "2023-03-07T11:00:00+08:00",
            "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
            "interval_type": "weekly",
            "reset_next_date": 1677553200,
            "time": "11:00:00+08:00"
          },
          "attribute_conditions": [
            {
              "attribute": "race",
              "operator": "eq",
              "value": "ork",
              "type": "string",
              "can_be_missing": false
            }
          ],
          "is_always_visible": true
        }
      },
      "200-clan-reward-chain": {
        "summary": "Clan reward chain example",
        "value": {
          "reward_chain_id": 1,
          "name": {
            "en": "Clan reward chain"
          },
          "description": {
            "en": "Clan reward chain description."
          },
          "long_description": {
            "en": "Clan reward chain long description."
          },
          "is_enabled": true,
          "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
          "order": 1,
          "date_start": "2020-04-15T18:16:00+05:00",
          "date_end": "2021-04-15T18:16:00+05:00",
          "value_point": {
            "sku": "com.xsolla.clan_value_point_1",
            "name": {
              "en": "Clan Reward VP 1"
            },
            "is_enabled": true,
            "description": {
              "en": "Value points for clan reward system."
            },
            "long_description": {
              "en": "Value points given to clans to get new rewards in a certain reward chain."
            },
            "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
            "media_list": [],
            "order": 1,
            "is_clan": true
          },
          "steps": [
            {
              "name": {
                "en": "First step of the reward chain"
              },
              "step_id": 1,
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "reward": [
                {
                  "sku": "com.xsolla.item_1",
                  "quantity": 5
                },
                {
                  "sku": "com.xsolla.item_2",
                  "quantity": 1
                }
              ],
              "price": {
                "amount": 10
              }
            },
            {
              "name": {
                "en": "Second step of the reward chain"
              },
              "step_id": 2,
              "image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
              "reward": [
                {
                  "sku": "com.xsolla.item_3",
                  "quantity": 5
                },
                {
                  "sku": "com.xsolla.item_4",
                  "quantity": 1
                }
              ],
              "price": {
                "amount": 15
              }
            }
          ],
          "recurrent_schedule": {
            "day_of_week": 2,
            "displayable_reset_next_date": "2023-03-07T11:00:00+08:00",
            "displayable_reset_start_date": "2023-02-28T11:00:00+08:00",
            "interval_type": "weekly",
            "reset_next_date": 1677553200,
            "time": "11:00:00+08:00"
          },
          "popup_header": {
            "en": "How to unlock rewards"
          },
          "popup_instruction": {
            "en": "You must be a clan member in order to get clan rewards. You join a clan when a clan member invites you to the clan, and you accept the invite. You can also create your own clan."
          },
          "popup_image_url": "https://cdn.xsolla.net/img/misc/images/5c3b8b45c5be5fe7803e59fbc8041be4.png",
          "clan_type": "guild"
        }
      },
      "200-admin-offer-chain-list": {
        "summary": "Offer chain list example",
        "value": {
          "has_more": false,
          "items": [
            {
              "id": 1,
              "name": {
                "en": "Offer chain",
                "ru": "Цепочка предложений"
              },
              "description": {
                "en": "Offer chain short description"
              },
              "order": 1,
              "date_start": "2023-04-15T18:16:00+05:00",
              "date_end": "2025-04-25T18:16:00+05:00",
              "is_enabled": false,
              "recurrent_schedule": {
                "interval_type": "weekly",
                "day_of_week": 3,
                "time": "07:00:00+03:00",
                "displayable_reset_start_date": "2018-12-05T07:00:00+03:00",
                "displayable_reset_next_date": "2018-12-05T07:00:00+03:00",
                "reset_next_date": 1543982400
              }
            },
            {
              "id": 2,
              "name": {
                "en": "Monthly offer chain",
                "ru": "Ежемесячная цепочка товаров"
              },
              "description": {
                "en": "Monthly offer chain short description"
              },
              "order": 2,
              "date_start": "2025-04-15T00:00:00+08:00",
              "date_end": "2025-08-28T15:00:00+08:00",
              "is_enabled": false,
              "recurrent_schedule": {
                "interval_type": "monthly",
                "day_of_month": 28,
                "time": "15:00:00+08:00",
                "displayable_reset_start_date": "2025-05-28T15:00:00+08:00",
                "displayable_reset_next_date": "2025-05-28T15:00:00+08:00",
                "reset_next_date": 1748415600
              }
            },
            {
              "id": 3,
              "name": {
                "en": "Offer chain",
                "ru": "Цепочка предложений"
              },
              "description": {
                "en": "Offer chain short description"
              },
              "order": 3,
              "date_start": "2023-04-15T18:16:00+05:00",
              "date_end": "2025-04-25T18:16:00+05:00",
              "is_enabled": true,
              "recurrent_schedule": null
            }
          ]
        }
      },
      "422-admin-offer-chain-error-too-many-steps": {
        "summary": "Too many steps",
        "description": "The number of offer chain steps exceeds the allowed limit of 30. Try specifying fewer steps.",
        "value": {
          "statusCode": 422,
          "errorCode": 6203,
          "errorMessage": "[0401-6203]: Chain step count exceeds the allowed limit",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "step_count": 31,
            "max_steps": 30
          }
        }
      },
      "422-admin-offer-chain-error-incorrect-steps-order": {
        "summary": "Invalid steps order",
        "description": "The sequence of offer chain step numbers is incorrect. Step numbers must be sequential, without gaps or duplicates.",
        "value": {
          "statusCode": 422,
          "errorCode": 6302,
          "errorMessage": "[0401-6302]: Offer chain step numbers are invalid",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "incorrect_step_numbers": {
              "duplicates": [
                2,
                7
              ],
              "out_of_range": [
                7,
                8
              ],
              "missing": [
                3,
                4,
                5,
                6
              ]
            }
          }
        }
      },
      "422-admin-offer-chain-error-item-limit-exceeded": {
        "summary": "Item limit exceeded",
        "description": "The number of items in one or more offer chain steps exceeds the allowed limit. Currently, only one item per step is allowed.",
        "value": {
          "statusCode": 422,
          "errorCode": 6301,
          "errorMessage": "[0401-6301]: Offer chain step item count exceeds the allowed limit for some steps",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "max_items": 1,
            "steps_exceeded_limits": [
              {
                "step_number": 1,
                "items_count": 2
              },
              {
                "step_number": 4,
                "items_count": 3
              }
            ]
          }
        }
      },
      "422-admin-offer-chain-error-incorrect-items": {
        "summary": "Invalid step items",
        "description": "Specified items are either unavailable, or not found. Only enabled items of the following types are supported: virtual items, bundles, and virtual currency packages.",
        "value": {
          "statusCode": 422,
          "errorCode": 6303,
          "errorMessage": "[0401-6303]: Offer chain steps items are not allowed or not found",
          "transactionId": "x-x-xX-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "invalid_items": {
              "not_found": [
                "vg_deleted_item_1",
                "vg_deleted_item_2",
                "not_existing_sku_404_1",
                "not_existing_sku_404_2"
              ],
              "disabled": [
                "vg_disabled_item_1",
                "vg_disabled_item_2",
                "vc_disabled_1"
              ],
              "invalid_item_type": {
                "allowed_item_type_list": [
                  "virtual_good",
                  "bundle"
                ],
                "sku_map": {
                  "vc_enabled_shown_in_store_1": "virtual_currency",
                  "vc_disabled_1": "virtual_currency",
                  "unit_enabled_shown_in_store_1": "unit",
                  "gk_steam_enabled_shown_in_store_1": "game_key"
                }
              }
            }
          }
        }
      },
      "422-admin-offer-chain-error-invalid-dates": {
        "summary": "Invalid date format",
        "description": "The date format must be valid. Use <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> format.",
        "value": {
          "statusCode": 422,
          "errorCode": 6204,
          "errorMessage": "[0401-6204]: Period of a chain is invalid. Please, check the dates in your request",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "chain_id": 1,
            "invalid_format_dates": {
              "date_start": "2023-04-15 17:16:00Z",
              "date_end": "2025-04-25 19:16:00Z"
            }
          }
        }
      },
      "422-admin-offer-chain-error-incorrect-period": {
        "summary": "Invalid chain period",
        "description": "The start date must be earlier than the end date.",
        "value": {
          "statusCode": 422,
          "errorCode": 6204,
          "errorMessage": "[0401-6204]: Period of a chain is invalid. Please, check the dates in your request",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "chain_id": 1,
            "invalid_periods": [
              {
                "start": "2025-04-25T18:16:00+05:00",
                "end": "2023-04-15T18:16:00+05:00"
              }
            ]
          }
        }
      },
      "200-admin-offer-chain": {
        "summary": "Offer chain example",
        "value": {
          "id": 3,
          "name": {
            "en": "Offer chain",
            "ru": "Цепочка"
          },
          "description": {
            "en": "Offer chain short description"
          },
          "date_start": "2023-04-15T18:16:00+05:00",
          "date_end": "2025-04-25T18:16:00+05:00",
          "order": 1,
          "recurrent_schedule": null,
          "steps": [
            {
              "step_id": 7,
              "step_number": 1,
              "is_free": false,
              "items": [
                {
                  "item_id": 9010,
                  "sku": "telescope",
                  "name": {
                    "en": "Telescope",
                    "ru": "Телескоп"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Allows to see the stars",
                    "ru": "Позволяет увидеть звезды"
                  },
                  "image_url": "https://picture.bundle-picture.png",
                  "quantity": 1,
                  "order": 1
                },
                {
                  "item_id": 9012,
                  "sku": "health_potion",
                  "name": {
                    "en": "Healing potion",
                    "ru": "Зелье лечения"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Heal 10% of your health",
                    "ru": "Лечит 10% здоровья"
                  },
                  "image_url": "https://picture.bundle-picture.png",
                  "quantity": 2,
                  "order": 0
                }
              ]
            },
            {
              "step_id": 6,
              "step_number": 2,
              "is_free": false,
              "items": [
                {
                  "item_id": 9010,
                  "sku": "telescope",
                  "name": {
                    "en": "Telescope",
                    "ru": "Телескоп"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Allows to see the stars",
                    "ru": "Позволяет увидеть звезды"
                  },
                  "image_url": "https://picture.bundle-picture.png",
                  "quantity": 5,
                  "order": 0
                }
              ]
            },
            {
              "step_id": 5,
              "step_number": 3,
              "is_free": true,
              "items": [
                {
                  "item_id": 9010,
                  "sku": "telescope",
                  "name": {
                    "en": "Telescope",
                    "ru": "Телескоп"
                  },
                  "type": "virtual_good",
                  "description": {
                    "en": "Allows to see the stars",
                    "ru": "Позволяет увидеть звезды"
                  },
                  "image_url": "https://picture.bundle-picture.png",
                  "quantity": 2,
                  "order": 0
                }
              ]
            }
          ],
          "is_enabled": true
        }
      },
      "422-admin-offer-chain-error-invalid-chain-step-ids": {
        "summary": "Chain step IDs not found",
        "description": "Some of the step IDs were not found. Double-check that the specified chain step IDs exist. To do this, use the <a href=\"/api/shop-builder/operation/order-user-offer-chain-step-reward#tag/offer-chain-admin/operation/admin-get-offer-chain\">Get offer chain</a> call.",
        "value": {
          "statusCode": 404,
          "errorCode": 6206,
          "errorMessage": "[0401-6206]: Chain step IDs not found",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "chain_id": 1,
            "chain_step_id_list": [
              404000
            ]
          }
        }
      },
      "422-admin-offer-chain-error-chain-id-mismatch": {
        "summary": "Chain ID mismatch",
        "description": "Offer chain ID in the request body does not match the ID in the URL.",
        "value": {
          "statusCode": 422,
          "errorCode": 6205,
          "errorMessage": "[0401-6205]: Chain ID mismatch. Please, check the chain ID in your request body and URL",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "url_chain_id": 1,
            "body_chain_id": 2
          }
        }
      },
      "422-admin-offer-chain-error-duplicate-step-ids": {
        "summary": "Duplicate chain step IDs",
        "description": "Chain step IDs must be unique in the request body.",
        "value": {
          "statusCode": 422,
          "errorCode": 6207,
          "errorMessage": "[0401-6207]: Duplicate chain step IDs detected in the request body",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "chain_step_id_list": [
              8,
              9,
              10
            ],
            "chain_id": 3
          }
        }
      },
      "422-admin-offer-chain-error-activated": {
        "summary": "Active offer chain cannot be updated",
        "description": "Active offer chain has to be deactivated before being updated. To do this, use the <a href=\"/api/shop-builder/operation/admin-toggle-offer-chain\">Toggle offer chain</a> call.",
        "value": {
          "statusCode": 422,
          "errorCode": 6307,
          "errorMessage": "[0401-6307]: Active offer chain cannot be updated. Please deactivate it first",
          "transactionId": "x-x-x-x-transactionId-mock-x-x-x",
          "errorMessageExtended": {
            "project_id": 0,
            "chain_id": 2
          }
        }
      },
      "Promotions_200-admin-unique-catalog-offers": {
        "value": {
          "items": [
            {
              "external_id": "new_year_bonus",
              "date_start": "2020-04-15T18:16:00+05:00",
              "date_end": "2020-04-25T18:16:00+05:00",
              "name": {
                "en-US": "New Year Bonus",
                "de-DE": "Neujahrsbonus"
              },
              "items": [
                "booster",
                "booster_mega"
              ],
              "is_enabled": true,
              "redeem_user_limit": 1,
              "redeem_total_limit": null,
              "redeem_code_limit": 1,
              "total_limit_state": null
            },
            {
              "external_id": "secret_store",
              "date_start": "2020-04-15T18:16:00+05:00",
              "date_end": null,
              "name": {
                "en-US": "Secret store",
                "ru-RU": "Тайный магазин"
              },
              "items": [
                "helmet",
                "armor",
                "sword"
              ],
              "is_enabled": true,
              "redeem_user_limit": 1,
              "redeem_total_limit": 100,
              "redeem_code_limit": 1,
              "total_limit_state": {
                "available": 50,
                "reserved": 10,
                "used": 40
              }
            }
          ],
          "total_promotions_count": 2,
          "active_promotions_count": 2,
          "inactive_promotions_count": 0
        }
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "ITEM ATTRIBUTES",
      "tags": [
        "attribute-admin"
      ]
    },
    {
      "name": "PERSONALIZATION",
      "tags": [
        "personalized-catalog"
      ]
    },
    {
      "name": "BUNDLES",
      "tags": [
        "bundles-admin",
        "bundles-catalog"
      ]
    },
    {
      "name": "CART & PAYMENT",
      "tags": [
        "cart-client-side",
        "cart-server-side",
        "payment-client-side",
        "payment-server-side",
        "order",
        "free-item"
      ]
    },
    {
      "name": "COMMON",
      "tags": [
        "common-webhooks",
        "common-pre-orders",
        "common-merchant",
        "common-catalog",
        "common-regions"
      ]
    },
    {
      "name": "GAME KEYS",
      "tags": [
        "game-keys-catalog",
        "game-keys-entitlement",
        "game-keys-admin"
      ]
    },
    {
      "name": "PROMOTIONS",
      "tags": [
        "promotions-common",
        "promotions-coupons",
        "promotions-promo-codes",
        "promotions-unique-catalog-offers",
        "promotions-discounts",
        "promotions-bonuses",
        "promo-code-user-limits-admin",
        "coupon-user-limits-admin"
      ]
    },
    {
      "name": "VIRTUAL ITEMS & CURRENCY",
      "tags": [
        "virtual-items-currency-admin",
        "virtual-items-currency-catalog",
        "virtual-payment"
      ]
    },
    {
      "name": "LIMITS",
      "tags": [
        "user-limits-admin"
      ]
    },
    {
      "name": "REWARD CHAINS & VALUE POINTS",
      "tags": [
        "reward-chain-value-points-admin",
        "reward-chain-client",
        "clan-reward-chain-client"
      ]
    },
    {
      "name": "OFFER CHAINS",
      "tags": [
        "offer-chain-admin",
        "offer-chain-client"
      ]
    },
    {
      "name": "UPSELL",
      "tags": [
        "upsell-admin",
        "upsell-client"
      ]
    },
    {
      "name": "ITEMS IMPORT",
      "tags": [
        "connector-admin"
      ]
    }
  ]
}

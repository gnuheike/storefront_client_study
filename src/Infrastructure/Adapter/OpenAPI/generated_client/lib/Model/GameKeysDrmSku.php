<?php
/**
 * GameKeysDrmSku
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shop Builder API
 *
 * # Overview  * **Version:** 2.0.0 * **Servers**: `https://store.xsolla.com/api` * **[Contact Us by Email](mailto:integration@xsolla.com)** * **Contact URL:** https://xsolla.com/ * **Required TLS version:** 1.2  Shop Builder API provides a third-party solution for implementing the server side for your store interface. Use the endpoints to manage in-game items, in-game currencies, cart, player inventory, promotions, game library, etc.  # Download API definition  You can download the API definition in two formats: - [YAML](https://api.redocly.com/registry/bundle/xsolla/store-en/v1/openapi.yaml) - [JSON](https://api.redocly.com/registry/bundle/xsolla/store-en/v1/openapi.json)
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * GameKeysDrmSku Class Doc Comment
 *
 * @category Class
 * @description Unique DRM ID.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class GameKeysDrmSku
{
    /**
     * Possible values of this enum
     */
    public const STEAM = 'steam';

    public const PLAYSTATION = 'playstation';

    public const XBOX = 'xbox';

    public const UPLAY = 'uplay';

    public const ORIGIN = 'origin';

    public const DRMFREE = 'drmfree';

    public const GOG = 'gog';

    public const EPICGAMES = 'epicgames';

    public const NINTENDO_ESHOP = 'nintendo_eshop';

    public const DISCORD_GAME_STORE = 'discord_game_store';

    public const OCULUS = 'oculus';

    public const ROCKSTAR = 'rockstar';

    public const VIVEPORT = 'viveport';

    public const STADIA = 'stadia';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::STEAM,
            self::PLAYSTATION,
            self::XBOX,
            self::UPLAY,
            self::ORIGIN,
            self::DRMFREE,
            self::GOG,
            self::EPICGAMES,
            self::NINTENDO_ESHOP,
            self::DISCORD_GAME_STORE,
            self::OCULUS,
            self::ROCKSTAR,
            self::VIVEPORT,
            self::STADIA
        ];
    }
}



<?php
/**
 * PromotionsPromoCodesApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shop Builder API
 *
 * # Overview  * **Version:** 2.0.0 * **Servers**: `https://store.xsolla.com/api` * **[Contact Us by Email](mailto:integration@xsolla.com)** * **Contact URL:** https://xsolla.com/ * **Required TLS version:** 1.2  Shop Builder API provides a third-party solution for implementing the server side for your store interface. Use the endpoints to manage in-game items, in-game currencies, cart, player inventory, promotions, game library, etc.  # Download API definition  You can download the API definition in two formats: - [YAML](https://api.redocly.com/registry/bundle/xsolla/store-en/v1/openapi.yaml) - [JSON](https://api.redocly.com/registry/bundle/xsolla/store-en/v1/openapi.json)
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PromotionsPromoCodesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PromotionsPromoCodesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for activatePromoCode
     *
     * Activate promo code promotion.
     *
     */
    public function testActivatePromoCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addPromoCodeUserPromotionLimit
     *
     * Increase promo code limit for specified user.
     *
     */
    public function testAddPromoCodeUserPromotionLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPromoCode
     *
     * Create promo code promotion.
     *
     */
    public function testCreatePromoCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPromoCodeCode
     *
     * Create code for promo code promotion.
     *
     */
    public function testCreatePromoCodeCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deactivatePromoCode
     *
     * Deactivate promo code promotion.
     *
     */
    public function testDeactivatePromoCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePromoCode
     *
     * Delete promo code promotion.
     *
     */
    public function testDeletePromoCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generatePromoCodeCodes
     *
     * Generate codes for promo code promotion.
     *
     */
    public function testGeneratePromoCodeCodes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoCode
     *
     * Get promo code promotion.
     *
     */
    public function testGetPromoCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoCodeCodeLimit
     *
     * Get promo code limit for codes.
     *
     */
    public function testGetPromoCodeCodeLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoCodeRewardsByCode
     *
     * Get promo code rewards.
     *
     */
    public function testGetPromoCodeRewardsByCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoCodeUserLimit
     *
     * Get promo code limit for specified user.
     *
     */
    public function testGetPromoCodeUserLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoCodes
     *
     * Get list of promo code promotions.
     *
     */
    public function testGetPromoCodes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromocodeCodes
     *
     * Get codes of promo code promotion.
     *
     */
    public function testGetPromocodeCodes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for redeemPromoCode
     *
     * Redeem promo code.
     *
     */
    public function testRedeemPromoCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeCartPromoCode
     *
     * Remove promo code from cart.
     *
     */
    public function testRemoveCartPromoCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removePromoCodeUserPromotionLimit
     *
     * Decrease promo code limit for specified user.
     *
     */
    public function testRemovePromoCodeUserPromotionLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setPromoCodeUserPromotionLimit
     *
     * Set promo code limit for specified user.
     *
     */
    public function testSetPromoCodeUserPromotionLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePromoCode
     *
     * Update promo code promotion.
     *
     */
    public function testUpdatePromoCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}

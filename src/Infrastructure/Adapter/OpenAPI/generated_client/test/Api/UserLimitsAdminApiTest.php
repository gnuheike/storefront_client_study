<?php
/**
 * UserLimitsAdminApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shop Builder API
 *
 * # Overview  * **Version:** 2.0.0 * **Servers**: `https://store.xsolla.com/api` * **[Contact Us by Email](mailto:integration@xsolla.com)** * **Contact URL:** https://xsolla.com/ * **Required TLS version:** 1.2  Shop Builder API provides a third-party solution for implementing the server side for your store interface. Use the endpoints to manage in-game items, in-game currencies, cart, player inventory, promotions, game library, etc.  # Download API definition  You can download the API definition in two formats: - [YAML](https://api.redocly.com/registry/bundle/xsolla/store-en/v1/openapi.yaml) - [JSON](https://api.redocly.com/registry/bundle/xsolla/store-en/v1/openapi.json)
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserLimitsAdminApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserLimitsAdminApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addUserItemLimit
     *
     * Increase number of items available to specified user.
     *
     */
    public function testAddUserItemLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addUserPromotionLimit
     *
     * Increase promotion limit for specified user.
     *
     */
    public function testAddUserPromotionLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUserItemLimit
     *
     * Get number of items available to specified user.
     *
     */
    public function testGetUserItemLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUserPromotionLimit
     *
     * Get promotion limit for specified user.
     *
     */
    public function testGetUserPromotionLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeUserItemLimit
     *
     * Decrease number of items available to specified user.
     *
     */
    public function testRemoveUserItemLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeUserPromotionLimit
     *
     * Decrease promotion limit for specified user.
     *
     */
    public function testRemoveUserPromotionLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetAllUserItemsLimit
     *
     * Refresh all purchase limits for specified user.
     *
     */
    public function testResetAllUserItemsLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetAllUserPromotionsLimit
     *
     * Refresh all promotion limits for specified user.
     *
     */
    public function testResetAllUserPromotionsLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetUserItemLimit
     *
     * Refresh purchase limit.
     *
     */
    public function testResetUserItemLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetUserPromotionLimit
     *
     * Refresh promotion limit for users.
     *
     */
    public function testResetUserPromotionLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setUserItemLimit
     *
     * Set number of items available to specified user.
     *
     */
    public function testSetUserItemLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setUserPromotionLimit
     *
     * Set promotion limit for specified user.
     *
     */
    public function testSetUserPromotionLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
